
vuln:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 7f 00 00 	mov    0x7fd9(%rip),%rax        # 8fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 f2 7e 00 00    	pushq  0x7ef2(%rip)        # 8f18 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 f3 7e 00 00 	bnd jmpq *0x7ef3(%rip)        # 8f20 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	pushq  $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmpq 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	pushq  $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmpq 1020 <.plt>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	pushq  $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmpq 1020 <.plt>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	pushq  $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmpq 1020 <.plt>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	pushq  $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmpq 1020 <.plt>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	pushq  $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmpq 1020 <.plt>
    110f:	90                   	nop
    1110:	f3 0f 1e fa          	endbr64 
    1114:	68 0e 00 00 00       	pushq  $0xe
    1119:	f2 e9 01 ff ff ff    	bnd jmpq 1020 <.plt>
    111f:	90                   	nop
    1120:	f3 0f 1e fa          	endbr64 
    1124:	68 0f 00 00 00       	pushq  $0xf
    1129:	f2 e9 f1 fe ff ff    	bnd jmpq 1020 <.plt>
    112f:	90                   	nop
    1130:	f3 0f 1e fa          	endbr64 
    1134:	68 10 00 00 00       	pushq  $0x10
    1139:	f2 e9 e1 fe ff ff    	bnd jmpq 1020 <.plt>
    113f:	90                   	nop
    1140:	f3 0f 1e fa          	endbr64 
    1144:	68 11 00 00 00       	pushq  $0x11
    1149:	f2 e9 d1 fe ff ff    	bnd jmpq 1020 <.plt>
    114f:	90                   	nop
    1150:	f3 0f 1e fa          	endbr64 
    1154:	68 12 00 00 00       	pushq  $0x12
    1159:	f2 e9 c1 fe ff ff    	bnd jmpq 1020 <.plt>
    115f:	90                   	nop
    1160:	f3 0f 1e fa          	endbr64 
    1164:	68 13 00 00 00       	pushq  $0x13
    1169:	f2 e9 b1 fe ff ff    	bnd jmpq 1020 <.plt>
    116f:	90                   	nop
    1170:	f3 0f 1e fa          	endbr64 
    1174:	68 14 00 00 00       	pushq  $0x14
    1179:	f2 e9 a1 fe ff ff    	bnd jmpq 1020 <.plt>
    117f:	90                   	nop
    1180:	f3 0f 1e fa          	endbr64 
    1184:	68 15 00 00 00       	pushq  $0x15
    1189:	f2 e9 91 fe ff ff    	bnd jmpq 1020 <.plt>
    118f:	90                   	nop

Disassembly of section .plt.got:

0000000000001190 <__cxa_finalize@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 5d 7e 00 00 	bnd jmpq *0x7e5d(%rip)        # 8ff8 <__cxa_finalize@GLIBC_2.2.5>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000011a0 <srandom@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 7d 7d 00 00 	bnd jmpq *0x7d7d(%rip)        # 8f28 <srandom@GLIBC_2.2.5>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <strncmp@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 75 7d 00 00 	bnd jmpq *0x7d75(%rip)        # 8f30 <strncmp@GLIBC_2.2.5>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011c0 <strcpy@plt>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	f2 ff 25 6d 7d 00 00 	bnd jmpq *0x7d6d(%rip)        # 8f38 <strcpy@GLIBC_2.2.5>
    11cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011d0 <strlen@plt>:
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	f2 ff 25 65 7d 00 00 	bnd jmpq *0x7d65(%rip)        # 8f40 <strlen@GLIBC_2.2.5>
    11db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011e0 <__stack_chk_fail@plt>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	f2 ff 25 5d 7d 00 00 	bnd jmpq *0x7d5d(%rip)        # 8f48 <__stack_chk_fail@GLIBC_2.4>
    11eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011f0 <mmap@plt>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	f2 ff 25 55 7d 00 00 	bnd jmpq *0x7d55(%rip)        # 8f50 <mmap@GLIBC_2.2.5>
    11fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001200 <printf@plt>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	f2 ff 25 4d 7d 00 00 	bnd jmpq *0x7d4d(%rip)        # 8f58 <printf@GLIBC_2.2.5>
    120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001210 <__assert_fail@plt>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	f2 ff 25 45 7d 00 00 	bnd jmpq *0x7d45(%rip)        # 8f60 <__assert_fail@GLIBC_2.2.5>
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001220 <fputc@plt>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	f2 ff 25 3d 7d 00 00 	bnd jmpq *0x7d3d(%rip)        # 8f68 <fputc@GLIBC_2.2.5>
    122b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001230 <read@plt>:
    1230:	f3 0f 1e fa          	endbr64 
    1234:	f2 ff 25 35 7d 00 00 	bnd jmpq *0x7d35(%rip)        # 8f70 <read@GLIBC_2.2.5>
    123b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001240 <fprintf@plt>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	f2 ff 25 2d 7d 00 00 	bnd jmpq *0x7d2d(%rip)        # 8f78 <fprintf@GLIBC_2.2.5>
    124b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001250 <random@plt>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	f2 ff 25 25 7d 00 00 	bnd jmpq *0x7d25(%rip)        # 8f80 <random@GLIBC_2.2.5>
    125b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001260 <fflush@plt>:
    1260:	f3 0f 1e fa          	endbr64 
    1264:	f2 ff 25 1d 7d 00 00 	bnd jmpq *0x7d1d(%rip)        # 8f88 <fflush@GLIBC_2.2.5>
    126b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001270 <memmove@plt>:
    1270:	f3 0f 1e fa          	endbr64 
    1274:	f2 ff 25 15 7d 00 00 	bnd jmpq *0x7d15(%rip)        # 8f90 <memmove@GLIBC_2.2.5>
    127b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001280 <perror@plt>:
    1280:	f3 0f 1e fa          	endbr64 
    1284:	f2 ff 25 0d 7d 00 00 	bnd jmpq *0x7d0d(%rip)        # 8f98 <perror@GLIBC_2.2.5>
    128b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001290 <atoi@plt>:
    1290:	f3 0f 1e fa          	endbr64 
    1294:	f2 ff 25 05 7d 00 00 	bnd jmpq *0x7d05(%rip)        # 8fa0 <atoi@GLIBC_2.2.5>
    129b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012a0 <exit@plt>:
    12a0:	f3 0f 1e fa          	endbr64 
    12a4:	f2 ff 25 fd 7c 00 00 	bnd jmpq *0x7cfd(%rip)        # 8fa8 <exit@GLIBC_2.2.5>
    12ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012b0 <fwrite@plt>:
    12b0:	f3 0f 1e fa          	endbr64 
    12b4:	f2 ff 25 f5 7c 00 00 	bnd jmpq *0x7cf5(%rip)        # 8fb0 <fwrite@GLIBC_2.2.5>
    12bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012c0 <execl@plt>:
    12c0:	f3 0f 1e fa          	endbr64 
    12c4:	f2 ff 25 ed 7c 00 00 	bnd jmpq *0x7ced(%rip)        # 8fb8 <execl@GLIBC_2.2.5>
    12cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012d0 <wait@plt>:
    12d0:	f3 0f 1e fa          	endbr64 
    12d4:	f2 ff 25 e5 7c 00 00 	bnd jmpq *0x7ce5(%rip)        # 8fc0 <wait@GLIBC_2.2.5>
    12db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012e0 <fork@plt>:
    12e0:	f3 0f 1e fa          	endbr64 
    12e4:	f2 ff 25 dd 7c 00 00 	bnd jmpq *0x7cdd(%rip)        # 8fc8 <fork@GLIBC_2.2.5>
    12eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012f0 <__ctype_b_loc@plt>:
    12f0:	f3 0f 1e fa          	endbr64 
    12f4:	f2 ff 25 d5 7c 00 00 	bnd jmpq *0x7cd5(%rip)        # 8fd0 <__ctype_b_loc@GLIBC_2.3>
    12fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001300 <_start>:
    1300:	f3 0f 1e fa          	endbr64 
    1304:	31 ed                	xor    %ebp,%ebp
    1306:	49 89 d1             	mov    %rdx,%r9
    1309:	5e                   	pop    %rsi
    130a:	48 89 e2             	mov    %rsp,%rdx
    130d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1311:	50                   	push   %rax
    1312:	54                   	push   %rsp
    1313:	4c 8d 05 96 50 00 00 	lea    0x5096(%rip),%r8        # 63b0 <__libc_csu_fini>
    131a:	48 8d 0d 1f 50 00 00 	lea    0x501f(%rip),%rcx        # 6340 <__libc_csu_init>
    1321:	48 8d 3d e2 4a 00 00 	lea    0x4ae2(%rip),%rdi        # 5e0a <main>
    1328:	ff 15 b2 7c 00 00    	callq  *0x7cb2(%rip)        # 8fe0 <__libc_start_main@GLIBC_2.2.5>
    132e:	f4                   	hlt    
    132f:	90                   	nop

0000000000001330 <deregister_tm_clones>:
    1330:	48 8d 3d 19 7d 00 00 	lea    0x7d19(%rip),%rdi        # 9050 <__TMC_END__>
    1337:	48 8d 05 12 7d 00 00 	lea    0x7d12(%rip),%rax        # 9050 <__TMC_END__>
    133e:	48 39 f8             	cmp    %rdi,%rax
    1341:	74 15                	je     1358 <deregister_tm_clones+0x28>
    1343:	48 8b 05 8e 7c 00 00 	mov    0x7c8e(%rip),%rax        # 8fd8 <_ITM_deregisterTMCloneTable>
    134a:	48 85 c0             	test   %rax,%rax
    134d:	74 09                	je     1358 <deregister_tm_clones+0x28>
    134f:	ff e0                	jmpq   *%rax
    1351:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1358:	c3                   	retq   
    1359:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001360 <register_tm_clones>:
    1360:	48 8d 3d e9 7c 00 00 	lea    0x7ce9(%rip),%rdi        # 9050 <__TMC_END__>
    1367:	48 8d 35 e2 7c 00 00 	lea    0x7ce2(%rip),%rsi        # 9050 <__TMC_END__>
    136e:	48 29 fe             	sub    %rdi,%rsi
    1371:	48 89 f0             	mov    %rsi,%rax
    1374:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1378:	48 c1 f8 03          	sar    $0x3,%rax
    137c:	48 01 c6             	add    %rax,%rsi
    137f:	48 d1 fe             	sar    %rsi
    1382:	74 14                	je     1398 <register_tm_clones+0x38>
    1384:	48 8b 05 65 7c 00 00 	mov    0x7c65(%rip),%rax        # 8ff0 <_ITM_registerTMCloneTable>
    138b:	48 85 c0             	test   %rax,%rax
    138e:	74 08                	je     1398 <register_tm_clones+0x38>
    1390:	ff e0                	jmpq   *%rax
    1392:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1398:	c3                   	retq   
    1399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000013a0 <__do_global_dtors_aux>:
    13a0:	f3 0f 1e fa          	endbr64 
    13a4:	80 3d dd 7c 00 00 00 	cmpb   $0x0,0x7cdd(%rip)        # 9088 <completed.8061>
    13ab:	75 2b                	jne    13d8 <__do_global_dtors_aux+0x38>
    13ad:	55                   	push   %rbp
    13ae:	48 83 3d 42 7c 00 00 	cmpq   $0x0,0x7c42(%rip)        # 8ff8 <__cxa_finalize@GLIBC_2.2.5>
    13b5:	00 
    13b6:	48 89 e5             	mov    %rsp,%rbp
    13b9:	74 0c                	je     13c7 <__do_global_dtors_aux+0x27>
    13bb:	48 8b 3d 46 7c 00 00 	mov    0x7c46(%rip),%rdi        # 9008 <__dso_handle>
    13c2:	e8 c9 fd ff ff       	callq  1190 <__cxa_finalize@plt>
    13c7:	e8 64 ff ff ff       	callq  1330 <deregister_tm_clones>
    13cc:	c6 05 b5 7c 00 00 01 	movb   $0x1,0x7cb5(%rip)        # 9088 <completed.8061>
    13d3:	5d                   	pop    %rbp
    13d4:	c3                   	retq   
    13d5:	0f 1f 00             	nopl   (%rax)
    13d8:	c3                   	retq   
    13d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000013e0 <frame_dummy>:
    13e0:	f3 0f 1e fa          	endbr64 
    13e4:	e9 77 ff ff ff       	jmpq   1360 <register_tm_clones>

00000000000013e9 <print_escaped>:
         perror(""); \
         exit(1);\
      }\
   } while (0)

void print_escaped(FILE *fp, const char* buf, unsigned len) {
    13e9:	f3 0f 1e fa          	endbr64 
    13ed:	55                   	push   %rbp
    13ee:	48 89 e5             	mov    %rsp,%rbp
    13f1:	48 83 ec 30          	sub    $0x30,%rsp
    13f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    13f9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    13fd:	89 55 dc             	mov    %edx,-0x24(%rbp)
   long i;
   for (i=0; i < len; i++) {
    1400:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    1407:	00 
    1408:	e9 af 00 00 00       	jmpq   14bc <print_escaped+0xd3>
      if (isprint(buf[i])) {
    140d:	e8 de fe ff ff       	callq  12f0 <__ctype_b_loc@plt>
    1412:	48 8b 00             	mov    (%rax),%rax
    1415:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1419:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    141d:	48 01 ca             	add    %rcx,%rdx
    1420:	0f b6 12             	movzbl (%rdx),%edx
    1423:	48 0f be d2          	movsbq %dl,%rdx
    1427:	48 01 d2             	add    %rdx,%rdx
    142a:	48 01 d0             	add    %rdx,%rax
    142d:	0f b7 00             	movzwl (%rax),%eax
    1430:	0f b7 c0             	movzwl %ax,%eax
    1433:	25 00 40 00 00       	and    $0x4000,%eax
    1438:	85 c0                	test   %eax,%eax
    143a:	74 52                	je     148e <print_escaped+0xa5>
         if (buf[i] == '\\')
    143c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1440:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1444:	48 01 d0             	add    %rdx,%rax
    1447:	0f b6 00             	movzbl (%rax),%eax
    144a:	3c 5c                	cmp    $0x5c,%al
    144c:	75 1f                	jne    146d <print_escaped+0x84>
            fputc(buf[i], fp);
    144e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1452:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1456:	48 01 d0             	add    %rdx,%rax
    1459:	0f b6 00             	movzbl (%rax),%eax
    145c:	0f be c0             	movsbl %al,%eax
    145f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1463:	48 89 d6             	mov    %rdx,%rsi
    1466:	89 c7                	mov    %eax,%edi
    1468:	e8 b3 fd ff ff       	callq  1220 <fputc@plt>
         fputc(buf[i], fp);
    146d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1471:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1475:	48 01 d0             	add    %rdx,%rax
    1478:	0f b6 00             	movzbl (%rax),%eax
    147b:	0f be c0             	movsbl %al,%eax
    147e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1482:	48 89 d6             	mov    %rdx,%rsi
    1485:	89 c7                	mov    %eax,%edi
    1487:	e8 94 fd ff ff       	callq  1220 <fputc@plt>
    148c:	eb 29                	jmp    14b7 <print_escaped+0xce>
      }
      else fprintf(fp, "\\x%02hhx", buf[i]);
    148e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1492:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1496:	48 01 d0             	add    %rdx,%rax
    1499:	0f b6 00             	movzbl (%rax),%eax
    149c:	0f be d0             	movsbl %al,%edx
    149f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    14a3:	48 8d 35 5e 5b 00 00 	lea    0x5b5e(%rip),%rsi        # 7008 <_IO_stdin_used+0x8>
    14aa:	48 89 c7             	mov    %rax,%rdi
    14ad:	b8 00 00 00 00       	mov    $0x0,%eax
    14b2:	e8 89 fd ff ff       	callq  1240 <fprintf@plt>
   for (i=0; i < len; i++) {
    14b7:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    14bc:	8b 45 dc             	mov    -0x24(%rbp),%eax
    14bf:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    14c3:	0f 8c 44 ff ff ff    	jl     140d <print_escaped+0x24>
   }
}
    14c9:	90                   	nop
    14ca:	90                   	nop
    14cb:	c9                   	leaveq 
    14cc:	c3                   	retq   

00000000000014cd <auth>:

long chkPw(char *cred, char *db_entry);
unsigned min_usize;
/************ Function vulnerable to buffer overflow on stack ***************/

long auth(char *uname, long ulen, char* pass, long plen) {
    14cd:	f3 0f 1e fa          	endbr64 
    14d1:	55                   	push   %rbp
    14d2:	48 89 e5             	mov    %rsp,%rbp
    14d5:	48 83 ec 40          	sub    $0x40,%rsp
    14d9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    14dd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    14e1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    14e5:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    14e9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    14f0:	00 00 
    14f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    14f6:	31 c0                	xor    %eax,%eax
  char *cred; // ***-0x10
  unsigned bufsz; // ***-0x1c
  char **db = valid_logins; // ***-0x18
    14f8:	48 8d 05 21 7b 00 00 	lea    0x7b21(%rip),%rax        # 9020 <valid_logins>
    14ff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

  if (ulen <= min_usize) // BUG: condition is reversed, so the bcopy below
    1503:	8b 05 1f 7c 00 00    	mov    0x7c1f(%rip),%eax        # 9128 <min_usize>
    1509:	89 c0                	mov    %eax,%eax
    150b:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
    150f:	7f 09                	jg     151a <auth+0x4d>
     bufsz = ulen;       // can result in a buffer overflow.
    1511:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1515:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    1518:	eb 09                	jmp    1523 <auth+0x56>
  else bufsz = min_usize;
    151a:	8b 05 08 7c 00 00    	mov    0x7c08(%rip),%eax        # 9128 <min_usize>
    1520:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  bufsz += plen+1;
    1523:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1527:	89 c2                	mov    %eax,%edx
    1529:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    152c:	01 d0                	add    %edx,%eax
    152e:	83 c0 01             	add    $0x1,%eax
    1531:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  cred = alloca(bufsz);
    1534:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1537:	48 8d 50 08          	lea    0x8(%rax),%rdx
    153b:	b8 10 00 00 00       	mov    $0x10,%eax
    1540:	48 83 e8 01          	sub    $0x1,%rax
    1544:	48 01 d0             	add    %rdx,%rax
    1547:	bf 10 00 00 00       	mov    $0x10,%edi
    154c:	ba 00 00 00 00       	mov    $0x0,%edx
    1551:	48 f7 f7             	div    %rdi
    1554:	48 6b c0 10          	imul   $0x10,%rax,%rax
    1558:	48 89 c2             	mov    %rax,%rdx
    155b:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    1562:	48 89 e6             	mov    %rsp,%rsi
    1565:	48 29 d6             	sub    %rdx,%rsi
    1568:	48 89 f2             	mov    %rsi,%rdx
    156b:	48 39 d4             	cmp    %rdx,%rsp
    156e:	74 12                	je     1582 <auth+0xb5>
    1570:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1577:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    157e:	00 00 
    1580:	eb e9                	jmp    156b <auth+0x9e>
    1582:	48 89 c2             	mov    %rax,%rdx
    1585:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    158b:	48 29 d4             	sub    %rdx,%rsp
    158e:	48 89 c2             	mov    %rax,%rdx
    1591:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    1597:	48 85 d2             	test   %rdx,%rdx
    159a:	74 10                	je     15ac <auth+0xdf>
    159c:	25 ff 0f 00 00       	and    $0xfff,%eax
    15a1:	48 83 e8 08          	sub    $0x8,%rax
    15a5:	48 01 e0             	add    %rsp,%rax
    15a8:	48 83 08 00          	orq    $0x0,(%rax)
    15ac:	48 89 e0             	mov    %rsp,%rax
    15af:	48 83 c0 0f          	add    $0xf,%rax
    15b3:	48 c1 e8 04          	shr    $0x4,%rax
    15b7:	48 c1 e0 04          	shl    $0x4,%rax
    15bb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  bcopy(pass, cred, plen);
    15bf:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    15c3:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    15c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    15cb:	48 89 ce             	mov    %rcx,%rsi
    15ce:	48 89 c7             	mov    %rax,%rdi
    15d1:	e8 9a fc ff ff       	callq  1270 <memmove@plt>
  cred[plen] = '_';
    15d6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    15da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    15de:	48 01 d0             	add    %rdx,%rax
    15e1:	c6 00 5f             	movb   $0x5f,(%rax)
  bcopy(uname, &cred[plen+1], ulen); // possible buffer overflow.
    15e4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    15e8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    15ec:	48 8d 48 01          	lea    0x1(%rax),%rcx
    15f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    15f4:	48 01 c1             	add    %rax,%rcx
    15f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15fb:	48 89 c6             	mov    %rax,%rsi
    15fe:	48 89 cf             	mov    %rcx,%rdi
    1601:	e8 6a fc ff ff       	callq  1270 <memmove@plt>

  if (plen == 0 || ulen == 0) return 0;
    1606:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    160b:	74 07                	je     1614 <auth+0x147>
    160d:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    1612:	75 2e                	jne    1642 <auth+0x175>
    1614:	b8 00 00 00 00       	mov    $0x0,%eax
    1619:	eb 38                	jmp    1653 <auth+0x186>
  while (*db)
     if (chkPw(cred, *db))
    161b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    161f:	48 8b 10             	mov    (%rax),%rdx
    1622:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1626:	48 89 d6             	mov    %rdx,%rsi
    1629:	48 89 c7             	mov    %rax,%rdi
    162c:	e8 c9 48 00 00       	callq  5efa <chkPw>
    1631:	48 85 c0             	test   %rax,%rax
    1634:	74 07                	je     163d <auth+0x170>
        return 1; 
    1636:	b8 01 00 00 00       	mov    $0x1,%eax
    163b:	eb 16                	jmp    1653 <auth+0x186>
     else db++;
    163d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
  while (*db)
    1642:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1646:	48 8b 00             	mov    (%rax),%rax
    1649:	48 85 c0             	test   %rax,%rax
    164c:	75 cd                	jne    161b <auth+0x14e>

  return 0;
    164e:	b8 00 00 00 00       	mov    $0x0,%eax
}
    1653:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    1657:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    165e:	00 00 
    1660:	74 05                	je     1667 <auth+0x19a>
    1662:	e8 79 fb ff ff       	callq  11e0 <__stack_chk_fail@plt>
    1667:	c9                   	leaveq 
    1668:	c3                   	retq   

0000000000001669 <g>:

long login_attempts;
char *s1 = "/bin/ls";
char *s2 = "/bin/false";
void g(char *uname, long ulen, char* pass, long plen) {
    1669:	f3 0f 1e fa          	endbr64 
    166d:	55                   	push   %rbp
    166e:	48 89 e5             	mov    %rsp,%rbp
    1671:	48 83 ec 40          	sub    $0x40,%rsp
    1675:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1679:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    167d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    1681:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  long authd=0;
    1685:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    168c:	00 
  long a=5, b=6;
    168d:	48 c7 45 f0 05 00 00 	movq   $0x5,-0x10(%rbp)
    1694:	00 
    1695:	48 c7 45 f8 06 00 00 	movq   $0x6,-0x8(%rbp)
    169c:	00 
  authd = auth(uname, ulen, pass, plen);
    169d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    16a1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    16a5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    16a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    16ad:	48 89 c7             	mov    %rax,%rdi
    16b0:	e8 18 fe ff ff       	callq  14cd <auth>
    16b5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

  if (authd) {
    16b9:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    16be:	74 45                	je     1705 <g+0x9c>
     // Successfully authenticated, now provide service: List current directory
     fprintf(stdout, "Authentication succeeded, here is your output\n");
    16c0:	48 8b 05 99 79 00 00 	mov    0x7999(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    16c7:	48 89 c1             	mov    %rax,%rcx
    16ca:	ba 2e 00 00 00       	mov    $0x2e,%edx
    16cf:	be 01 00 00 00       	mov    $0x1,%esi
    16d4:	48 8d 3d 85 59 00 00 	lea    0x5985(%rip),%rdi        # 7060 <_IO_stdin_used+0x60>
    16db:	e8 d0 fb ff ff       	callq  12b0 <fwrite@plt>
     execl(s1, "ls", NULL);
    16e0:	48 8b 05 59 79 00 00 	mov    0x7959(%rip),%rax        # 9040 <s1>
    16e7:	ba 00 00 00 00       	mov    $0x0,%edx
    16ec:	48 8d 35 9c 59 00 00 	lea    0x599c(%rip),%rsi        # 708f <_IO_stdin_used+0x8f>
    16f3:	48 89 c7             	mov    %rax,%rdi
    16f6:	b8 00 00 00 00       	mov    $0x0,%eax
    16fb:	e8 c0 fb ff ff       	callq  12c0 <execl@plt>
        err_abort(execl(s2, "false", NULL)>=0); // a program that prints an error
     }
     else fprintf(stdout, "Try again");
     fflush(stdout);
  }
}
    1700:	e9 ec 00 00 00       	jmpq   17f1 <g+0x188>
     fprintf(stdout, "Login denied. ");
    1705:	48 8b 05 54 79 00 00 	mov    0x7954(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    170c:	48 89 c1             	mov    %rax,%rcx
    170f:	ba 0e 00 00 00       	mov    $0xe,%edx
    1714:	be 01 00 00 00       	mov    $0x1,%esi
    1719:	48 8d 3d 72 59 00 00 	lea    0x5972(%rip),%rdi        # 7092 <_IO_stdin_used+0x92>
    1720:	e8 8b fb ff ff       	callq  12b0 <fwrite@plt>
     if (login_attempts++ > 3) {
    1725:	48 8b 05 f4 79 00 00 	mov    0x79f4(%rip),%rax        # 9120 <login_attempts>
    172c:	48 8d 50 01          	lea    0x1(%rax),%rdx
    1730:	48 89 15 e9 79 00 00 	mov    %rdx,0x79e9(%rip)        # 9120 <login_attempts>
    1737:	48 83 f8 03          	cmp    $0x3,%rax
    173b:	0f 8e 81 00 00 00    	jle    17c2 <g+0x159>
        fprintf(stdout, "Too many failures, aborting session");
    1741:	48 8b 05 18 79 00 00 	mov    0x7918(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    1748:	48 89 c1             	mov    %rax,%rcx
    174b:	ba 23 00 00 00       	mov    $0x23,%edx
    1750:	be 01 00 00 00       	mov    $0x1,%esi
    1755:	48 8d 3d 4c 59 00 00 	lea    0x594c(%rip),%rdi        # 70a8 <_IO_stdin_used+0xa8>
    175c:	e8 4f fb ff ff       	callq  12b0 <fwrite@plt>
        err_abort(execl(s2, "false", NULL)>=0); // a program that prints an error
    1761:	48 8b 05 e0 78 00 00 	mov    0x78e0(%rip),%rax        # 9048 <s2>
    1768:	ba 00 00 00 00       	mov    $0x0,%edx
    176d:	48 8d 35 58 59 00 00 	lea    0x5958(%rip),%rsi        # 70cc <_IO_stdin_used+0xcc>
    1774:	48 89 c7             	mov    %rax,%rdi
    1777:	b8 00 00 00 00       	mov    $0x0,%eax
    177c:	e8 3f fb ff ff       	callq  12c0 <execl@plt>
    1781:	85 c0                	test   %eax,%eax
    1783:	79 5d                	jns    17e2 <g+0x179>
    1785:	48 8b 05 f4 78 00 00 	mov    0x78f4(%rip),%rax        # 9080 <stderr@@GLIBC_2.2.5>
    178c:	b9 58 00 00 00       	mov    $0x58,%ecx
    1791:	48 8d 15 3a 59 00 00 	lea    0x593a(%rip),%rdx        # 70d2 <_IO_stdin_used+0xd2>
    1798:	48 8d 35 3a 59 00 00 	lea    0x593a(%rip),%rsi        # 70d9 <_IO_stdin_used+0xd9>
    179f:	48 89 c7             	mov    %rax,%rdi
    17a2:	b8 00 00 00 00       	mov    $0x0,%eax
    17a7:	e8 94 fa ff ff       	callq  1240 <fprintf@plt>
    17ac:	48 8d 3d 3b 59 00 00 	lea    0x593b(%rip),%rdi        # 70ee <_IO_stdin_used+0xee>
    17b3:	e8 c8 fa ff ff       	callq  1280 <perror@plt>
    17b8:	bf 01 00 00 00       	mov    $0x1,%edi
    17bd:	e8 de fa ff ff       	callq  12a0 <exit@plt>
     else fprintf(stdout, "Try again");
    17c2:	48 8b 05 97 78 00 00 	mov    0x7897(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    17c9:	48 89 c1             	mov    %rax,%rcx
    17cc:	ba 09 00 00 00       	mov    $0x9,%edx
    17d1:	be 01 00 00 00       	mov    $0x1,%esi
    17d6:	48 8d 3d 12 59 00 00 	lea    0x5912(%rip),%rdi        # 70ef <_IO_stdin_used+0xef>
    17dd:	e8 ce fa ff ff       	callq  12b0 <fwrite@plt>
     fflush(stdout);
    17e2:	48 8b 05 77 78 00 00 	mov    0x7877(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    17e9:	48 89 c7             	mov    %rax,%rdi
    17ec:	e8 6f fa ff ff       	callq  1260 <fflush@plt>
}
    17f1:	90                   	nop
    17f2:	c9                   	leaveq 
    17f3:	c3                   	retq   

00000000000017f4 <padding>:

#ifndef ASM_ONLY
void padding() {
    17f4:	f3 0f 1e fa          	endbr64 
    17f8:	55                   	push   %rbp
    17f9:	48 89 e5             	mov    %rsp,%rbp
int j;
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    17fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1803:	eb 21                	jmp    1826 <padding+0x32>
    1805:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    180c:	eb 0e                	jmp    181c <padding+0x28>
    180e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1811:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1815:	01 45 f8             	add    %eax,-0x8(%rbp)
    1818:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    181c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1820:	7e ec                	jle    180e <padding+0x1a>
    1822:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1826:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    182a:	7e d9                	jle    1805 <padding+0x11>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    182c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1833:	eb 21                	jmp    1856 <padding+0x62>
    1835:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    183c:	eb 0e                	jmp    184c <padding+0x58>
    183e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1841:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1845:	01 45 f8             	add    %eax,-0x8(%rbp)
    1848:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    184c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1850:	7e ec                	jle    183e <padding+0x4a>
    1852:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1856:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    185a:	7e d9                	jle    1835 <padding+0x41>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    185c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1863:	eb 21                	jmp    1886 <padding+0x92>
    1865:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    186c:	eb 0e                	jmp    187c <padding+0x88>
    186e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1871:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1875:	01 45 f8             	add    %eax,-0x8(%rbp)
    1878:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    187c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1880:	7e ec                	jle    186e <padding+0x7a>
    1882:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1886:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    188a:	7e d9                	jle    1865 <padding+0x71>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    188c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1893:	eb 21                	jmp    18b6 <padding+0xc2>
    1895:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    189c:	eb 0e                	jmp    18ac <padding+0xb8>
    189e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    18a1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    18a5:	01 45 f8             	add    %eax,-0x8(%rbp)
    18a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    18ac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    18b0:	7e ec                	jle    189e <padding+0xaa>
    18b2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    18b6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    18ba:	7e d9                	jle    1895 <padding+0xa1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    18bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    18c3:	eb 21                	jmp    18e6 <padding+0xf2>
    18c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    18cc:	eb 0e                	jmp    18dc <padding+0xe8>
    18ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    18d1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    18d5:	01 45 f8             	add    %eax,-0x8(%rbp)
    18d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    18dc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    18e0:	7e ec                	jle    18ce <padding+0xda>
    18e2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    18e6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    18ea:	7e d9                	jle    18c5 <padding+0xd1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    18ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    18f3:	eb 21                	jmp    1916 <padding+0x122>
    18f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    18fc:	eb 0e                	jmp    190c <padding+0x118>
    18fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1901:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1905:	01 45 f8             	add    %eax,-0x8(%rbp)
    1908:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    190c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1910:	7e ec                	jle    18fe <padding+0x10a>
    1912:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1916:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    191a:	7e d9                	jle    18f5 <padding+0x101>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    191c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1923:	eb 21                	jmp    1946 <padding+0x152>
    1925:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    192c:	eb 0e                	jmp    193c <padding+0x148>
    192e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1931:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1935:	01 45 f8             	add    %eax,-0x8(%rbp)
    1938:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    193c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1940:	7e ec                	jle    192e <padding+0x13a>
    1942:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1946:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    194a:	7e d9                	jle    1925 <padding+0x131>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    194c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1953:	eb 21                	jmp    1976 <padding+0x182>
    1955:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    195c:	eb 0e                	jmp    196c <padding+0x178>
    195e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1961:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1965:	01 45 f8             	add    %eax,-0x8(%rbp)
    1968:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    196c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1970:	7e ec                	jle    195e <padding+0x16a>
    1972:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1976:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    197a:	7e d9                	jle    1955 <padding+0x161>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    197c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1983:	eb 21                	jmp    19a6 <padding+0x1b2>
    1985:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    198c:	eb 0e                	jmp    199c <padding+0x1a8>
    198e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1991:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1995:	01 45 f8             	add    %eax,-0x8(%rbp)
    1998:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    199c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    19a0:	7e ec                	jle    198e <padding+0x19a>
    19a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    19a6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    19aa:	7e d9                	jle    1985 <padding+0x191>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    19ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    19b3:	eb 21                	jmp    19d6 <padding+0x1e2>
    19b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    19bc:	eb 0e                	jmp    19cc <padding+0x1d8>
    19be:	8b 45 f4             	mov    -0xc(%rbp),%eax
    19c1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    19c5:	01 45 f8             	add    %eax,-0x8(%rbp)
    19c8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    19cc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    19d0:	7e ec                	jle    19be <padding+0x1ca>
    19d2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    19d6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    19da:	7e d9                	jle    19b5 <padding+0x1c1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    19dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    19e3:	eb 21                	jmp    1a06 <padding+0x212>
    19e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    19ec:	eb 0e                	jmp    19fc <padding+0x208>
    19ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    19f1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    19f5:	01 45 f8             	add    %eax,-0x8(%rbp)
    19f8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    19fc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1a00:	7e ec                	jle    19ee <padding+0x1fa>
    1a02:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1a06:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1a0a:	7e d9                	jle    19e5 <padding+0x1f1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1a0c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1a13:	eb 21                	jmp    1a36 <padding+0x242>
    1a15:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1a1c:	eb 0e                	jmp    1a2c <padding+0x238>
    1a1e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1a21:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1a25:	01 45 f8             	add    %eax,-0x8(%rbp)
    1a28:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1a2c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1a30:	7e ec                	jle    1a1e <padding+0x22a>
    1a32:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1a36:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1a3a:	7e d9                	jle    1a15 <padding+0x221>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1a3c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1a43:	eb 21                	jmp    1a66 <padding+0x272>
    1a45:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1a4c:	eb 0e                	jmp    1a5c <padding+0x268>
    1a4e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1a51:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1a55:	01 45 f8             	add    %eax,-0x8(%rbp)
    1a58:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1a5c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1a60:	7e ec                	jle    1a4e <padding+0x25a>
    1a62:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1a66:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1a6a:	7e d9                	jle    1a45 <padding+0x251>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1a6c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1a73:	eb 21                	jmp    1a96 <padding+0x2a2>
    1a75:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1a7c:	eb 0e                	jmp    1a8c <padding+0x298>
    1a7e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1a81:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1a85:	01 45 f8             	add    %eax,-0x8(%rbp)
    1a88:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1a8c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1a90:	7e ec                	jle    1a7e <padding+0x28a>
    1a92:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1a96:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1a9a:	7e d9                	jle    1a75 <padding+0x281>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1a9c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1aa3:	eb 21                	jmp    1ac6 <padding+0x2d2>
    1aa5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1aac:	eb 0e                	jmp    1abc <padding+0x2c8>
    1aae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1ab1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1ab5:	01 45 f8             	add    %eax,-0x8(%rbp)
    1ab8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1abc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1ac0:	7e ec                	jle    1aae <padding+0x2ba>
    1ac2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1ac6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1aca:	7e d9                	jle    1aa5 <padding+0x2b1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1acc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1ad3:	eb 21                	jmp    1af6 <padding+0x302>
    1ad5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1adc:	eb 0e                	jmp    1aec <padding+0x2f8>
    1ade:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1ae1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1ae5:	01 45 f8             	add    %eax,-0x8(%rbp)
    1ae8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1aec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1af0:	7e ec                	jle    1ade <padding+0x2ea>
    1af2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1af6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1afa:	7e d9                	jle    1ad5 <padding+0x2e1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1afc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1b03:	eb 21                	jmp    1b26 <padding+0x332>
    1b05:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1b0c:	eb 0e                	jmp    1b1c <padding+0x328>
    1b0e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1b11:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1b15:	01 45 f8             	add    %eax,-0x8(%rbp)
    1b18:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1b1c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1b20:	7e ec                	jle    1b0e <padding+0x31a>
    1b22:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1b26:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1b2a:	7e d9                	jle    1b05 <padding+0x311>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1b2c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1b33:	eb 21                	jmp    1b56 <padding+0x362>
    1b35:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1b3c:	eb 0e                	jmp    1b4c <padding+0x358>
    1b3e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1b41:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1b45:	01 45 f8             	add    %eax,-0x8(%rbp)
    1b48:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1b4c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1b50:	7e ec                	jle    1b3e <padding+0x34a>
    1b52:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1b56:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1b5a:	7e d9                	jle    1b35 <padding+0x341>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1b5c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1b63:	eb 21                	jmp    1b86 <padding+0x392>
    1b65:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1b6c:	eb 0e                	jmp    1b7c <padding+0x388>
    1b6e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1b71:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1b75:	01 45 f8             	add    %eax,-0x8(%rbp)
    1b78:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1b7c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1b80:	7e ec                	jle    1b6e <padding+0x37a>
    1b82:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1b86:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1b8a:	7e d9                	jle    1b65 <padding+0x371>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1b8c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1b93:	eb 21                	jmp    1bb6 <padding+0x3c2>
    1b95:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1b9c:	eb 0e                	jmp    1bac <padding+0x3b8>
    1b9e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1ba1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1ba5:	01 45 f8             	add    %eax,-0x8(%rbp)
    1ba8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1bac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1bb0:	7e ec                	jle    1b9e <padding+0x3aa>
    1bb2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1bb6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1bba:	7e d9                	jle    1b95 <padding+0x3a1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1bbc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1bc3:	eb 21                	jmp    1be6 <padding+0x3f2>
    1bc5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1bcc:	eb 0e                	jmp    1bdc <padding+0x3e8>
    1bce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1bd1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1bd5:	01 45 f8             	add    %eax,-0x8(%rbp)
    1bd8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1bdc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1be0:	7e ec                	jle    1bce <padding+0x3da>
    1be2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1be6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1bea:	7e d9                	jle    1bc5 <padding+0x3d1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1bec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1bf3:	eb 21                	jmp    1c16 <padding+0x422>
    1bf5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1bfc:	eb 0e                	jmp    1c0c <padding+0x418>
    1bfe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1c01:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1c05:	01 45 f8             	add    %eax,-0x8(%rbp)
    1c08:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1c0c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1c10:	7e ec                	jle    1bfe <padding+0x40a>
    1c12:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1c16:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1c1a:	7e d9                	jle    1bf5 <padding+0x401>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1c1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1c23:	eb 21                	jmp    1c46 <padding+0x452>
    1c25:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1c2c:	eb 0e                	jmp    1c3c <padding+0x448>
    1c2e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1c31:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1c35:	01 45 f8             	add    %eax,-0x8(%rbp)
    1c38:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1c3c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1c40:	7e ec                	jle    1c2e <padding+0x43a>
    1c42:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1c46:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1c4a:	7e d9                	jle    1c25 <padding+0x431>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1c4c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1c53:	eb 21                	jmp    1c76 <padding+0x482>
    1c55:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1c5c:	eb 0e                	jmp    1c6c <padding+0x478>
    1c5e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1c61:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1c65:	01 45 f8             	add    %eax,-0x8(%rbp)
    1c68:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1c6c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1c70:	7e ec                	jle    1c5e <padding+0x46a>
    1c72:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1c76:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1c7a:	7e d9                	jle    1c55 <padding+0x461>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1c7c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1c83:	eb 21                	jmp    1ca6 <padding+0x4b2>
    1c85:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1c8c:	eb 0e                	jmp    1c9c <padding+0x4a8>
    1c8e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1c91:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1c95:	01 45 f8             	add    %eax,-0x8(%rbp)
    1c98:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1c9c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1ca0:	7e ec                	jle    1c8e <padding+0x49a>
    1ca2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1ca6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1caa:	7e d9                	jle    1c85 <padding+0x491>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1cac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1cb3:	eb 21                	jmp    1cd6 <padding+0x4e2>
    1cb5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1cbc:	eb 0e                	jmp    1ccc <padding+0x4d8>
    1cbe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1cc1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1cc5:	01 45 f8             	add    %eax,-0x8(%rbp)
    1cc8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1ccc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1cd0:	7e ec                	jle    1cbe <padding+0x4ca>
    1cd2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1cd6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1cda:	7e d9                	jle    1cb5 <padding+0x4c1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1cdc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1ce3:	eb 21                	jmp    1d06 <padding+0x512>
    1ce5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1cec:	eb 0e                	jmp    1cfc <padding+0x508>
    1cee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1cf1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1cf5:	01 45 f8             	add    %eax,-0x8(%rbp)
    1cf8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1cfc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1d00:	7e ec                	jle    1cee <padding+0x4fa>
    1d02:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1d06:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1d0a:	7e d9                	jle    1ce5 <padding+0x4f1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1d0c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1d13:	eb 21                	jmp    1d36 <padding+0x542>
    1d15:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1d1c:	eb 0e                	jmp    1d2c <padding+0x538>
    1d1e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1d21:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1d25:	01 45 f8             	add    %eax,-0x8(%rbp)
    1d28:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1d2c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1d30:	7e ec                	jle    1d1e <padding+0x52a>
    1d32:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1d36:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1d3a:	7e d9                	jle    1d15 <padding+0x521>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1d3c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1d43:	eb 21                	jmp    1d66 <padding+0x572>
    1d45:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1d4c:	eb 0e                	jmp    1d5c <padding+0x568>
    1d4e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1d51:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1d55:	01 45 f8             	add    %eax,-0x8(%rbp)
    1d58:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1d5c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1d60:	7e ec                	jle    1d4e <padding+0x55a>
    1d62:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1d66:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1d6a:	7e d9                	jle    1d45 <padding+0x551>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1d6c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1d73:	eb 21                	jmp    1d96 <padding+0x5a2>
    1d75:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1d7c:	eb 0e                	jmp    1d8c <padding+0x598>
    1d7e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1d81:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1d85:	01 45 f8             	add    %eax,-0x8(%rbp)
    1d88:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1d8c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1d90:	7e ec                	jle    1d7e <padding+0x58a>
    1d92:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1d96:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1d9a:	7e d9                	jle    1d75 <padding+0x581>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1d9c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1da3:	eb 21                	jmp    1dc6 <padding+0x5d2>
    1da5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1dac:	eb 0e                	jmp    1dbc <padding+0x5c8>
    1dae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1db1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1db5:	01 45 f8             	add    %eax,-0x8(%rbp)
    1db8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1dbc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1dc0:	7e ec                	jle    1dae <padding+0x5ba>
    1dc2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1dc6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1dca:	7e d9                	jle    1da5 <padding+0x5b1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1dcc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1dd3:	eb 21                	jmp    1df6 <padding+0x602>
    1dd5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1ddc:	eb 0e                	jmp    1dec <padding+0x5f8>
    1dde:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1de1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1de5:	01 45 f8             	add    %eax,-0x8(%rbp)
    1de8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1dec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1df0:	7e ec                	jle    1dde <padding+0x5ea>
    1df2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1df6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1dfa:	7e d9                	jle    1dd5 <padding+0x5e1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1dfc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1e03:	eb 21                	jmp    1e26 <padding+0x632>
    1e05:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1e0c:	eb 0e                	jmp    1e1c <padding+0x628>
    1e0e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1e11:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1e15:	01 45 f8             	add    %eax,-0x8(%rbp)
    1e18:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1e1c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1e20:	7e ec                	jle    1e0e <padding+0x61a>
    1e22:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1e26:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1e2a:	7e d9                	jle    1e05 <padding+0x611>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1e2c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1e33:	eb 21                	jmp    1e56 <padding+0x662>
    1e35:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1e3c:	eb 0e                	jmp    1e4c <padding+0x658>
    1e3e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1e41:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1e45:	01 45 f8             	add    %eax,-0x8(%rbp)
    1e48:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1e4c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1e50:	7e ec                	jle    1e3e <padding+0x64a>
    1e52:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1e56:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1e5a:	7e d9                	jle    1e35 <padding+0x641>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1e5c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1e63:	eb 21                	jmp    1e86 <padding+0x692>
    1e65:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1e6c:	eb 0e                	jmp    1e7c <padding+0x688>
    1e6e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1e71:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1e75:	01 45 f8             	add    %eax,-0x8(%rbp)
    1e78:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1e7c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1e80:	7e ec                	jle    1e6e <padding+0x67a>
    1e82:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1e86:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1e8a:	7e d9                	jle    1e65 <padding+0x671>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1e8c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1e93:	eb 21                	jmp    1eb6 <padding+0x6c2>
    1e95:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1e9c:	eb 0e                	jmp    1eac <padding+0x6b8>
    1e9e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1ea1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1ea5:	01 45 f8             	add    %eax,-0x8(%rbp)
    1ea8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1eac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1eb0:	7e ec                	jle    1e9e <padding+0x6aa>
    1eb2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1eb6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1eba:	7e d9                	jle    1e95 <padding+0x6a1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1ebc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1ec3:	eb 21                	jmp    1ee6 <padding+0x6f2>
    1ec5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1ecc:	eb 0e                	jmp    1edc <padding+0x6e8>
    1ece:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1ed1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1ed5:	01 45 f8             	add    %eax,-0x8(%rbp)
    1ed8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1edc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1ee0:	7e ec                	jle    1ece <padding+0x6da>
    1ee2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1ee6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1eea:	7e d9                	jle    1ec5 <padding+0x6d1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1eec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1ef3:	eb 21                	jmp    1f16 <padding+0x722>
    1ef5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1efc:	eb 0e                	jmp    1f0c <padding+0x718>
    1efe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1f01:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1f05:	01 45 f8             	add    %eax,-0x8(%rbp)
    1f08:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1f0c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1f10:	7e ec                	jle    1efe <padding+0x70a>
    1f12:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1f16:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1f1a:	7e d9                	jle    1ef5 <padding+0x701>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1f1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1f23:	eb 21                	jmp    1f46 <padding+0x752>
    1f25:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1f2c:	eb 0e                	jmp    1f3c <padding+0x748>
    1f2e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1f31:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1f35:	01 45 f8             	add    %eax,-0x8(%rbp)
    1f38:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1f3c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1f40:	7e ec                	jle    1f2e <padding+0x73a>
    1f42:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1f46:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1f4a:	7e d9                	jle    1f25 <padding+0x731>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1f4c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1f53:	eb 21                	jmp    1f76 <padding+0x782>
    1f55:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1f5c:	eb 0e                	jmp    1f6c <padding+0x778>
    1f5e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1f61:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1f65:	01 45 f8             	add    %eax,-0x8(%rbp)
    1f68:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1f6c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1f70:	7e ec                	jle    1f5e <padding+0x76a>
    1f72:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1f76:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1f7a:	7e d9                	jle    1f55 <padding+0x761>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1f7c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1f83:	eb 21                	jmp    1fa6 <padding+0x7b2>
    1f85:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1f8c:	eb 0e                	jmp    1f9c <padding+0x7a8>
    1f8e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1f91:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1f95:	01 45 f8             	add    %eax,-0x8(%rbp)
    1f98:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1f9c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1fa0:	7e ec                	jle    1f8e <padding+0x79a>
    1fa2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1fa6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1faa:	7e d9                	jle    1f85 <padding+0x791>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1fac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1fb3:	eb 21                	jmp    1fd6 <padding+0x7e2>
    1fb5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1fbc:	eb 0e                	jmp    1fcc <padding+0x7d8>
    1fbe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1fc1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1fc5:	01 45 f8             	add    %eax,-0x8(%rbp)
    1fc8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1fcc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    1fd0:	7e ec                	jle    1fbe <padding+0x7ca>
    1fd2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1fd6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    1fda:	7e d9                	jle    1fb5 <padding+0x7c1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    1fdc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1fe3:	eb 21                	jmp    2006 <padding+0x812>
    1fe5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1fec:	eb 0e                	jmp    1ffc <padding+0x808>
    1fee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1ff1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1ff5:	01 45 f8             	add    %eax,-0x8(%rbp)
    1ff8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1ffc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2000:	7e ec                	jle    1fee <padding+0x7fa>
    2002:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2006:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    200a:	7e d9                	jle    1fe5 <padding+0x7f1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    200c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2013:	eb 21                	jmp    2036 <padding+0x842>
    2015:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    201c:	eb 0e                	jmp    202c <padding+0x838>
    201e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2021:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2025:	01 45 f8             	add    %eax,-0x8(%rbp)
    2028:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    202c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2030:	7e ec                	jle    201e <padding+0x82a>
    2032:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2036:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    203a:	7e d9                	jle    2015 <padding+0x821>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    203c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2043:	eb 21                	jmp    2066 <padding+0x872>
    2045:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    204c:	eb 0e                	jmp    205c <padding+0x868>
    204e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2051:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2055:	01 45 f8             	add    %eax,-0x8(%rbp)
    2058:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    205c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2060:	7e ec                	jle    204e <padding+0x85a>
    2062:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2066:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    206a:	7e d9                	jle    2045 <padding+0x851>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    206c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2073:	eb 21                	jmp    2096 <padding+0x8a2>
    2075:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    207c:	eb 0e                	jmp    208c <padding+0x898>
    207e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2081:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2085:	01 45 f8             	add    %eax,-0x8(%rbp)
    2088:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    208c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2090:	7e ec                	jle    207e <padding+0x88a>
    2092:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2096:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    209a:	7e d9                	jle    2075 <padding+0x881>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    209c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    20a3:	eb 21                	jmp    20c6 <padding+0x8d2>
    20a5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    20ac:	eb 0e                	jmp    20bc <padding+0x8c8>
    20ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    20b1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    20b5:	01 45 f8             	add    %eax,-0x8(%rbp)
    20b8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    20bc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    20c0:	7e ec                	jle    20ae <padding+0x8ba>
    20c2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    20c6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    20ca:	7e d9                	jle    20a5 <padding+0x8b1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    20cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    20d3:	eb 21                	jmp    20f6 <padding+0x902>
    20d5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    20dc:	eb 0e                	jmp    20ec <padding+0x8f8>
    20de:	8b 45 f4             	mov    -0xc(%rbp),%eax
    20e1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    20e5:	01 45 f8             	add    %eax,-0x8(%rbp)
    20e8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    20ec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    20f0:	7e ec                	jle    20de <padding+0x8ea>
    20f2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    20f6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    20fa:	7e d9                	jle    20d5 <padding+0x8e1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    20fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2103:	eb 21                	jmp    2126 <padding+0x932>
    2105:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    210c:	eb 0e                	jmp    211c <padding+0x928>
    210e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2111:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2115:	01 45 f8             	add    %eax,-0x8(%rbp)
    2118:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    211c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2120:	7e ec                	jle    210e <padding+0x91a>
    2122:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2126:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    212a:	7e d9                	jle    2105 <padding+0x911>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    212c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2133:	eb 21                	jmp    2156 <padding+0x962>
    2135:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    213c:	eb 0e                	jmp    214c <padding+0x958>
    213e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2141:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2145:	01 45 f8             	add    %eax,-0x8(%rbp)
    2148:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    214c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2150:	7e ec                	jle    213e <padding+0x94a>
    2152:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2156:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    215a:	7e d9                	jle    2135 <padding+0x941>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    215c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2163:	eb 21                	jmp    2186 <padding+0x992>
    2165:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    216c:	eb 0e                	jmp    217c <padding+0x988>
    216e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2171:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2175:	01 45 f8             	add    %eax,-0x8(%rbp)
    2178:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    217c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2180:	7e ec                	jle    216e <padding+0x97a>
    2182:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2186:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    218a:	7e d9                	jle    2165 <padding+0x971>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    218c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2193:	eb 21                	jmp    21b6 <padding+0x9c2>
    2195:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    219c:	eb 0e                	jmp    21ac <padding+0x9b8>
    219e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    21a1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    21a5:	01 45 f8             	add    %eax,-0x8(%rbp)
    21a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    21ac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    21b0:	7e ec                	jle    219e <padding+0x9aa>
    21b2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    21b6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    21ba:	7e d9                	jle    2195 <padding+0x9a1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    21bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    21c3:	eb 21                	jmp    21e6 <padding+0x9f2>
    21c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    21cc:	eb 0e                	jmp    21dc <padding+0x9e8>
    21ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    21d1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    21d5:	01 45 f8             	add    %eax,-0x8(%rbp)
    21d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    21dc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    21e0:	7e ec                	jle    21ce <padding+0x9da>
    21e2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    21e6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    21ea:	7e d9                	jle    21c5 <padding+0x9d1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    21ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    21f3:	eb 21                	jmp    2216 <padding+0xa22>
    21f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    21fc:	eb 0e                	jmp    220c <padding+0xa18>
    21fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2201:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2205:	01 45 f8             	add    %eax,-0x8(%rbp)
    2208:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    220c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2210:	7e ec                	jle    21fe <padding+0xa0a>
    2212:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2216:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    221a:	7e d9                	jle    21f5 <padding+0xa01>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    221c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2223:	eb 21                	jmp    2246 <padding+0xa52>
    2225:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    222c:	eb 0e                	jmp    223c <padding+0xa48>
    222e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2231:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2235:	01 45 f8             	add    %eax,-0x8(%rbp)
    2238:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    223c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2240:	7e ec                	jle    222e <padding+0xa3a>
    2242:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2246:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    224a:	7e d9                	jle    2225 <padding+0xa31>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    224c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2253:	eb 21                	jmp    2276 <padding+0xa82>
    2255:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    225c:	eb 0e                	jmp    226c <padding+0xa78>
    225e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2261:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2265:	01 45 f8             	add    %eax,-0x8(%rbp)
    2268:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    226c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2270:	7e ec                	jle    225e <padding+0xa6a>
    2272:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2276:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    227a:	7e d9                	jle    2255 <padding+0xa61>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    227c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2283:	eb 21                	jmp    22a6 <padding+0xab2>
    2285:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    228c:	eb 0e                	jmp    229c <padding+0xaa8>
    228e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2291:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2295:	01 45 f8             	add    %eax,-0x8(%rbp)
    2298:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    229c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    22a0:	7e ec                	jle    228e <padding+0xa9a>
    22a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    22a6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    22aa:	7e d9                	jle    2285 <padding+0xa91>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    22ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    22b3:	eb 21                	jmp    22d6 <padding+0xae2>
    22b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    22bc:	eb 0e                	jmp    22cc <padding+0xad8>
    22be:	8b 45 f4             	mov    -0xc(%rbp),%eax
    22c1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    22c5:	01 45 f8             	add    %eax,-0x8(%rbp)
    22c8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    22cc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    22d0:	7e ec                	jle    22be <padding+0xaca>
    22d2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    22d6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    22da:	7e d9                	jle    22b5 <padding+0xac1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    22dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    22e3:	eb 21                	jmp    2306 <padding+0xb12>
    22e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    22ec:	eb 0e                	jmp    22fc <padding+0xb08>
    22ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    22f1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    22f5:	01 45 f8             	add    %eax,-0x8(%rbp)
    22f8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    22fc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2300:	7e ec                	jle    22ee <padding+0xafa>
    2302:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2306:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    230a:	7e d9                	jle    22e5 <padding+0xaf1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    230c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2313:	eb 21                	jmp    2336 <padding+0xb42>
    2315:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    231c:	eb 0e                	jmp    232c <padding+0xb38>
    231e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2321:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2325:	01 45 f8             	add    %eax,-0x8(%rbp)
    2328:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    232c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2330:	7e ec                	jle    231e <padding+0xb2a>
    2332:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2336:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    233a:	7e d9                	jle    2315 <padding+0xb21>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    233c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2343:	eb 21                	jmp    2366 <padding+0xb72>
    2345:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    234c:	eb 0e                	jmp    235c <padding+0xb68>
    234e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2351:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2355:	01 45 f8             	add    %eax,-0x8(%rbp)
    2358:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    235c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2360:	7e ec                	jle    234e <padding+0xb5a>
    2362:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2366:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    236a:	7e d9                	jle    2345 <padding+0xb51>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    236c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2373:	eb 21                	jmp    2396 <padding+0xba2>
    2375:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    237c:	eb 0e                	jmp    238c <padding+0xb98>
    237e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2381:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2385:	01 45 f8             	add    %eax,-0x8(%rbp)
    2388:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    238c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2390:	7e ec                	jle    237e <padding+0xb8a>
    2392:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2396:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    239a:	7e d9                	jle    2375 <padding+0xb81>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    239c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    23a3:	eb 21                	jmp    23c6 <padding+0xbd2>
    23a5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    23ac:	eb 0e                	jmp    23bc <padding+0xbc8>
    23ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    23b1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    23b5:	01 45 f8             	add    %eax,-0x8(%rbp)
    23b8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    23bc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    23c0:	7e ec                	jle    23ae <padding+0xbba>
    23c2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    23c6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    23ca:	7e d9                	jle    23a5 <padding+0xbb1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    23cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    23d3:	eb 21                	jmp    23f6 <padding+0xc02>
    23d5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    23dc:	eb 0e                	jmp    23ec <padding+0xbf8>
    23de:	8b 45 f4             	mov    -0xc(%rbp),%eax
    23e1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    23e5:	01 45 f8             	add    %eax,-0x8(%rbp)
    23e8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    23ec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    23f0:	7e ec                	jle    23de <padding+0xbea>
    23f2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    23f6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    23fa:	7e d9                	jle    23d5 <padding+0xbe1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    23fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2403:	eb 21                	jmp    2426 <padding+0xc32>
    2405:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    240c:	eb 0e                	jmp    241c <padding+0xc28>
    240e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2411:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2415:	01 45 f8             	add    %eax,-0x8(%rbp)
    2418:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    241c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2420:	7e ec                	jle    240e <padding+0xc1a>
    2422:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2426:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    242a:	7e d9                	jle    2405 <padding+0xc11>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    242c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2433:	eb 21                	jmp    2456 <padding+0xc62>
    2435:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    243c:	eb 0e                	jmp    244c <padding+0xc58>
    243e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2441:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2445:	01 45 f8             	add    %eax,-0x8(%rbp)
    2448:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    244c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2450:	7e ec                	jle    243e <padding+0xc4a>
    2452:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2456:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    245a:	7e d9                	jle    2435 <padding+0xc41>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    245c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2463:	eb 21                	jmp    2486 <padding+0xc92>
    2465:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    246c:	eb 0e                	jmp    247c <padding+0xc88>
    246e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2471:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2475:	01 45 f8             	add    %eax,-0x8(%rbp)
    2478:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    247c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2480:	7e ec                	jle    246e <padding+0xc7a>
    2482:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2486:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    248a:	7e d9                	jle    2465 <padding+0xc71>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    248c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2493:	eb 21                	jmp    24b6 <padding+0xcc2>
    2495:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    249c:	eb 0e                	jmp    24ac <padding+0xcb8>
    249e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    24a1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    24a5:	01 45 f8             	add    %eax,-0x8(%rbp)
    24a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    24ac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    24b0:	7e ec                	jle    249e <padding+0xcaa>
    24b2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    24b6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    24ba:	7e d9                	jle    2495 <padding+0xca1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    24bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    24c3:	eb 21                	jmp    24e6 <padding+0xcf2>
    24c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    24cc:	eb 0e                	jmp    24dc <padding+0xce8>
    24ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    24d1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    24d5:	01 45 f8             	add    %eax,-0x8(%rbp)
    24d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    24dc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    24e0:	7e ec                	jle    24ce <padding+0xcda>
    24e2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    24e6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    24ea:	7e d9                	jle    24c5 <padding+0xcd1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    24ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    24f3:	eb 21                	jmp    2516 <padding+0xd22>
    24f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    24fc:	eb 0e                	jmp    250c <padding+0xd18>
    24fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2501:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2505:	01 45 f8             	add    %eax,-0x8(%rbp)
    2508:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    250c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2510:	7e ec                	jle    24fe <padding+0xd0a>
    2512:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2516:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    251a:	7e d9                	jle    24f5 <padding+0xd01>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    251c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2523:	eb 21                	jmp    2546 <padding+0xd52>
    2525:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    252c:	eb 0e                	jmp    253c <padding+0xd48>
    252e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2531:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2535:	01 45 f8             	add    %eax,-0x8(%rbp)
    2538:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    253c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2540:	7e ec                	jle    252e <padding+0xd3a>
    2542:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2546:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    254a:	7e d9                	jle    2525 <padding+0xd31>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    254c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2553:	eb 21                	jmp    2576 <padding+0xd82>
    2555:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    255c:	eb 0e                	jmp    256c <padding+0xd78>
    255e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2561:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2565:	01 45 f8             	add    %eax,-0x8(%rbp)
    2568:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    256c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2570:	7e ec                	jle    255e <padding+0xd6a>
    2572:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2576:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    257a:	7e d9                	jle    2555 <padding+0xd61>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    257c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2583:	eb 21                	jmp    25a6 <padding+0xdb2>
    2585:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    258c:	eb 0e                	jmp    259c <padding+0xda8>
    258e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2591:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2595:	01 45 f8             	add    %eax,-0x8(%rbp)
    2598:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    259c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    25a0:	7e ec                	jle    258e <padding+0xd9a>
    25a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    25a6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    25aa:	7e d9                	jle    2585 <padding+0xd91>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    25ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    25b3:	eb 21                	jmp    25d6 <padding+0xde2>
    25b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    25bc:	eb 0e                	jmp    25cc <padding+0xdd8>
    25be:	8b 45 f4             	mov    -0xc(%rbp),%eax
    25c1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    25c5:	01 45 f8             	add    %eax,-0x8(%rbp)
    25c8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    25cc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    25d0:	7e ec                	jle    25be <padding+0xdca>
    25d2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    25d6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    25da:	7e d9                	jle    25b5 <padding+0xdc1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    25dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    25e3:	eb 21                	jmp    2606 <padding+0xe12>
    25e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    25ec:	eb 0e                	jmp    25fc <padding+0xe08>
    25ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    25f1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    25f5:	01 45 f8             	add    %eax,-0x8(%rbp)
    25f8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    25fc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2600:	7e ec                	jle    25ee <padding+0xdfa>
    2602:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2606:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    260a:	7e d9                	jle    25e5 <padding+0xdf1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    260c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2613:	eb 21                	jmp    2636 <padding+0xe42>
    2615:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    261c:	eb 0e                	jmp    262c <padding+0xe38>
    261e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2621:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2625:	01 45 f8             	add    %eax,-0x8(%rbp)
    2628:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    262c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2630:	7e ec                	jle    261e <padding+0xe2a>
    2632:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2636:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    263a:	7e d9                	jle    2615 <padding+0xe21>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    263c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2643:	eb 21                	jmp    2666 <padding+0xe72>
    2645:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    264c:	eb 0e                	jmp    265c <padding+0xe68>
    264e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2651:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2655:	01 45 f8             	add    %eax,-0x8(%rbp)
    2658:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    265c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2660:	7e ec                	jle    264e <padding+0xe5a>
    2662:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2666:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    266a:	7e d9                	jle    2645 <padding+0xe51>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    266c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2673:	eb 21                	jmp    2696 <padding+0xea2>
    2675:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    267c:	eb 0e                	jmp    268c <padding+0xe98>
    267e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2681:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2685:	01 45 f8             	add    %eax,-0x8(%rbp)
    2688:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    268c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2690:	7e ec                	jle    267e <padding+0xe8a>
    2692:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2696:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    269a:	7e d9                	jle    2675 <padding+0xe81>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    269c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    26a3:	eb 21                	jmp    26c6 <padding+0xed2>
    26a5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    26ac:	eb 0e                	jmp    26bc <padding+0xec8>
    26ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    26b1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    26b5:	01 45 f8             	add    %eax,-0x8(%rbp)
    26b8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    26bc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    26c0:	7e ec                	jle    26ae <padding+0xeba>
    26c2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    26c6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    26ca:	7e d9                	jle    26a5 <padding+0xeb1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    26cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    26d3:	eb 21                	jmp    26f6 <padding+0xf02>
    26d5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    26dc:	eb 0e                	jmp    26ec <padding+0xef8>
    26de:	8b 45 f4             	mov    -0xc(%rbp),%eax
    26e1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    26e5:	01 45 f8             	add    %eax,-0x8(%rbp)
    26e8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    26ec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    26f0:	7e ec                	jle    26de <padding+0xeea>
    26f2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    26f6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    26fa:	7e d9                	jle    26d5 <padding+0xee1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    26fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2703:	eb 21                	jmp    2726 <padding+0xf32>
    2705:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    270c:	eb 0e                	jmp    271c <padding+0xf28>
    270e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2711:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2715:	01 45 f8             	add    %eax,-0x8(%rbp)
    2718:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    271c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2720:	7e ec                	jle    270e <padding+0xf1a>
    2722:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2726:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    272a:	7e d9                	jle    2705 <padding+0xf11>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    272c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2733:	eb 21                	jmp    2756 <padding+0xf62>
    2735:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    273c:	eb 0e                	jmp    274c <padding+0xf58>
    273e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2741:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2745:	01 45 f8             	add    %eax,-0x8(%rbp)
    2748:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    274c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2750:	7e ec                	jle    273e <padding+0xf4a>
    2752:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2756:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    275a:	7e d9                	jle    2735 <padding+0xf41>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    275c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2763:	eb 21                	jmp    2786 <padding+0xf92>
    2765:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    276c:	eb 0e                	jmp    277c <padding+0xf88>
    276e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2771:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2775:	01 45 f8             	add    %eax,-0x8(%rbp)
    2778:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    277c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2780:	7e ec                	jle    276e <padding+0xf7a>
    2782:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2786:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    278a:	7e d9                	jle    2765 <padding+0xf71>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    278c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2793:	eb 21                	jmp    27b6 <padding+0xfc2>
    2795:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    279c:	eb 0e                	jmp    27ac <padding+0xfb8>
    279e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    27a1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    27a5:	01 45 f8             	add    %eax,-0x8(%rbp)
    27a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    27ac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    27b0:	7e ec                	jle    279e <padding+0xfaa>
    27b2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    27b6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    27ba:	7e d9                	jle    2795 <padding+0xfa1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    27bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    27c3:	eb 21                	jmp    27e6 <padding+0xff2>
    27c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    27cc:	eb 0e                	jmp    27dc <padding+0xfe8>
    27ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    27d1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    27d5:	01 45 f8             	add    %eax,-0x8(%rbp)
    27d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    27dc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    27e0:	7e ec                	jle    27ce <padding+0xfda>
    27e2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    27e6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    27ea:	7e d9                	jle    27c5 <padding+0xfd1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    27ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    27f3:	eb 21                	jmp    2816 <padding+0x1022>
    27f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    27fc:	eb 0e                	jmp    280c <padding+0x1018>
    27fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2801:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2805:	01 45 f8             	add    %eax,-0x8(%rbp)
    2808:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    280c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2810:	7e ec                	jle    27fe <padding+0x100a>
    2812:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2816:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    281a:	7e d9                	jle    27f5 <padding+0x1001>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    281c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2823:	eb 21                	jmp    2846 <padding+0x1052>
    2825:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    282c:	eb 0e                	jmp    283c <padding+0x1048>
    282e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2831:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2835:	01 45 f8             	add    %eax,-0x8(%rbp)
    2838:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    283c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2840:	7e ec                	jle    282e <padding+0x103a>
    2842:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2846:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    284a:	7e d9                	jle    2825 <padding+0x1031>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    284c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2853:	eb 21                	jmp    2876 <padding+0x1082>
    2855:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    285c:	eb 0e                	jmp    286c <padding+0x1078>
    285e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2861:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2865:	01 45 f8             	add    %eax,-0x8(%rbp)
    2868:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    286c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2870:	7e ec                	jle    285e <padding+0x106a>
    2872:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2876:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    287a:	7e d9                	jle    2855 <padding+0x1061>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    287c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2883:	eb 21                	jmp    28a6 <padding+0x10b2>
    2885:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    288c:	eb 0e                	jmp    289c <padding+0x10a8>
    288e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2891:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2895:	01 45 f8             	add    %eax,-0x8(%rbp)
    2898:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    289c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    28a0:	7e ec                	jle    288e <padding+0x109a>
    28a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    28a6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    28aa:	7e d9                	jle    2885 <padding+0x1091>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    28ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    28b3:	eb 21                	jmp    28d6 <padding+0x10e2>
    28b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    28bc:	eb 0e                	jmp    28cc <padding+0x10d8>
    28be:	8b 45 f4             	mov    -0xc(%rbp),%eax
    28c1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    28c5:	01 45 f8             	add    %eax,-0x8(%rbp)
    28c8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    28cc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    28d0:	7e ec                	jle    28be <padding+0x10ca>
    28d2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    28d6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    28da:	7e d9                	jle    28b5 <padding+0x10c1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    28dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    28e3:	eb 21                	jmp    2906 <padding+0x1112>
    28e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    28ec:	eb 0e                	jmp    28fc <padding+0x1108>
    28ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    28f1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    28f5:	01 45 f8             	add    %eax,-0x8(%rbp)
    28f8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    28fc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2900:	7e ec                	jle    28ee <padding+0x10fa>
    2902:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2906:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    290a:	7e d9                	jle    28e5 <padding+0x10f1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    290c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2913:	eb 21                	jmp    2936 <padding+0x1142>
    2915:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    291c:	eb 0e                	jmp    292c <padding+0x1138>
    291e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2921:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2925:	01 45 f8             	add    %eax,-0x8(%rbp)
    2928:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    292c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2930:	7e ec                	jle    291e <padding+0x112a>
    2932:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2936:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    293a:	7e d9                	jle    2915 <padding+0x1121>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    293c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2943:	eb 21                	jmp    2966 <padding+0x1172>
    2945:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    294c:	eb 0e                	jmp    295c <padding+0x1168>
    294e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2951:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2955:	01 45 f8             	add    %eax,-0x8(%rbp)
    2958:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    295c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2960:	7e ec                	jle    294e <padding+0x115a>
    2962:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2966:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    296a:	7e d9                	jle    2945 <padding+0x1151>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    296c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2973:	eb 21                	jmp    2996 <padding+0x11a2>
    2975:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    297c:	eb 0e                	jmp    298c <padding+0x1198>
    297e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2981:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2985:	01 45 f8             	add    %eax,-0x8(%rbp)
    2988:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    298c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2990:	7e ec                	jle    297e <padding+0x118a>
    2992:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2996:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    299a:	7e d9                	jle    2975 <padding+0x1181>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    299c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    29a3:	eb 21                	jmp    29c6 <padding+0x11d2>
    29a5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    29ac:	eb 0e                	jmp    29bc <padding+0x11c8>
    29ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    29b1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    29b5:	01 45 f8             	add    %eax,-0x8(%rbp)
    29b8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    29bc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    29c0:	7e ec                	jle    29ae <padding+0x11ba>
    29c2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    29c6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    29ca:	7e d9                	jle    29a5 <padding+0x11b1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    29cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    29d3:	eb 21                	jmp    29f6 <padding+0x1202>
    29d5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    29dc:	eb 0e                	jmp    29ec <padding+0x11f8>
    29de:	8b 45 f4             	mov    -0xc(%rbp),%eax
    29e1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    29e5:	01 45 f8             	add    %eax,-0x8(%rbp)
    29e8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    29ec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    29f0:	7e ec                	jle    29de <padding+0x11ea>
    29f2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    29f6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    29fa:	7e d9                	jle    29d5 <padding+0x11e1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    29fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2a03:	eb 21                	jmp    2a26 <padding+0x1232>
    2a05:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2a0c:	eb 0e                	jmp    2a1c <padding+0x1228>
    2a0e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2a11:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2a15:	01 45 f8             	add    %eax,-0x8(%rbp)
    2a18:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2a1c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2a20:	7e ec                	jle    2a0e <padding+0x121a>
    2a22:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2a26:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2a2a:	7e d9                	jle    2a05 <padding+0x1211>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2a2c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2a33:	eb 21                	jmp    2a56 <padding+0x1262>
    2a35:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2a3c:	eb 0e                	jmp    2a4c <padding+0x1258>
    2a3e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2a41:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2a45:	01 45 f8             	add    %eax,-0x8(%rbp)
    2a48:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2a4c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2a50:	7e ec                	jle    2a3e <padding+0x124a>
    2a52:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2a56:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2a5a:	7e d9                	jle    2a35 <padding+0x1241>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2a5c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2a63:	eb 21                	jmp    2a86 <padding+0x1292>
    2a65:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2a6c:	eb 0e                	jmp    2a7c <padding+0x1288>
    2a6e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2a71:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2a75:	01 45 f8             	add    %eax,-0x8(%rbp)
    2a78:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2a7c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2a80:	7e ec                	jle    2a6e <padding+0x127a>
    2a82:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2a86:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2a8a:	7e d9                	jle    2a65 <padding+0x1271>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2a8c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2a93:	eb 21                	jmp    2ab6 <padding+0x12c2>
    2a95:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2a9c:	eb 0e                	jmp    2aac <padding+0x12b8>
    2a9e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2aa1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2aa5:	01 45 f8             	add    %eax,-0x8(%rbp)
    2aa8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2aac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2ab0:	7e ec                	jle    2a9e <padding+0x12aa>
    2ab2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2ab6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2aba:	7e d9                	jle    2a95 <padding+0x12a1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2abc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2ac3:	eb 21                	jmp    2ae6 <padding+0x12f2>
    2ac5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2acc:	eb 0e                	jmp    2adc <padding+0x12e8>
    2ace:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2ad1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2ad5:	01 45 f8             	add    %eax,-0x8(%rbp)
    2ad8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2adc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2ae0:	7e ec                	jle    2ace <padding+0x12da>
    2ae2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2ae6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2aea:	7e d9                	jle    2ac5 <padding+0x12d1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2aec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2af3:	eb 21                	jmp    2b16 <padding+0x1322>
    2af5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2afc:	eb 0e                	jmp    2b0c <padding+0x1318>
    2afe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2b01:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2b05:	01 45 f8             	add    %eax,-0x8(%rbp)
    2b08:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2b0c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2b10:	7e ec                	jle    2afe <padding+0x130a>
    2b12:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2b16:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2b1a:	7e d9                	jle    2af5 <padding+0x1301>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2b1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2b23:	eb 21                	jmp    2b46 <padding+0x1352>
    2b25:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2b2c:	eb 0e                	jmp    2b3c <padding+0x1348>
    2b2e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2b31:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2b35:	01 45 f8             	add    %eax,-0x8(%rbp)
    2b38:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2b3c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2b40:	7e ec                	jle    2b2e <padding+0x133a>
    2b42:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2b46:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2b4a:	7e d9                	jle    2b25 <padding+0x1331>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2b4c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2b53:	eb 21                	jmp    2b76 <padding+0x1382>
    2b55:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2b5c:	eb 0e                	jmp    2b6c <padding+0x1378>
    2b5e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2b61:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2b65:	01 45 f8             	add    %eax,-0x8(%rbp)
    2b68:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2b6c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2b70:	7e ec                	jle    2b5e <padding+0x136a>
    2b72:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2b76:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2b7a:	7e d9                	jle    2b55 <padding+0x1361>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2b7c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2b83:	eb 21                	jmp    2ba6 <padding+0x13b2>
    2b85:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2b8c:	eb 0e                	jmp    2b9c <padding+0x13a8>
    2b8e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2b91:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2b95:	01 45 f8             	add    %eax,-0x8(%rbp)
    2b98:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2b9c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2ba0:	7e ec                	jle    2b8e <padding+0x139a>
    2ba2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2ba6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2baa:	7e d9                	jle    2b85 <padding+0x1391>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2bac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2bb3:	eb 21                	jmp    2bd6 <padding+0x13e2>
    2bb5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2bbc:	eb 0e                	jmp    2bcc <padding+0x13d8>
    2bbe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2bc1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2bc5:	01 45 f8             	add    %eax,-0x8(%rbp)
    2bc8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2bcc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2bd0:	7e ec                	jle    2bbe <padding+0x13ca>
    2bd2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2bd6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2bda:	7e d9                	jle    2bb5 <padding+0x13c1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2bdc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2be3:	eb 21                	jmp    2c06 <padding+0x1412>
    2be5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2bec:	eb 0e                	jmp    2bfc <padding+0x1408>
    2bee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2bf1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2bf5:	01 45 f8             	add    %eax,-0x8(%rbp)
    2bf8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2bfc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2c00:	7e ec                	jle    2bee <padding+0x13fa>
    2c02:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2c06:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2c0a:	7e d9                	jle    2be5 <padding+0x13f1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2c0c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2c13:	eb 21                	jmp    2c36 <padding+0x1442>
    2c15:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2c1c:	eb 0e                	jmp    2c2c <padding+0x1438>
    2c1e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2c21:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2c25:	01 45 f8             	add    %eax,-0x8(%rbp)
    2c28:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2c2c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2c30:	7e ec                	jle    2c1e <padding+0x142a>
    2c32:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2c36:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2c3a:	7e d9                	jle    2c15 <padding+0x1421>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2c3c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2c43:	eb 21                	jmp    2c66 <padding+0x1472>
    2c45:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2c4c:	eb 0e                	jmp    2c5c <padding+0x1468>
    2c4e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2c51:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2c55:	01 45 f8             	add    %eax,-0x8(%rbp)
    2c58:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2c5c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2c60:	7e ec                	jle    2c4e <padding+0x145a>
    2c62:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2c66:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2c6a:	7e d9                	jle    2c45 <padding+0x1451>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2c6c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2c73:	eb 21                	jmp    2c96 <padding+0x14a2>
    2c75:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2c7c:	eb 0e                	jmp    2c8c <padding+0x1498>
    2c7e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2c81:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2c85:	01 45 f8             	add    %eax,-0x8(%rbp)
    2c88:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2c8c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2c90:	7e ec                	jle    2c7e <padding+0x148a>
    2c92:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2c96:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2c9a:	7e d9                	jle    2c75 <padding+0x1481>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2c9c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2ca3:	eb 21                	jmp    2cc6 <padding+0x14d2>
    2ca5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2cac:	eb 0e                	jmp    2cbc <padding+0x14c8>
    2cae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2cb1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2cb5:	01 45 f8             	add    %eax,-0x8(%rbp)
    2cb8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2cbc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2cc0:	7e ec                	jle    2cae <padding+0x14ba>
    2cc2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2cc6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2cca:	7e d9                	jle    2ca5 <padding+0x14b1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2ccc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2cd3:	eb 21                	jmp    2cf6 <padding+0x1502>
    2cd5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2cdc:	eb 0e                	jmp    2cec <padding+0x14f8>
    2cde:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2ce1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2ce5:	01 45 f8             	add    %eax,-0x8(%rbp)
    2ce8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2cec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2cf0:	7e ec                	jle    2cde <padding+0x14ea>
    2cf2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2cf6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2cfa:	7e d9                	jle    2cd5 <padding+0x14e1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2cfc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2d03:	eb 21                	jmp    2d26 <padding+0x1532>
    2d05:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2d0c:	eb 0e                	jmp    2d1c <padding+0x1528>
    2d0e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2d11:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2d15:	01 45 f8             	add    %eax,-0x8(%rbp)
    2d18:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2d1c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2d20:	7e ec                	jle    2d0e <padding+0x151a>
    2d22:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2d26:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2d2a:	7e d9                	jle    2d05 <padding+0x1511>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2d2c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2d33:	eb 21                	jmp    2d56 <padding+0x1562>
    2d35:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2d3c:	eb 0e                	jmp    2d4c <padding+0x1558>
    2d3e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2d41:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2d45:	01 45 f8             	add    %eax,-0x8(%rbp)
    2d48:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2d4c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2d50:	7e ec                	jle    2d3e <padding+0x154a>
    2d52:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2d56:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2d5a:	7e d9                	jle    2d35 <padding+0x1541>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2d5c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2d63:	eb 21                	jmp    2d86 <padding+0x1592>
    2d65:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2d6c:	eb 0e                	jmp    2d7c <padding+0x1588>
    2d6e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2d71:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2d75:	01 45 f8             	add    %eax,-0x8(%rbp)
    2d78:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2d7c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2d80:	7e ec                	jle    2d6e <padding+0x157a>
    2d82:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2d86:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2d8a:	7e d9                	jle    2d65 <padding+0x1571>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2d8c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2d93:	eb 21                	jmp    2db6 <padding+0x15c2>
    2d95:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2d9c:	eb 0e                	jmp    2dac <padding+0x15b8>
    2d9e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2da1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2da5:	01 45 f8             	add    %eax,-0x8(%rbp)
    2da8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2dac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2db0:	7e ec                	jle    2d9e <padding+0x15aa>
    2db2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2db6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2dba:	7e d9                	jle    2d95 <padding+0x15a1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2dbc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2dc3:	eb 21                	jmp    2de6 <padding+0x15f2>
    2dc5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2dcc:	eb 0e                	jmp    2ddc <padding+0x15e8>
    2dce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2dd1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2dd5:	01 45 f8             	add    %eax,-0x8(%rbp)
    2dd8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2ddc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2de0:	7e ec                	jle    2dce <padding+0x15da>
    2de2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2de6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2dea:	7e d9                	jle    2dc5 <padding+0x15d1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2dec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2df3:	eb 21                	jmp    2e16 <padding+0x1622>
    2df5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2dfc:	eb 0e                	jmp    2e0c <padding+0x1618>
    2dfe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2e01:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2e05:	01 45 f8             	add    %eax,-0x8(%rbp)
    2e08:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2e0c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2e10:	7e ec                	jle    2dfe <padding+0x160a>
    2e12:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2e16:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2e1a:	7e d9                	jle    2df5 <padding+0x1601>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2e1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2e23:	eb 21                	jmp    2e46 <padding+0x1652>
    2e25:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2e2c:	eb 0e                	jmp    2e3c <padding+0x1648>
    2e2e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2e31:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2e35:	01 45 f8             	add    %eax,-0x8(%rbp)
    2e38:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2e3c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2e40:	7e ec                	jle    2e2e <padding+0x163a>
    2e42:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2e46:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2e4a:	7e d9                	jle    2e25 <padding+0x1631>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2e4c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2e53:	eb 21                	jmp    2e76 <padding+0x1682>
    2e55:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2e5c:	eb 0e                	jmp    2e6c <padding+0x1678>
    2e5e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2e61:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2e65:	01 45 f8             	add    %eax,-0x8(%rbp)
    2e68:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2e6c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2e70:	7e ec                	jle    2e5e <padding+0x166a>
    2e72:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2e76:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2e7a:	7e d9                	jle    2e55 <padding+0x1661>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2e7c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2e83:	eb 21                	jmp    2ea6 <padding+0x16b2>
    2e85:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2e8c:	eb 0e                	jmp    2e9c <padding+0x16a8>
    2e8e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2e91:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2e95:	01 45 f8             	add    %eax,-0x8(%rbp)
    2e98:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2e9c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2ea0:	7e ec                	jle    2e8e <padding+0x169a>
    2ea2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2ea6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2eaa:	7e d9                	jle    2e85 <padding+0x1691>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2eac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2eb3:	eb 21                	jmp    2ed6 <padding+0x16e2>
    2eb5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2ebc:	eb 0e                	jmp    2ecc <padding+0x16d8>
    2ebe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2ec1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2ec5:	01 45 f8             	add    %eax,-0x8(%rbp)
    2ec8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2ecc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2ed0:	7e ec                	jle    2ebe <padding+0x16ca>
    2ed2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2ed6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2eda:	7e d9                	jle    2eb5 <padding+0x16c1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2edc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2ee3:	eb 21                	jmp    2f06 <padding+0x1712>
    2ee5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2eec:	eb 0e                	jmp    2efc <padding+0x1708>
    2eee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2ef1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2ef5:	01 45 f8             	add    %eax,-0x8(%rbp)
    2ef8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2efc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2f00:	7e ec                	jle    2eee <padding+0x16fa>
    2f02:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2f06:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2f0a:	7e d9                	jle    2ee5 <padding+0x16f1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2f0c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2f13:	eb 21                	jmp    2f36 <padding+0x1742>
    2f15:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2f1c:	eb 0e                	jmp    2f2c <padding+0x1738>
    2f1e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2f21:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2f25:	01 45 f8             	add    %eax,-0x8(%rbp)
    2f28:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2f2c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2f30:	7e ec                	jle    2f1e <padding+0x172a>
    2f32:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2f36:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2f3a:	7e d9                	jle    2f15 <padding+0x1721>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2f3c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2f43:	eb 21                	jmp    2f66 <padding+0x1772>
    2f45:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2f4c:	eb 0e                	jmp    2f5c <padding+0x1768>
    2f4e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2f51:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2f55:	01 45 f8             	add    %eax,-0x8(%rbp)
    2f58:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2f5c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2f60:	7e ec                	jle    2f4e <padding+0x175a>
    2f62:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2f66:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2f6a:	7e d9                	jle    2f45 <padding+0x1751>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2f6c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2f73:	eb 21                	jmp    2f96 <padding+0x17a2>
    2f75:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2f7c:	eb 0e                	jmp    2f8c <padding+0x1798>
    2f7e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2f81:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2f85:	01 45 f8             	add    %eax,-0x8(%rbp)
    2f88:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2f8c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2f90:	7e ec                	jle    2f7e <padding+0x178a>
    2f92:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2f96:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2f9a:	7e d9                	jle    2f75 <padding+0x1781>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2f9c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2fa3:	eb 21                	jmp    2fc6 <padding+0x17d2>
    2fa5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2fac:	eb 0e                	jmp    2fbc <padding+0x17c8>
    2fae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2fb1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2fb5:	01 45 f8             	add    %eax,-0x8(%rbp)
    2fb8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2fbc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2fc0:	7e ec                	jle    2fae <padding+0x17ba>
    2fc2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2fc6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2fca:	7e d9                	jle    2fa5 <padding+0x17b1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2fcc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    2fd3:	eb 21                	jmp    2ff6 <padding+0x1802>
    2fd5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2fdc:	eb 0e                	jmp    2fec <padding+0x17f8>
    2fde:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2fe1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    2fe5:	01 45 f8             	add    %eax,-0x8(%rbp)
    2fe8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2fec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    2ff0:	7e ec                	jle    2fde <padding+0x17ea>
    2ff2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    2ff6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    2ffa:	7e d9                	jle    2fd5 <padding+0x17e1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    2ffc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3003:	eb 21                	jmp    3026 <padding+0x1832>
    3005:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    300c:	eb 0e                	jmp    301c <padding+0x1828>
    300e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3011:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3015:	01 45 f8             	add    %eax,-0x8(%rbp)
    3018:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    301c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3020:	7e ec                	jle    300e <padding+0x181a>
    3022:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3026:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    302a:	7e d9                	jle    3005 <padding+0x1811>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    302c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3033:	eb 21                	jmp    3056 <padding+0x1862>
    3035:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    303c:	eb 0e                	jmp    304c <padding+0x1858>
    303e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3041:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3045:	01 45 f8             	add    %eax,-0x8(%rbp)
    3048:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    304c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3050:	7e ec                	jle    303e <padding+0x184a>
    3052:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3056:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    305a:	7e d9                	jle    3035 <padding+0x1841>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    305c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3063:	eb 21                	jmp    3086 <padding+0x1892>
    3065:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    306c:	eb 0e                	jmp    307c <padding+0x1888>
    306e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3071:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3075:	01 45 f8             	add    %eax,-0x8(%rbp)
    3078:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    307c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3080:	7e ec                	jle    306e <padding+0x187a>
    3082:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3086:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    308a:	7e d9                	jle    3065 <padding+0x1871>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    308c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3093:	eb 21                	jmp    30b6 <padding+0x18c2>
    3095:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    309c:	eb 0e                	jmp    30ac <padding+0x18b8>
    309e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    30a1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    30a5:	01 45 f8             	add    %eax,-0x8(%rbp)
    30a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    30ac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    30b0:	7e ec                	jle    309e <padding+0x18aa>
    30b2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    30b6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    30ba:	7e d9                	jle    3095 <padding+0x18a1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    30bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    30c3:	eb 21                	jmp    30e6 <padding+0x18f2>
    30c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    30cc:	eb 0e                	jmp    30dc <padding+0x18e8>
    30ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    30d1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    30d5:	01 45 f8             	add    %eax,-0x8(%rbp)
    30d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    30dc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    30e0:	7e ec                	jle    30ce <padding+0x18da>
    30e2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    30e6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    30ea:	7e d9                	jle    30c5 <padding+0x18d1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    30ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    30f3:	eb 21                	jmp    3116 <padding+0x1922>
    30f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    30fc:	eb 0e                	jmp    310c <padding+0x1918>
    30fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3101:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3105:	01 45 f8             	add    %eax,-0x8(%rbp)
    3108:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    310c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3110:	7e ec                	jle    30fe <padding+0x190a>
    3112:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3116:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    311a:	7e d9                	jle    30f5 <padding+0x1901>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    311c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3123:	eb 21                	jmp    3146 <padding+0x1952>
    3125:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    312c:	eb 0e                	jmp    313c <padding+0x1948>
    312e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3131:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3135:	01 45 f8             	add    %eax,-0x8(%rbp)
    3138:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    313c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3140:	7e ec                	jle    312e <padding+0x193a>
    3142:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3146:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    314a:	7e d9                	jle    3125 <padding+0x1931>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    314c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3153:	eb 21                	jmp    3176 <padding+0x1982>
    3155:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    315c:	eb 0e                	jmp    316c <padding+0x1978>
    315e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3161:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3165:	01 45 f8             	add    %eax,-0x8(%rbp)
    3168:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    316c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3170:	7e ec                	jle    315e <padding+0x196a>
    3172:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3176:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    317a:	7e d9                	jle    3155 <padding+0x1961>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    317c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3183:	eb 21                	jmp    31a6 <padding+0x19b2>
    3185:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    318c:	eb 0e                	jmp    319c <padding+0x19a8>
    318e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3191:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3195:	01 45 f8             	add    %eax,-0x8(%rbp)
    3198:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    319c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    31a0:	7e ec                	jle    318e <padding+0x199a>
    31a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    31a6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    31aa:	7e d9                	jle    3185 <padding+0x1991>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    31ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    31b3:	eb 21                	jmp    31d6 <padding+0x19e2>
    31b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    31bc:	eb 0e                	jmp    31cc <padding+0x19d8>
    31be:	8b 45 f4             	mov    -0xc(%rbp),%eax
    31c1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    31c5:	01 45 f8             	add    %eax,-0x8(%rbp)
    31c8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    31cc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    31d0:	7e ec                	jle    31be <padding+0x19ca>
    31d2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    31d6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    31da:	7e d9                	jle    31b5 <padding+0x19c1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    31dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    31e3:	eb 21                	jmp    3206 <padding+0x1a12>
    31e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    31ec:	eb 0e                	jmp    31fc <padding+0x1a08>
    31ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    31f1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    31f5:	01 45 f8             	add    %eax,-0x8(%rbp)
    31f8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    31fc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3200:	7e ec                	jle    31ee <padding+0x19fa>
    3202:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3206:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    320a:	7e d9                	jle    31e5 <padding+0x19f1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    320c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3213:	eb 21                	jmp    3236 <padding+0x1a42>
    3215:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    321c:	eb 0e                	jmp    322c <padding+0x1a38>
    321e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3221:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3225:	01 45 f8             	add    %eax,-0x8(%rbp)
    3228:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    322c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3230:	7e ec                	jle    321e <padding+0x1a2a>
    3232:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3236:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    323a:	7e d9                	jle    3215 <padding+0x1a21>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    323c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3243:	eb 21                	jmp    3266 <padding+0x1a72>
    3245:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    324c:	eb 0e                	jmp    325c <padding+0x1a68>
    324e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3251:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3255:	01 45 f8             	add    %eax,-0x8(%rbp)
    3258:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    325c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3260:	7e ec                	jle    324e <padding+0x1a5a>
    3262:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3266:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    326a:	7e d9                	jle    3245 <padding+0x1a51>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    326c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3273:	eb 21                	jmp    3296 <padding+0x1aa2>
    3275:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    327c:	eb 0e                	jmp    328c <padding+0x1a98>
    327e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3281:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3285:	01 45 f8             	add    %eax,-0x8(%rbp)
    3288:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    328c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3290:	7e ec                	jle    327e <padding+0x1a8a>
    3292:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3296:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    329a:	7e d9                	jle    3275 <padding+0x1a81>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    329c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    32a3:	eb 21                	jmp    32c6 <padding+0x1ad2>
    32a5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    32ac:	eb 0e                	jmp    32bc <padding+0x1ac8>
    32ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    32b1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    32b5:	01 45 f8             	add    %eax,-0x8(%rbp)
    32b8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    32bc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    32c0:	7e ec                	jle    32ae <padding+0x1aba>
    32c2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    32c6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    32ca:	7e d9                	jle    32a5 <padding+0x1ab1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    32cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    32d3:	eb 21                	jmp    32f6 <padding+0x1b02>
    32d5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    32dc:	eb 0e                	jmp    32ec <padding+0x1af8>
    32de:	8b 45 f4             	mov    -0xc(%rbp),%eax
    32e1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    32e5:	01 45 f8             	add    %eax,-0x8(%rbp)
    32e8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    32ec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    32f0:	7e ec                	jle    32de <padding+0x1aea>
    32f2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    32f6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    32fa:	7e d9                	jle    32d5 <padding+0x1ae1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    32fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3303:	eb 21                	jmp    3326 <padding+0x1b32>
    3305:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    330c:	eb 0e                	jmp    331c <padding+0x1b28>
    330e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3311:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3315:	01 45 f8             	add    %eax,-0x8(%rbp)
    3318:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    331c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3320:	7e ec                	jle    330e <padding+0x1b1a>
    3322:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3326:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    332a:	7e d9                	jle    3305 <padding+0x1b11>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    332c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3333:	eb 21                	jmp    3356 <padding+0x1b62>
    3335:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    333c:	eb 0e                	jmp    334c <padding+0x1b58>
    333e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3341:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3345:	01 45 f8             	add    %eax,-0x8(%rbp)
    3348:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    334c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3350:	7e ec                	jle    333e <padding+0x1b4a>
    3352:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3356:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    335a:	7e d9                	jle    3335 <padding+0x1b41>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    335c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3363:	eb 21                	jmp    3386 <padding+0x1b92>
    3365:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    336c:	eb 0e                	jmp    337c <padding+0x1b88>
    336e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3371:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3375:	01 45 f8             	add    %eax,-0x8(%rbp)
    3378:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    337c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3380:	7e ec                	jle    336e <padding+0x1b7a>
    3382:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3386:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    338a:	7e d9                	jle    3365 <padding+0x1b71>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    338c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3393:	eb 21                	jmp    33b6 <padding+0x1bc2>
    3395:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    339c:	eb 0e                	jmp    33ac <padding+0x1bb8>
    339e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    33a1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    33a5:	01 45 f8             	add    %eax,-0x8(%rbp)
    33a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    33ac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    33b0:	7e ec                	jle    339e <padding+0x1baa>
    33b2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    33b6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    33ba:	7e d9                	jle    3395 <padding+0x1ba1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    33bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    33c3:	eb 21                	jmp    33e6 <padding+0x1bf2>
    33c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    33cc:	eb 0e                	jmp    33dc <padding+0x1be8>
    33ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    33d1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    33d5:	01 45 f8             	add    %eax,-0x8(%rbp)
    33d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    33dc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    33e0:	7e ec                	jle    33ce <padding+0x1bda>
    33e2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    33e6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    33ea:	7e d9                	jle    33c5 <padding+0x1bd1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    33ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    33f3:	eb 21                	jmp    3416 <padding+0x1c22>
    33f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    33fc:	eb 0e                	jmp    340c <padding+0x1c18>
    33fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3401:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3405:	01 45 f8             	add    %eax,-0x8(%rbp)
    3408:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    340c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3410:	7e ec                	jle    33fe <padding+0x1c0a>
    3412:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3416:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    341a:	7e d9                	jle    33f5 <padding+0x1c01>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    341c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3423:	eb 21                	jmp    3446 <padding+0x1c52>
    3425:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    342c:	eb 0e                	jmp    343c <padding+0x1c48>
    342e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3431:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3435:	01 45 f8             	add    %eax,-0x8(%rbp)
    3438:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    343c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3440:	7e ec                	jle    342e <padding+0x1c3a>
    3442:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3446:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    344a:	7e d9                	jle    3425 <padding+0x1c31>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    344c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3453:	eb 21                	jmp    3476 <padding+0x1c82>
    3455:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    345c:	eb 0e                	jmp    346c <padding+0x1c78>
    345e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3461:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3465:	01 45 f8             	add    %eax,-0x8(%rbp)
    3468:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    346c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3470:	7e ec                	jle    345e <padding+0x1c6a>
    3472:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3476:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    347a:	7e d9                	jle    3455 <padding+0x1c61>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    347c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3483:	eb 21                	jmp    34a6 <padding+0x1cb2>
    3485:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    348c:	eb 0e                	jmp    349c <padding+0x1ca8>
    348e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3491:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3495:	01 45 f8             	add    %eax,-0x8(%rbp)
    3498:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    349c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    34a0:	7e ec                	jle    348e <padding+0x1c9a>
    34a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    34a6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    34aa:	7e d9                	jle    3485 <padding+0x1c91>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    34ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    34b3:	eb 21                	jmp    34d6 <padding+0x1ce2>
    34b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    34bc:	eb 0e                	jmp    34cc <padding+0x1cd8>
    34be:	8b 45 f4             	mov    -0xc(%rbp),%eax
    34c1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    34c5:	01 45 f8             	add    %eax,-0x8(%rbp)
    34c8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    34cc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    34d0:	7e ec                	jle    34be <padding+0x1cca>
    34d2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    34d6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    34da:	7e d9                	jle    34b5 <padding+0x1cc1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    34dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    34e3:	eb 21                	jmp    3506 <padding+0x1d12>
    34e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    34ec:	eb 0e                	jmp    34fc <padding+0x1d08>
    34ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    34f1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    34f5:	01 45 f8             	add    %eax,-0x8(%rbp)
    34f8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    34fc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3500:	7e ec                	jle    34ee <padding+0x1cfa>
    3502:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3506:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    350a:	7e d9                	jle    34e5 <padding+0x1cf1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    350c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3513:	eb 21                	jmp    3536 <padding+0x1d42>
    3515:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    351c:	eb 0e                	jmp    352c <padding+0x1d38>
    351e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3521:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3525:	01 45 f8             	add    %eax,-0x8(%rbp)
    3528:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    352c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3530:	7e ec                	jle    351e <padding+0x1d2a>
    3532:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3536:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    353a:	7e d9                	jle    3515 <padding+0x1d21>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    353c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3543:	eb 21                	jmp    3566 <padding+0x1d72>
    3545:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    354c:	eb 0e                	jmp    355c <padding+0x1d68>
    354e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3551:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3555:	01 45 f8             	add    %eax,-0x8(%rbp)
    3558:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    355c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3560:	7e ec                	jle    354e <padding+0x1d5a>
    3562:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3566:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    356a:	7e d9                	jle    3545 <padding+0x1d51>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    356c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3573:	eb 21                	jmp    3596 <padding+0x1da2>
    3575:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    357c:	eb 0e                	jmp    358c <padding+0x1d98>
    357e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3581:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3585:	01 45 f8             	add    %eax,-0x8(%rbp)
    3588:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    358c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3590:	7e ec                	jle    357e <padding+0x1d8a>
    3592:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3596:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    359a:	7e d9                	jle    3575 <padding+0x1d81>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    359c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    35a3:	eb 21                	jmp    35c6 <padding+0x1dd2>
    35a5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    35ac:	eb 0e                	jmp    35bc <padding+0x1dc8>
    35ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    35b1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    35b5:	01 45 f8             	add    %eax,-0x8(%rbp)
    35b8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    35bc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    35c0:	7e ec                	jle    35ae <padding+0x1dba>
    35c2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    35c6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    35ca:	7e d9                	jle    35a5 <padding+0x1db1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    35cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    35d3:	eb 21                	jmp    35f6 <padding+0x1e02>
    35d5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    35dc:	eb 0e                	jmp    35ec <padding+0x1df8>
    35de:	8b 45 f4             	mov    -0xc(%rbp),%eax
    35e1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    35e5:	01 45 f8             	add    %eax,-0x8(%rbp)
    35e8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    35ec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    35f0:	7e ec                	jle    35de <padding+0x1dea>
    35f2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    35f6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    35fa:	7e d9                	jle    35d5 <padding+0x1de1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    35fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3603:	eb 21                	jmp    3626 <padding+0x1e32>
    3605:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    360c:	eb 0e                	jmp    361c <padding+0x1e28>
    360e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3611:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3615:	01 45 f8             	add    %eax,-0x8(%rbp)
    3618:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    361c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3620:	7e ec                	jle    360e <padding+0x1e1a>
    3622:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3626:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    362a:	7e d9                	jle    3605 <padding+0x1e11>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    362c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3633:	eb 21                	jmp    3656 <padding+0x1e62>
    3635:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    363c:	eb 0e                	jmp    364c <padding+0x1e58>
    363e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3641:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3645:	01 45 f8             	add    %eax,-0x8(%rbp)
    3648:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    364c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3650:	7e ec                	jle    363e <padding+0x1e4a>
    3652:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3656:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    365a:	7e d9                	jle    3635 <padding+0x1e41>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    365c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3663:	eb 21                	jmp    3686 <padding+0x1e92>
    3665:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    366c:	eb 0e                	jmp    367c <padding+0x1e88>
    366e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3671:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3675:	01 45 f8             	add    %eax,-0x8(%rbp)
    3678:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    367c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3680:	7e ec                	jle    366e <padding+0x1e7a>
    3682:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3686:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    368a:	7e d9                	jle    3665 <padding+0x1e71>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    368c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3693:	eb 21                	jmp    36b6 <padding+0x1ec2>
    3695:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    369c:	eb 0e                	jmp    36ac <padding+0x1eb8>
    369e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    36a1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    36a5:	01 45 f8             	add    %eax,-0x8(%rbp)
    36a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    36ac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    36b0:	7e ec                	jle    369e <padding+0x1eaa>
    36b2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    36b6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    36ba:	7e d9                	jle    3695 <padding+0x1ea1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    36bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    36c3:	eb 21                	jmp    36e6 <padding+0x1ef2>
    36c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    36cc:	eb 0e                	jmp    36dc <padding+0x1ee8>
    36ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    36d1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    36d5:	01 45 f8             	add    %eax,-0x8(%rbp)
    36d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    36dc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    36e0:	7e ec                	jle    36ce <padding+0x1eda>
    36e2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    36e6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    36ea:	7e d9                	jle    36c5 <padding+0x1ed1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    36ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    36f3:	eb 21                	jmp    3716 <padding+0x1f22>
    36f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    36fc:	eb 0e                	jmp    370c <padding+0x1f18>
    36fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3701:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3705:	01 45 f8             	add    %eax,-0x8(%rbp)
    3708:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    370c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3710:	7e ec                	jle    36fe <padding+0x1f0a>
    3712:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3716:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    371a:	7e d9                	jle    36f5 <padding+0x1f01>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    371c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3723:	eb 21                	jmp    3746 <padding+0x1f52>
    3725:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    372c:	eb 0e                	jmp    373c <padding+0x1f48>
    372e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3731:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3735:	01 45 f8             	add    %eax,-0x8(%rbp)
    3738:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    373c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3740:	7e ec                	jle    372e <padding+0x1f3a>
    3742:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3746:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    374a:	7e d9                	jle    3725 <padding+0x1f31>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    374c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3753:	eb 21                	jmp    3776 <padding+0x1f82>
    3755:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    375c:	eb 0e                	jmp    376c <padding+0x1f78>
    375e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3761:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3765:	01 45 f8             	add    %eax,-0x8(%rbp)
    3768:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    376c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3770:	7e ec                	jle    375e <padding+0x1f6a>
    3772:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3776:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    377a:	7e d9                	jle    3755 <padding+0x1f61>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    377c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3783:	eb 21                	jmp    37a6 <padding+0x1fb2>
    3785:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    378c:	eb 0e                	jmp    379c <padding+0x1fa8>
    378e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3791:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3795:	01 45 f8             	add    %eax,-0x8(%rbp)
    3798:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    379c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    37a0:	7e ec                	jle    378e <padding+0x1f9a>
    37a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    37a6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    37aa:	7e d9                	jle    3785 <padding+0x1f91>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    37ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    37b3:	eb 21                	jmp    37d6 <padding+0x1fe2>
    37b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    37bc:	eb 0e                	jmp    37cc <padding+0x1fd8>
    37be:	8b 45 f4             	mov    -0xc(%rbp),%eax
    37c1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    37c5:	01 45 f8             	add    %eax,-0x8(%rbp)
    37c8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    37cc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    37d0:	7e ec                	jle    37be <padding+0x1fca>
    37d2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    37d6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    37da:	7e d9                	jle    37b5 <padding+0x1fc1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    37dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    37e3:	eb 21                	jmp    3806 <padding+0x2012>
    37e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    37ec:	eb 0e                	jmp    37fc <padding+0x2008>
    37ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    37f1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    37f5:	01 45 f8             	add    %eax,-0x8(%rbp)
    37f8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    37fc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3800:	7e ec                	jle    37ee <padding+0x1ffa>
    3802:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3806:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    380a:	7e d9                	jle    37e5 <padding+0x1ff1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    380c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3813:	eb 21                	jmp    3836 <padding+0x2042>
    3815:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    381c:	eb 0e                	jmp    382c <padding+0x2038>
    381e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3821:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3825:	01 45 f8             	add    %eax,-0x8(%rbp)
    3828:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    382c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3830:	7e ec                	jle    381e <padding+0x202a>
    3832:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3836:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    383a:	7e d9                	jle    3815 <padding+0x2021>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    383c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3843:	eb 21                	jmp    3866 <padding+0x2072>
    3845:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    384c:	eb 0e                	jmp    385c <padding+0x2068>
    384e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3851:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3855:	01 45 f8             	add    %eax,-0x8(%rbp)
    3858:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    385c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3860:	7e ec                	jle    384e <padding+0x205a>
    3862:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3866:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    386a:	7e d9                	jle    3845 <padding+0x2051>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    386c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3873:	eb 21                	jmp    3896 <padding+0x20a2>
    3875:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    387c:	eb 0e                	jmp    388c <padding+0x2098>
    387e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3881:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3885:	01 45 f8             	add    %eax,-0x8(%rbp)
    3888:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    388c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3890:	7e ec                	jle    387e <padding+0x208a>
    3892:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3896:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    389a:	7e d9                	jle    3875 <padding+0x2081>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    389c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    38a3:	eb 21                	jmp    38c6 <padding+0x20d2>
    38a5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    38ac:	eb 0e                	jmp    38bc <padding+0x20c8>
    38ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    38b1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    38b5:	01 45 f8             	add    %eax,-0x8(%rbp)
    38b8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    38bc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    38c0:	7e ec                	jle    38ae <padding+0x20ba>
    38c2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    38c6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    38ca:	7e d9                	jle    38a5 <padding+0x20b1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    38cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    38d3:	eb 21                	jmp    38f6 <padding+0x2102>
    38d5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    38dc:	eb 0e                	jmp    38ec <padding+0x20f8>
    38de:	8b 45 f4             	mov    -0xc(%rbp),%eax
    38e1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    38e5:	01 45 f8             	add    %eax,-0x8(%rbp)
    38e8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    38ec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    38f0:	7e ec                	jle    38de <padding+0x20ea>
    38f2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    38f6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    38fa:	7e d9                	jle    38d5 <padding+0x20e1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    38fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3903:	eb 21                	jmp    3926 <padding+0x2132>
    3905:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    390c:	eb 0e                	jmp    391c <padding+0x2128>
    390e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3911:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3915:	01 45 f8             	add    %eax,-0x8(%rbp)
    3918:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    391c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3920:	7e ec                	jle    390e <padding+0x211a>
    3922:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3926:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    392a:	7e d9                	jle    3905 <padding+0x2111>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    392c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3933:	eb 21                	jmp    3956 <padding+0x2162>
    3935:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    393c:	eb 0e                	jmp    394c <padding+0x2158>
    393e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3941:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3945:	01 45 f8             	add    %eax,-0x8(%rbp)
    3948:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    394c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3950:	7e ec                	jle    393e <padding+0x214a>
    3952:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3956:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    395a:	7e d9                	jle    3935 <padding+0x2141>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    395c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3963:	eb 21                	jmp    3986 <padding+0x2192>
    3965:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    396c:	eb 0e                	jmp    397c <padding+0x2188>
    396e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3971:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3975:	01 45 f8             	add    %eax,-0x8(%rbp)
    3978:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    397c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3980:	7e ec                	jle    396e <padding+0x217a>
    3982:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3986:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    398a:	7e d9                	jle    3965 <padding+0x2171>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    398c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3993:	eb 21                	jmp    39b6 <padding+0x21c2>
    3995:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    399c:	eb 0e                	jmp    39ac <padding+0x21b8>
    399e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    39a1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    39a5:	01 45 f8             	add    %eax,-0x8(%rbp)
    39a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    39ac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    39b0:	7e ec                	jle    399e <padding+0x21aa>
    39b2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    39b6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    39ba:	7e d9                	jle    3995 <padding+0x21a1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    39bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    39c3:	eb 21                	jmp    39e6 <padding+0x21f2>
    39c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    39cc:	eb 0e                	jmp    39dc <padding+0x21e8>
    39ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    39d1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    39d5:	01 45 f8             	add    %eax,-0x8(%rbp)
    39d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    39dc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    39e0:	7e ec                	jle    39ce <padding+0x21da>
    39e2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    39e6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    39ea:	7e d9                	jle    39c5 <padding+0x21d1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    39ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    39f3:	eb 21                	jmp    3a16 <padding+0x2222>
    39f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    39fc:	eb 0e                	jmp    3a0c <padding+0x2218>
    39fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3a01:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3a05:	01 45 f8             	add    %eax,-0x8(%rbp)
    3a08:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3a0c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3a10:	7e ec                	jle    39fe <padding+0x220a>
    3a12:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3a16:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3a1a:	7e d9                	jle    39f5 <padding+0x2201>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3a1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3a23:	eb 21                	jmp    3a46 <padding+0x2252>
    3a25:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3a2c:	eb 0e                	jmp    3a3c <padding+0x2248>
    3a2e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3a31:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3a35:	01 45 f8             	add    %eax,-0x8(%rbp)
    3a38:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3a3c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3a40:	7e ec                	jle    3a2e <padding+0x223a>
    3a42:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3a46:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3a4a:	7e d9                	jle    3a25 <padding+0x2231>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3a4c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3a53:	eb 21                	jmp    3a76 <padding+0x2282>
    3a55:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3a5c:	eb 0e                	jmp    3a6c <padding+0x2278>
    3a5e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3a61:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3a65:	01 45 f8             	add    %eax,-0x8(%rbp)
    3a68:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3a6c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3a70:	7e ec                	jle    3a5e <padding+0x226a>
    3a72:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3a76:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3a7a:	7e d9                	jle    3a55 <padding+0x2261>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3a7c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3a83:	eb 21                	jmp    3aa6 <padding+0x22b2>
    3a85:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3a8c:	eb 0e                	jmp    3a9c <padding+0x22a8>
    3a8e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3a91:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3a95:	01 45 f8             	add    %eax,-0x8(%rbp)
    3a98:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3a9c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3aa0:	7e ec                	jle    3a8e <padding+0x229a>
    3aa2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3aa6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3aaa:	7e d9                	jle    3a85 <padding+0x2291>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3aac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3ab3:	eb 21                	jmp    3ad6 <padding+0x22e2>
    3ab5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3abc:	eb 0e                	jmp    3acc <padding+0x22d8>
    3abe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3ac1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3ac5:	01 45 f8             	add    %eax,-0x8(%rbp)
    3ac8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3acc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3ad0:	7e ec                	jle    3abe <padding+0x22ca>
    3ad2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3ad6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3ada:	7e d9                	jle    3ab5 <padding+0x22c1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3adc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3ae3:	eb 21                	jmp    3b06 <padding+0x2312>
    3ae5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3aec:	eb 0e                	jmp    3afc <padding+0x2308>
    3aee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3af1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3af5:	01 45 f8             	add    %eax,-0x8(%rbp)
    3af8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3afc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3b00:	7e ec                	jle    3aee <padding+0x22fa>
    3b02:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3b06:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3b0a:	7e d9                	jle    3ae5 <padding+0x22f1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3b0c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3b13:	eb 21                	jmp    3b36 <padding+0x2342>
    3b15:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3b1c:	eb 0e                	jmp    3b2c <padding+0x2338>
    3b1e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3b21:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3b25:	01 45 f8             	add    %eax,-0x8(%rbp)
    3b28:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3b2c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3b30:	7e ec                	jle    3b1e <padding+0x232a>
    3b32:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3b36:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3b3a:	7e d9                	jle    3b15 <padding+0x2321>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3b3c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3b43:	eb 21                	jmp    3b66 <padding+0x2372>
    3b45:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3b4c:	eb 0e                	jmp    3b5c <padding+0x2368>
    3b4e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3b51:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3b55:	01 45 f8             	add    %eax,-0x8(%rbp)
    3b58:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3b5c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3b60:	7e ec                	jle    3b4e <padding+0x235a>
    3b62:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3b66:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3b6a:	7e d9                	jle    3b45 <padding+0x2351>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3b6c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3b73:	eb 21                	jmp    3b96 <padding+0x23a2>
    3b75:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3b7c:	eb 0e                	jmp    3b8c <padding+0x2398>
    3b7e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3b81:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3b85:	01 45 f8             	add    %eax,-0x8(%rbp)
    3b88:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3b8c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3b90:	7e ec                	jle    3b7e <padding+0x238a>
    3b92:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3b96:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3b9a:	7e d9                	jle    3b75 <padding+0x2381>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3b9c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3ba3:	eb 21                	jmp    3bc6 <padding+0x23d2>
    3ba5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3bac:	eb 0e                	jmp    3bbc <padding+0x23c8>
    3bae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3bb1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3bb5:	01 45 f8             	add    %eax,-0x8(%rbp)
    3bb8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3bbc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3bc0:	7e ec                	jle    3bae <padding+0x23ba>
    3bc2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3bc6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3bca:	7e d9                	jle    3ba5 <padding+0x23b1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3bcc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3bd3:	eb 21                	jmp    3bf6 <padding+0x2402>
    3bd5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3bdc:	eb 0e                	jmp    3bec <padding+0x23f8>
    3bde:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3be1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3be5:	01 45 f8             	add    %eax,-0x8(%rbp)
    3be8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3bec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3bf0:	7e ec                	jle    3bde <padding+0x23ea>
    3bf2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3bf6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3bfa:	7e d9                	jle    3bd5 <padding+0x23e1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3bfc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3c03:	eb 21                	jmp    3c26 <padding+0x2432>
    3c05:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3c0c:	eb 0e                	jmp    3c1c <padding+0x2428>
    3c0e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3c11:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3c15:	01 45 f8             	add    %eax,-0x8(%rbp)
    3c18:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3c1c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3c20:	7e ec                	jle    3c0e <padding+0x241a>
    3c22:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3c26:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3c2a:	7e d9                	jle    3c05 <padding+0x2411>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3c2c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3c33:	eb 21                	jmp    3c56 <padding+0x2462>
    3c35:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3c3c:	eb 0e                	jmp    3c4c <padding+0x2458>
    3c3e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3c41:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3c45:	01 45 f8             	add    %eax,-0x8(%rbp)
    3c48:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3c4c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3c50:	7e ec                	jle    3c3e <padding+0x244a>
    3c52:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3c56:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3c5a:	7e d9                	jle    3c35 <padding+0x2441>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3c5c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3c63:	eb 21                	jmp    3c86 <padding+0x2492>
    3c65:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3c6c:	eb 0e                	jmp    3c7c <padding+0x2488>
    3c6e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3c71:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3c75:	01 45 f8             	add    %eax,-0x8(%rbp)
    3c78:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3c7c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3c80:	7e ec                	jle    3c6e <padding+0x247a>
    3c82:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3c86:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3c8a:	7e d9                	jle    3c65 <padding+0x2471>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3c8c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3c93:	eb 21                	jmp    3cb6 <padding+0x24c2>
    3c95:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3c9c:	eb 0e                	jmp    3cac <padding+0x24b8>
    3c9e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3ca1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3ca5:	01 45 f8             	add    %eax,-0x8(%rbp)
    3ca8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3cac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3cb0:	7e ec                	jle    3c9e <padding+0x24aa>
    3cb2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3cb6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3cba:	7e d9                	jle    3c95 <padding+0x24a1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3cbc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3cc3:	eb 21                	jmp    3ce6 <padding+0x24f2>
    3cc5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3ccc:	eb 0e                	jmp    3cdc <padding+0x24e8>
    3cce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3cd1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3cd5:	01 45 f8             	add    %eax,-0x8(%rbp)
    3cd8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3cdc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3ce0:	7e ec                	jle    3cce <padding+0x24da>
    3ce2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3ce6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3cea:	7e d9                	jle    3cc5 <padding+0x24d1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3cec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3cf3:	eb 21                	jmp    3d16 <padding+0x2522>
    3cf5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3cfc:	eb 0e                	jmp    3d0c <padding+0x2518>
    3cfe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3d01:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3d05:	01 45 f8             	add    %eax,-0x8(%rbp)
    3d08:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3d0c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3d10:	7e ec                	jle    3cfe <padding+0x250a>
    3d12:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3d16:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3d1a:	7e d9                	jle    3cf5 <padding+0x2501>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3d1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3d23:	eb 21                	jmp    3d46 <padding+0x2552>
    3d25:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3d2c:	eb 0e                	jmp    3d3c <padding+0x2548>
    3d2e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3d31:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3d35:	01 45 f8             	add    %eax,-0x8(%rbp)
    3d38:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3d3c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3d40:	7e ec                	jle    3d2e <padding+0x253a>
    3d42:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3d46:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3d4a:	7e d9                	jle    3d25 <padding+0x2531>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3d4c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3d53:	eb 21                	jmp    3d76 <padding+0x2582>
    3d55:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3d5c:	eb 0e                	jmp    3d6c <padding+0x2578>
    3d5e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3d61:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3d65:	01 45 f8             	add    %eax,-0x8(%rbp)
    3d68:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3d6c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3d70:	7e ec                	jle    3d5e <padding+0x256a>
    3d72:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3d76:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3d7a:	7e d9                	jle    3d55 <padding+0x2561>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3d7c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3d83:	eb 21                	jmp    3da6 <padding+0x25b2>
    3d85:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3d8c:	eb 0e                	jmp    3d9c <padding+0x25a8>
    3d8e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3d91:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3d95:	01 45 f8             	add    %eax,-0x8(%rbp)
    3d98:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3d9c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3da0:	7e ec                	jle    3d8e <padding+0x259a>
    3da2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3da6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3daa:	7e d9                	jle    3d85 <padding+0x2591>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3dac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3db3:	eb 21                	jmp    3dd6 <padding+0x25e2>
    3db5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3dbc:	eb 0e                	jmp    3dcc <padding+0x25d8>
    3dbe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3dc1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3dc5:	01 45 f8             	add    %eax,-0x8(%rbp)
    3dc8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3dcc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3dd0:	7e ec                	jle    3dbe <padding+0x25ca>
    3dd2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3dd6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3dda:	7e d9                	jle    3db5 <padding+0x25c1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3ddc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3de3:	eb 21                	jmp    3e06 <padding+0x2612>
    3de5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3dec:	eb 0e                	jmp    3dfc <padding+0x2608>
    3dee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3df1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3df5:	01 45 f8             	add    %eax,-0x8(%rbp)
    3df8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3dfc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3e00:	7e ec                	jle    3dee <padding+0x25fa>
    3e02:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3e06:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3e0a:	7e d9                	jle    3de5 <padding+0x25f1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3e0c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3e13:	eb 21                	jmp    3e36 <padding+0x2642>
    3e15:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3e1c:	eb 0e                	jmp    3e2c <padding+0x2638>
    3e1e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3e21:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3e25:	01 45 f8             	add    %eax,-0x8(%rbp)
    3e28:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3e2c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3e30:	7e ec                	jle    3e1e <padding+0x262a>
    3e32:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3e36:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3e3a:	7e d9                	jle    3e15 <padding+0x2621>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3e3c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3e43:	eb 21                	jmp    3e66 <padding+0x2672>
    3e45:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3e4c:	eb 0e                	jmp    3e5c <padding+0x2668>
    3e4e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3e51:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3e55:	01 45 f8             	add    %eax,-0x8(%rbp)
    3e58:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3e5c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3e60:	7e ec                	jle    3e4e <padding+0x265a>
    3e62:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3e66:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3e6a:	7e d9                	jle    3e45 <padding+0x2651>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3e6c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3e73:	eb 21                	jmp    3e96 <padding+0x26a2>
    3e75:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3e7c:	eb 0e                	jmp    3e8c <padding+0x2698>
    3e7e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3e81:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3e85:	01 45 f8             	add    %eax,-0x8(%rbp)
    3e88:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3e8c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3e90:	7e ec                	jle    3e7e <padding+0x268a>
    3e92:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3e96:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3e9a:	7e d9                	jle    3e75 <padding+0x2681>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3e9c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3ea3:	eb 21                	jmp    3ec6 <padding+0x26d2>
    3ea5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3eac:	eb 0e                	jmp    3ebc <padding+0x26c8>
    3eae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3eb1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3eb5:	01 45 f8             	add    %eax,-0x8(%rbp)
    3eb8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3ebc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3ec0:	7e ec                	jle    3eae <padding+0x26ba>
    3ec2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3ec6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3eca:	7e d9                	jle    3ea5 <padding+0x26b1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3ecc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3ed3:	eb 21                	jmp    3ef6 <padding+0x2702>
    3ed5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3edc:	eb 0e                	jmp    3eec <padding+0x26f8>
    3ede:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3ee1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3ee5:	01 45 f8             	add    %eax,-0x8(%rbp)
    3ee8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3eec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3ef0:	7e ec                	jle    3ede <padding+0x26ea>
    3ef2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3ef6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3efa:	7e d9                	jle    3ed5 <padding+0x26e1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3efc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3f03:	eb 21                	jmp    3f26 <padding+0x2732>
    3f05:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3f0c:	eb 0e                	jmp    3f1c <padding+0x2728>
    3f0e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3f11:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3f15:	01 45 f8             	add    %eax,-0x8(%rbp)
    3f18:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3f1c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3f20:	7e ec                	jle    3f0e <padding+0x271a>
    3f22:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3f26:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3f2a:	7e d9                	jle    3f05 <padding+0x2711>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3f2c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3f33:	eb 21                	jmp    3f56 <padding+0x2762>
    3f35:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3f3c:	eb 0e                	jmp    3f4c <padding+0x2758>
    3f3e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3f41:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3f45:	01 45 f8             	add    %eax,-0x8(%rbp)
    3f48:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3f4c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3f50:	7e ec                	jle    3f3e <padding+0x274a>
    3f52:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3f56:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3f5a:	7e d9                	jle    3f35 <padding+0x2741>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3f5c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3f63:	eb 21                	jmp    3f86 <padding+0x2792>
    3f65:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3f6c:	eb 0e                	jmp    3f7c <padding+0x2788>
    3f6e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3f71:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3f75:	01 45 f8             	add    %eax,-0x8(%rbp)
    3f78:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3f7c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3f80:	7e ec                	jle    3f6e <padding+0x277a>
    3f82:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3f86:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3f8a:	7e d9                	jle    3f65 <padding+0x2771>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3f8c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3f93:	eb 21                	jmp    3fb6 <padding+0x27c2>
    3f95:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3f9c:	eb 0e                	jmp    3fac <padding+0x27b8>
    3f9e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3fa1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3fa5:	01 45 f8             	add    %eax,-0x8(%rbp)
    3fa8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3fac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3fb0:	7e ec                	jle    3f9e <padding+0x27aa>
    3fb2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3fb6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3fba:	7e d9                	jle    3f95 <padding+0x27a1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3fbc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3fc3:	eb 21                	jmp    3fe6 <padding+0x27f2>
    3fc5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3fcc:	eb 0e                	jmp    3fdc <padding+0x27e8>
    3fce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3fd1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    3fd5:	01 45 f8             	add    %eax,-0x8(%rbp)
    3fd8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3fdc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    3fe0:	7e ec                	jle    3fce <padding+0x27da>
    3fe2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3fe6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    3fea:	7e d9                	jle    3fc5 <padding+0x27d1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    3fec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3ff3:	eb 21                	jmp    4016 <padding+0x2822>
    3ff5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3ffc:	eb 0e                	jmp    400c <padding+0x2818>
    3ffe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4001:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4005:	01 45 f8             	add    %eax,-0x8(%rbp)
    4008:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    400c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4010:	7e ec                	jle    3ffe <padding+0x280a>
    4012:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4016:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    401a:	7e d9                	jle    3ff5 <padding+0x2801>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    401c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4023:	eb 21                	jmp    4046 <padding+0x2852>
    4025:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    402c:	eb 0e                	jmp    403c <padding+0x2848>
    402e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4031:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4035:	01 45 f8             	add    %eax,-0x8(%rbp)
    4038:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    403c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4040:	7e ec                	jle    402e <padding+0x283a>
    4042:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4046:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    404a:	7e d9                	jle    4025 <padding+0x2831>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    404c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4053:	eb 21                	jmp    4076 <padding+0x2882>
    4055:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    405c:	eb 0e                	jmp    406c <padding+0x2878>
    405e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4061:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4065:	01 45 f8             	add    %eax,-0x8(%rbp)
    4068:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    406c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4070:	7e ec                	jle    405e <padding+0x286a>
    4072:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4076:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    407a:	7e d9                	jle    4055 <padding+0x2861>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    407c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4083:	eb 21                	jmp    40a6 <padding+0x28b2>
    4085:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    408c:	eb 0e                	jmp    409c <padding+0x28a8>
    408e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4091:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4095:	01 45 f8             	add    %eax,-0x8(%rbp)
    4098:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    409c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    40a0:	7e ec                	jle    408e <padding+0x289a>
    40a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    40a6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    40aa:	7e d9                	jle    4085 <padding+0x2891>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    40ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    40b3:	eb 21                	jmp    40d6 <padding+0x28e2>
    40b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    40bc:	eb 0e                	jmp    40cc <padding+0x28d8>
    40be:	8b 45 f4             	mov    -0xc(%rbp),%eax
    40c1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    40c5:	01 45 f8             	add    %eax,-0x8(%rbp)
    40c8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    40cc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    40d0:	7e ec                	jle    40be <padding+0x28ca>
    40d2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    40d6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    40da:	7e d9                	jle    40b5 <padding+0x28c1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    40dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    40e3:	eb 21                	jmp    4106 <padding+0x2912>
    40e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    40ec:	eb 0e                	jmp    40fc <padding+0x2908>
    40ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    40f1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    40f5:	01 45 f8             	add    %eax,-0x8(%rbp)
    40f8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    40fc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4100:	7e ec                	jle    40ee <padding+0x28fa>
    4102:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4106:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    410a:	7e d9                	jle    40e5 <padding+0x28f1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    410c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4113:	eb 21                	jmp    4136 <padding+0x2942>
    4115:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    411c:	eb 0e                	jmp    412c <padding+0x2938>
    411e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4121:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4125:	01 45 f8             	add    %eax,-0x8(%rbp)
    4128:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    412c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4130:	7e ec                	jle    411e <padding+0x292a>
    4132:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4136:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    413a:	7e d9                	jle    4115 <padding+0x2921>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    413c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4143:	eb 21                	jmp    4166 <padding+0x2972>
    4145:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    414c:	eb 0e                	jmp    415c <padding+0x2968>
    414e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4151:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4155:	01 45 f8             	add    %eax,-0x8(%rbp)
    4158:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    415c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4160:	7e ec                	jle    414e <padding+0x295a>
    4162:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4166:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    416a:	7e d9                	jle    4145 <padding+0x2951>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    416c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4173:	eb 21                	jmp    4196 <padding+0x29a2>
    4175:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    417c:	eb 0e                	jmp    418c <padding+0x2998>
    417e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4181:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4185:	01 45 f8             	add    %eax,-0x8(%rbp)
    4188:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    418c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4190:	7e ec                	jle    417e <padding+0x298a>
    4192:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4196:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    419a:	7e d9                	jle    4175 <padding+0x2981>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    419c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    41a3:	eb 21                	jmp    41c6 <padding+0x29d2>
    41a5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    41ac:	eb 0e                	jmp    41bc <padding+0x29c8>
    41ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    41b1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    41b5:	01 45 f8             	add    %eax,-0x8(%rbp)
    41b8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    41bc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    41c0:	7e ec                	jle    41ae <padding+0x29ba>
    41c2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    41c6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    41ca:	7e d9                	jle    41a5 <padding+0x29b1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    41cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    41d3:	eb 21                	jmp    41f6 <padding+0x2a02>
    41d5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    41dc:	eb 0e                	jmp    41ec <padding+0x29f8>
    41de:	8b 45 f4             	mov    -0xc(%rbp),%eax
    41e1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    41e5:	01 45 f8             	add    %eax,-0x8(%rbp)
    41e8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    41ec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    41f0:	7e ec                	jle    41de <padding+0x29ea>
    41f2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    41f6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    41fa:	7e d9                	jle    41d5 <padding+0x29e1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    41fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4203:	eb 21                	jmp    4226 <padding+0x2a32>
    4205:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    420c:	eb 0e                	jmp    421c <padding+0x2a28>
    420e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4211:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4215:	01 45 f8             	add    %eax,-0x8(%rbp)
    4218:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    421c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4220:	7e ec                	jle    420e <padding+0x2a1a>
    4222:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4226:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    422a:	7e d9                	jle    4205 <padding+0x2a11>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    422c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4233:	eb 21                	jmp    4256 <padding+0x2a62>
    4235:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    423c:	eb 0e                	jmp    424c <padding+0x2a58>
    423e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4241:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4245:	01 45 f8             	add    %eax,-0x8(%rbp)
    4248:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    424c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4250:	7e ec                	jle    423e <padding+0x2a4a>
    4252:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4256:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    425a:	7e d9                	jle    4235 <padding+0x2a41>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    425c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4263:	eb 21                	jmp    4286 <padding+0x2a92>
    4265:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    426c:	eb 0e                	jmp    427c <padding+0x2a88>
    426e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4271:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4275:	01 45 f8             	add    %eax,-0x8(%rbp)
    4278:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    427c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4280:	7e ec                	jle    426e <padding+0x2a7a>
    4282:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4286:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    428a:	7e d9                	jle    4265 <padding+0x2a71>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    428c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4293:	eb 21                	jmp    42b6 <padding+0x2ac2>
    4295:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    429c:	eb 0e                	jmp    42ac <padding+0x2ab8>
    429e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    42a1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    42a5:	01 45 f8             	add    %eax,-0x8(%rbp)
    42a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    42ac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    42b0:	7e ec                	jle    429e <padding+0x2aaa>
    42b2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    42b6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    42ba:	7e d9                	jle    4295 <padding+0x2aa1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    42bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    42c3:	eb 21                	jmp    42e6 <padding+0x2af2>
    42c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    42cc:	eb 0e                	jmp    42dc <padding+0x2ae8>
    42ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    42d1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    42d5:	01 45 f8             	add    %eax,-0x8(%rbp)
    42d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    42dc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    42e0:	7e ec                	jle    42ce <padding+0x2ada>
    42e2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    42e6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    42ea:	7e d9                	jle    42c5 <padding+0x2ad1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    42ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    42f3:	eb 21                	jmp    4316 <padding+0x2b22>
    42f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    42fc:	eb 0e                	jmp    430c <padding+0x2b18>
    42fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4301:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4305:	01 45 f8             	add    %eax,-0x8(%rbp)
    4308:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    430c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4310:	7e ec                	jle    42fe <padding+0x2b0a>
    4312:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4316:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    431a:	7e d9                	jle    42f5 <padding+0x2b01>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    431c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4323:	eb 21                	jmp    4346 <padding+0x2b52>
    4325:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    432c:	eb 0e                	jmp    433c <padding+0x2b48>
    432e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4331:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4335:	01 45 f8             	add    %eax,-0x8(%rbp)
    4338:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    433c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4340:	7e ec                	jle    432e <padding+0x2b3a>
    4342:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4346:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    434a:	7e d9                	jle    4325 <padding+0x2b31>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    434c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4353:	eb 21                	jmp    4376 <padding+0x2b82>
    4355:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    435c:	eb 0e                	jmp    436c <padding+0x2b78>
    435e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4361:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4365:	01 45 f8             	add    %eax,-0x8(%rbp)
    4368:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    436c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4370:	7e ec                	jle    435e <padding+0x2b6a>
    4372:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4376:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    437a:	7e d9                	jle    4355 <padding+0x2b61>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    437c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4383:	eb 21                	jmp    43a6 <padding+0x2bb2>
    4385:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    438c:	eb 0e                	jmp    439c <padding+0x2ba8>
    438e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4391:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4395:	01 45 f8             	add    %eax,-0x8(%rbp)
    4398:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    439c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    43a0:	7e ec                	jle    438e <padding+0x2b9a>
    43a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    43a6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    43aa:	7e d9                	jle    4385 <padding+0x2b91>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    43ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    43b3:	eb 21                	jmp    43d6 <padding+0x2be2>
    43b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    43bc:	eb 0e                	jmp    43cc <padding+0x2bd8>
    43be:	8b 45 f4             	mov    -0xc(%rbp),%eax
    43c1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    43c5:	01 45 f8             	add    %eax,-0x8(%rbp)
    43c8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    43cc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    43d0:	7e ec                	jle    43be <padding+0x2bca>
    43d2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    43d6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    43da:	7e d9                	jle    43b5 <padding+0x2bc1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    43dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    43e3:	eb 21                	jmp    4406 <padding+0x2c12>
    43e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    43ec:	eb 0e                	jmp    43fc <padding+0x2c08>
    43ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    43f1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    43f5:	01 45 f8             	add    %eax,-0x8(%rbp)
    43f8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    43fc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4400:	7e ec                	jle    43ee <padding+0x2bfa>
    4402:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4406:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    440a:	7e d9                	jle    43e5 <padding+0x2bf1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    440c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4413:	eb 21                	jmp    4436 <padding+0x2c42>
    4415:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    441c:	eb 0e                	jmp    442c <padding+0x2c38>
    441e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4421:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4425:	01 45 f8             	add    %eax,-0x8(%rbp)
    4428:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    442c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4430:	7e ec                	jle    441e <padding+0x2c2a>
    4432:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4436:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    443a:	7e d9                	jle    4415 <padding+0x2c21>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    443c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4443:	eb 21                	jmp    4466 <padding+0x2c72>
    4445:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    444c:	eb 0e                	jmp    445c <padding+0x2c68>
    444e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4451:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4455:	01 45 f8             	add    %eax,-0x8(%rbp)
    4458:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    445c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4460:	7e ec                	jle    444e <padding+0x2c5a>
    4462:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4466:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    446a:	7e d9                	jle    4445 <padding+0x2c51>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    446c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4473:	eb 21                	jmp    4496 <padding+0x2ca2>
    4475:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    447c:	eb 0e                	jmp    448c <padding+0x2c98>
    447e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4481:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4485:	01 45 f8             	add    %eax,-0x8(%rbp)
    4488:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    448c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4490:	7e ec                	jle    447e <padding+0x2c8a>
    4492:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4496:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    449a:	7e d9                	jle    4475 <padding+0x2c81>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    449c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    44a3:	eb 21                	jmp    44c6 <padding+0x2cd2>
    44a5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    44ac:	eb 0e                	jmp    44bc <padding+0x2cc8>
    44ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    44b1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    44b5:	01 45 f8             	add    %eax,-0x8(%rbp)
    44b8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    44bc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    44c0:	7e ec                	jle    44ae <padding+0x2cba>
    44c2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    44c6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    44ca:	7e d9                	jle    44a5 <padding+0x2cb1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    44cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    44d3:	eb 21                	jmp    44f6 <padding+0x2d02>
    44d5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    44dc:	eb 0e                	jmp    44ec <padding+0x2cf8>
    44de:	8b 45 f4             	mov    -0xc(%rbp),%eax
    44e1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    44e5:	01 45 f8             	add    %eax,-0x8(%rbp)
    44e8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    44ec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    44f0:	7e ec                	jle    44de <padding+0x2cea>
    44f2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    44f6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    44fa:	7e d9                	jle    44d5 <padding+0x2ce1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    44fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4503:	eb 21                	jmp    4526 <padding+0x2d32>
    4505:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    450c:	eb 0e                	jmp    451c <padding+0x2d28>
    450e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4511:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4515:	01 45 f8             	add    %eax,-0x8(%rbp)
    4518:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    451c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4520:	7e ec                	jle    450e <padding+0x2d1a>
    4522:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4526:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    452a:	7e d9                	jle    4505 <padding+0x2d11>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    452c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4533:	eb 21                	jmp    4556 <padding+0x2d62>
    4535:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    453c:	eb 0e                	jmp    454c <padding+0x2d58>
    453e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4541:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4545:	01 45 f8             	add    %eax,-0x8(%rbp)
    4548:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    454c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4550:	7e ec                	jle    453e <padding+0x2d4a>
    4552:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4556:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    455a:	7e d9                	jle    4535 <padding+0x2d41>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    455c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4563:	eb 21                	jmp    4586 <padding+0x2d92>
    4565:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    456c:	eb 0e                	jmp    457c <padding+0x2d88>
    456e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4571:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4575:	01 45 f8             	add    %eax,-0x8(%rbp)
    4578:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    457c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4580:	7e ec                	jle    456e <padding+0x2d7a>
    4582:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4586:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    458a:	7e d9                	jle    4565 <padding+0x2d71>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    458c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4593:	eb 21                	jmp    45b6 <padding+0x2dc2>
    4595:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    459c:	eb 0e                	jmp    45ac <padding+0x2db8>
    459e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    45a1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    45a5:	01 45 f8             	add    %eax,-0x8(%rbp)
    45a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    45ac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    45b0:	7e ec                	jle    459e <padding+0x2daa>
    45b2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    45b6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    45ba:	7e d9                	jle    4595 <padding+0x2da1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    45bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    45c3:	eb 21                	jmp    45e6 <padding+0x2df2>
    45c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    45cc:	eb 0e                	jmp    45dc <padding+0x2de8>
    45ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    45d1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    45d5:	01 45 f8             	add    %eax,-0x8(%rbp)
    45d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    45dc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    45e0:	7e ec                	jle    45ce <padding+0x2dda>
    45e2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    45e6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    45ea:	7e d9                	jle    45c5 <padding+0x2dd1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    45ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    45f3:	eb 21                	jmp    4616 <padding+0x2e22>
    45f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    45fc:	eb 0e                	jmp    460c <padding+0x2e18>
    45fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4601:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4605:	01 45 f8             	add    %eax,-0x8(%rbp)
    4608:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    460c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4610:	7e ec                	jle    45fe <padding+0x2e0a>
    4612:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4616:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    461a:	7e d9                	jle    45f5 <padding+0x2e01>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    461c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4623:	eb 21                	jmp    4646 <padding+0x2e52>
    4625:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    462c:	eb 0e                	jmp    463c <padding+0x2e48>
    462e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4631:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4635:	01 45 f8             	add    %eax,-0x8(%rbp)
    4638:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    463c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4640:	7e ec                	jle    462e <padding+0x2e3a>
    4642:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4646:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    464a:	7e d9                	jle    4625 <padding+0x2e31>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    464c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4653:	eb 21                	jmp    4676 <padding+0x2e82>
    4655:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    465c:	eb 0e                	jmp    466c <padding+0x2e78>
    465e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4661:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4665:	01 45 f8             	add    %eax,-0x8(%rbp)
    4668:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    466c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4670:	7e ec                	jle    465e <padding+0x2e6a>
    4672:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4676:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    467a:	7e d9                	jle    4655 <padding+0x2e61>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    467c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4683:	eb 21                	jmp    46a6 <padding+0x2eb2>
    4685:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    468c:	eb 0e                	jmp    469c <padding+0x2ea8>
    468e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4691:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4695:	01 45 f8             	add    %eax,-0x8(%rbp)
    4698:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    469c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    46a0:	7e ec                	jle    468e <padding+0x2e9a>
    46a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    46a6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    46aa:	7e d9                	jle    4685 <padding+0x2e91>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    46ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    46b3:	eb 21                	jmp    46d6 <padding+0x2ee2>
    46b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    46bc:	eb 0e                	jmp    46cc <padding+0x2ed8>
    46be:	8b 45 f4             	mov    -0xc(%rbp),%eax
    46c1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    46c5:	01 45 f8             	add    %eax,-0x8(%rbp)
    46c8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    46cc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    46d0:	7e ec                	jle    46be <padding+0x2eca>
    46d2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    46d6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    46da:	7e d9                	jle    46b5 <padding+0x2ec1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    46dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    46e3:	eb 21                	jmp    4706 <padding+0x2f12>
    46e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    46ec:	eb 0e                	jmp    46fc <padding+0x2f08>
    46ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    46f1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    46f5:	01 45 f8             	add    %eax,-0x8(%rbp)
    46f8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    46fc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4700:	7e ec                	jle    46ee <padding+0x2efa>
    4702:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4706:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    470a:	7e d9                	jle    46e5 <padding+0x2ef1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    470c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4713:	eb 21                	jmp    4736 <padding+0x2f42>
    4715:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    471c:	eb 0e                	jmp    472c <padding+0x2f38>
    471e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4721:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4725:	01 45 f8             	add    %eax,-0x8(%rbp)
    4728:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    472c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4730:	7e ec                	jle    471e <padding+0x2f2a>
    4732:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4736:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    473a:	7e d9                	jle    4715 <padding+0x2f21>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    473c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4743:	eb 21                	jmp    4766 <padding+0x2f72>
    4745:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    474c:	eb 0e                	jmp    475c <padding+0x2f68>
    474e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4751:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4755:	01 45 f8             	add    %eax,-0x8(%rbp)
    4758:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    475c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4760:	7e ec                	jle    474e <padding+0x2f5a>
    4762:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4766:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    476a:	7e d9                	jle    4745 <padding+0x2f51>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    476c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4773:	eb 21                	jmp    4796 <padding+0x2fa2>
    4775:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    477c:	eb 0e                	jmp    478c <padding+0x2f98>
    477e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4781:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4785:	01 45 f8             	add    %eax,-0x8(%rbp)
    4788:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    478c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4790:	7e ec                	jle    477e <padding+0x2f8a>
    4792:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4796:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    479a:	7e d9                	jle    4775 <padding+0x2f81>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    479c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    47a3:	eb 21                	jmp    47c6 <padding+0x2fd2>
    47a5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    47ac:	eb 0e                	jmp    47bc <padding+0x2fc8>
    47ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    47b1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    47b5:	01 45 f8             	add    %eax,-0x8(%rbp)
    47b8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    47bc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    47c0:	7e ec                	jle    47ae <padding+0x2fba>
    47c2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    47c6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    47ca:	7e d9                	jle    47a5 <padding+0x2fb1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    47cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    47d3:	eb 21                	jmp    47f6 <padding+0x3002>
    47d5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    47dc:	eb 0e                	jmp    47ec <padding+0x2ff8>
    47de:	8b 45 f4             	mov    -0xc(%rbp),%eax
    47e1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    47e5:	01 45 f8             	add    %eax,-0x8(%rbp)
    47e8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    47ec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    47f0:	7e ec                	jle    47de <padding+0x2fea>
    47f2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    47f6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    47fa:	7e d9                	jle    47d5 <padding+0x2fe1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    47fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4803:	eb 21                	jmp    4826 <padding+0x3032>
    4805:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    480c:	eb 0e                	jmp    481c <padding+0x3028>
    480e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4811:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4815:	01 45 f8             	add    %eax,-0x8(%rbp)
    4818:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    481c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4820:	7e ec                	jle    480e <padding+0x301a>
    4822:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4826:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    482a:	7e d9                	jle    4805 <padding+0x3011>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    482c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4833:	eb 21                	jmp    4856 <padding+0x3062>
    4835:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    483c:	eb 0e                	jmp    484c <padding+0x3058>
    483e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4841:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4845:	01 45 f8             	add    %eax,-0x8(%rbp)
    4848:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    484c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4850:	7e ec                	jle    483e <padding+0x304a>
    4852:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4856:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    485a:	7e d9                	jle    4835 <padding+0x3041>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    485c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4863:	eb 21                	jmp    4886 <padding+0x3092>
    4865:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    486c:	eb 0e                	jmp    487c <padding+0x3088>
    486e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4871:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4875:	01 45 f8             	add    %eax,-0x8(%rbp)
    4878:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    487c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4880:	7e ec                	jle    486e <padding+0x307a>
    4882:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4886:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    488a:	7e d9                	jle    4865 <padding+0x3071>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    488c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4893:	eb 21                	jmp    48b6 <padding+0x30c2>
    4895:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    489c:	eb 0e                	jmp    48ac <padding+0x30b8>
    489e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    48a1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    48a5:	01 45 f8             	add    %eax,-0x8(%rbp)
    48a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    48ac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    48b0:	7e ec                	jle    489e <padding+0x30aa>
    48b2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    48b6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    48ba:	7e d9                	jle    4895 <padding+0x30a1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    48bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    48c3:	eb 21                	jmp    48e6 <padding+0x30f2>
    48c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    48cc:	eb 0e                	jmp    48dc <padding+0x30e8>
    48ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    48d1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    48d5:	01 45 f8             	add    %eax,-0x8(%rbp)
    48d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    48dc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    48e0:	7e ec                	jle    48ce <padding+0x30da>
    48e2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    48e6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    48ea:	7e d9                	jle    48c5 <padding+0x30d1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    48ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    48f3:	eb 21                	jmp    4916 <padding+0x3122>
    48f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    48fc:	eb 0e                	jmp    490c <padding+0x3118>
    48fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4901:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4905:	01 45 f8             	add    %eax,-0x8(%rbp)
    4908:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    490c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4910:	7e ec                	jle    48fe <padding+0x310a>
    4912:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4916:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    491a:	7e d9                	jle    48f5 <padding+0x3101>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    491c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4923:	eb 21                	jmp    4946 <padding+0x3152>
    4925:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    492c:	eb 0e                	jmp    493c <padding+0x3148>
    492e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4931:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4935:	01 45 f8             	add    %eax,-0x8(%rbp)
    4938:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    493c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4940:	7e ec                	jle    492e <padding+0x313a>
    4942:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4946:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    494a:	7e d9                	jle    4925 <padding+0x3131>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    494c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4953:	eb 21                	jmp    4976 <padding+0x3182>
    4955:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    495c:	eb 0e                	jmp    496c <padding+0x3178>
    495e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4961:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4965:	01 45 f8             	add    %eax,-0x8(%rbp)
    4968:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    496c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4970:	7e ec                	jle    495e <padding+0x316a>
    4972:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4976:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    497a:	7e d9                	jle    4955 <padding+0x3161>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    497c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4983:	eb 21                	jmp    49a6 <padding+0x31b2>
    4985:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    498c:	eb 0e                	jmp    499c <padding+0x31a8>
    498e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4991:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4995:	01 45 f8             	add    %eax,-0x8(%rbp)
    4998:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    499c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    49a0:	7e ec                	jle    498e <padding+0x319a>
    49a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    49a6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    49aa:	7e d9                	jle    4985 <padding+0x3191>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    49ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    49b3:	eb 21                	jmp    49d6 <padding+0x31e2>
    49b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    49bc:	eb 0e                	jmp    49cc <padding+0x31d8>
    49be:	8b 45 f4             	mov    -0xc(%rbp),%eax
    49c1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    49c5:	01 45 f8             	add    %eax,-0x8(%rbp)
    49c8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    49cc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    49d0:	7e ec                	jle    49be <padding+0x31ca>
    49d2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    49d6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    49da:	7e d9                	jle    49b5 <padding+0x31c1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    49dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    49e3:	eb 21                	jmp    4a06 <padding+0x3212>
    49e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    49ec:	eb 0e                	jmp    49fc <padding+0x3208>
    49ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    49f1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    49f5:	01 45 f8             	add    %eax,-0x8(%rbp)
    49f8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    49fc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4a00:	7e ec                	jle    49ee <padding+0x31fa>
    4a02:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4a06:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4a0a:	7e d9                	jle    49e5 <padding+0x31f1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4a0c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4a13:	eb 21                	jmp    4a36 <padding+0x3242>
    4a15:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4a1c:	eb 0e                	jmp    4a2c <padding+0x3238>
    4a1e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4a21:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4a25:	01 45 f8             	add    %eax,-0x8(%rbp)
    4a28:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4a2c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4a30:	7e ec                	jle    4a1e <padding+0x322a>
    4a32:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4a36:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4a3a:	7e d9                	jle    4a15 <padding+0x3221>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4a3c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4a43:	eb 21                	jmp    4a66 <padding+0x3272>
    4a45:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4a4c:	eb 0e                	jmp    4a5c <padding+0x3268>
    4a4e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4a51:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4a55:	01 45 f8             	add    %eax,-0x8(%rbp)
    4a58:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4a5c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4a60:	7e ec                	jle    4a4e <padding+0x325a>
    4a62:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4a66:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4a6a:	7e d9                	jle    4a45 <padding+0x3251>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4a6c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4a73:	eb 21                	jmp    4a96 <padding+0x32a2>
    4a75:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4a7c:	eb 0e                	jmp    4a8c <padding+0x3298>
    4a7e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4a81:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4a85:	01 45 f8             	add    %eax,-0x8(%rbp)
    4a88:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4a8c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4a90:	7e ec                	jle    4a7e <padding+0x328a>
    4a92:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4a96:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4a9a:	7e d9                	jle    4a75 <padding+0x3281>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4a9c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4aa3:	eb 21                	jmp    4ac6 <padding+0x32d2>
    4aa5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4aac:	eb 0e                	jmp    4abc <padding+0x32c8>
    4aae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4ab1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4ab5:	01 45 f8             	add    %eax,-0x8(%rbp)
    4ab8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4abc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4ac0:	7e ec                	jle    4aae <padding+0x32ba>
    4ac2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4ac6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4aca:	7e d9                	jle    4aa5 <padding+0x32b1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4acc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4ad3:	eb 21                	jmp    4af6 <padding+0x3302>
    4ad5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4adc:	eb 0e                	jmp    4aec <padding+0x32f8>
    4ade:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4ae1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4ae5:	01 45 f8             	add    %eax,-0x8(%rbp)
    4ae8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4aec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4af0:	7e ec                	jle    4ade <padding+0x32ea>
    4af2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4af6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4afa:	7e d9                	jle    4ad5 <padding+0x32e1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4afc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4b03:	eb 21                	jmp    4b26 <padding+0x3332>
    4b05:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4b0c:	eb 0e                	jmp    4b1c <padding+0x3328>
    4b0e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4b11:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4b15:	01 45 f8             	add    %eax,-0x8(%rbp)
    4b18:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4b1c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4b20:	7e ec                	jle    4b0e <padding+0x331a>
    4b22:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4b26:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4b2a:	7e d9                	jle    4b05 <padding+0x3311>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4b2c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4b33:	eb 21                	jmp    4b56 <padding+0x3362>
    4b35:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4b3c:	eb 0e                	jmp    4b4c <padding+0x3358>
    4b3e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4b41:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4b45:	01 45 f8             	add    %eax,-0x8(%rbp)
    4b48:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4b4c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4b50:	7e ec                	jle    4b3e <padding+0x334a>
    4b52:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4b56:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4b5a:	7e d9                	jle    4b35 <padding+0x3341>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4b5c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4b63:	eb 21                	jmp    4b86 <padding+0x3392>
    4b65:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4b6c:	eb 0e                	jmp    4b7c <padding+0x3388>
    4b6e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4b71:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4b75:	01 45 f8             	add    %eax,-0x8(%rbp)
    4b78:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4b7c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4b80:	7e ec                	jle    4b6e <padding+0x337a>
    4b82:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4b86:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4b8a:	7e d9                	jle    4b65 <padding+0x3371>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4b8c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4b93:	eb 21                	jmp    4bb6 <padding+0x33c2>
    4b95:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4b9c:	eb 0e                	jmp    4bac <padding+0x33b8>
    4b9e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4ba1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4ba5:	01 45 f8             	add    %eax,-0x8(%rbp)
    4ba8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4bac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4bb0:	7e ec                	jle    4b9e <padding+0x33aa>
    4bb2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4bb6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4bba:	7e d9                	jle    4b95 <padding+0x33a1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4bbc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4bc3:	eb 21                	jmp    4be6 <padding+0x33f2>
    4bc5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4bcc:	eb 0e                	jmp    4bdc <padding+0x33e8>
    4bce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4bd1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4bd5:	01 45 f8             	add    %eax,-0x8(%rbp)
    4bd8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4bdc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4be0:	7e ec                	jle    4bce <padding+0x33da>
    4be2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4be6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4bea:	7e d9                	jle    4bc5 <padding+0x33d1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4bec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4bf3:	eb 21                	jmp    4c16 <padding+0x3422>
    4bf5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4bfc:	eb 0e                	jmp    4c0c <padding+0x3418>
    4bfe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4c01:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4c05:	01 45 f8             	add    %eax,-0x8(%rbp)
    4c08:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4c0c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4c10:	7e ec                	jle    4bfe <padding+0x340a>
    4c12:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4c16:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4c1a:	7e d9                	jle    4bf5 <padding+0x3401>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4c1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4c23:	eb 21                	jmp    4c46 <padding+0x3452>
    4c25:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4c2c:	eb 0e                	jmp    4c3c <padding+0x3448>
    4c2e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4c31:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4c35:	01 45 f8             	add    %eax,-0x8(%rbp)
    4c38:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4c3c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4c40:	7e ec                	jle    4c2e <padding+0x343a>
    4c42:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4c46:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4c4a:	7e d9                	jle    4c25 <padding+0x3431>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4c4c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4c53:	eb 21                	jmp    4c76 <padding+0x3482>
    4c55:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4c5c:	eb 0e                	jmp    4c6c <padding+0x3478>
    4c5e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4c61:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4c65:	01 45 f8             	add    %eax,-0x8(%rbp)
    4c68:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4c6c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4c70:	7e ec                	jle    4c5e <padding+0x346a>
    4c72:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4c76:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4c7a:	7e d9                	jle    4c55 <padding+0x3461>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4c7c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4c83:	eb 21                	jmp    4ca6 <padding+0x34b2>
    4c85:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4c8c:	eb 0e                	jmp    4c9c <padding+0x34a8>
    4c8e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4c91:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4c95:	01 45 f8             	add    %eax,-0x8(%rbp)
    4c98:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4c9c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4ca0:	7e ec                	jle    4c8e <padding+0x349a>
    4ca2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4ca6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4caa:	7e d9                	jle    4c85 <padding+0x3491>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4cac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4cb3:	eb 21                	jmp    4cd6 <padding+0x34e2>
    4cb5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4cbc:	eb 0e                	jmp    4ccc <padding+0x34d8>
    4cbe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4cc1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4cc5:	01 45 f8             	add    %eax,-0x8(%rbp)
    4cc8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4ccc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4cd0:	7e ec                	jle    4cbe <padding+0x34ca>
    4cd2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4cd6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4cda:	7e d9                	jle    4cb5 <padding+0x34c1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4cdc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4ce3:	eb 21                	jmp    4d06 <padding+0x3512>
    4ce5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4cec:	eb 0e                	jmp    4cfc <padding+0x3508>
    4cee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4cf1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4cf5:	01 45 f8             	add    %eax,-0x8(%rbp)
    4cf8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4cfc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4d00:	7e ec                	jle    4cee <padding+0x34fa>
    4d02:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4d06:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4d0a:	7e d9                	jle    4ce5 <padding+0x34f1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4d0c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4d13:	eb 21                	jmp    4d36 <padding+0x3542>
    4d15:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4d1c:	eb 0e                	jmp    4d2c <padding+0x3538>
    4d1e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4d21:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4d25:	01 45 f8             	add    %eax,-0x8(%rbp)
    4d28:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4d2c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4d30:	7e ec                	jle    4d1e <padding+0x352a>
    4d32:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4d36:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4d3a:	7e d9                	jle    4d15 <padding+0x3521>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4d3c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4d43:	eb 21                	jmp    4d66 <padding+0x3572>
    4d45:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4d4c:	eb 0e                	jmp    4d5c <padding+0x3568>
    4d4e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4d51:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4d55:	01 45 f8             	add    %eax,-0x8(%rbp)
    4d58:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4d5c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4d60:	7e ec                	jle    4d4e <padding+0x355a>
    4d62:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4d66:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4d6a:	7e d9                	jle    4d45 <padding+0x3551>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4d6c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4d73:	eb 21                	jmp    4d96 <padding+0x35a2>
    4d75:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4d7c:	eb 0e                	jmp    4d8c <padding+0x3598>
    4d7e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4d81:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4d85:	01 45 f8             	add    %eax,-0x8(%rbp)
    4d88:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4d8c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4d90:	7e ec                	jle    4d7e <padding+0x358a>
    4d92:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4d96:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4d9a:	7e d9                	jle    4d75 <padding+0x3581>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4d9c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4da3:	eb 21                	jmp    4dc6 <padding+0x35d2>
    4da5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4dac:	eb 0e                	jmp    4dbc <padding+0x35c8>
    4dae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4db1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4db5:	01 45 f8             	add    %eax,-0x8(%rbp)
    4db8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4dbc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4dc0:	7e ec                	jle    4dae <padding+0x35ba>
    4dc2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4dc6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4dca:	7e d9                	jle    4da5 <padding+0x35b1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4dcc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4dd3:	eb 21                	jmp    4df6 <padding+0x3602>
    4dd5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4ddc:	eb 0e                	jmp    4dec <padding+0x35f8>
    4dde:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4de1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4de5:	01 45 f8             	add    %eax,-0x8(%rbp)
    4de8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4dec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4df0:	7e ec                	jle    4dde <padding+0x35ea>
    4df2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4df6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4dfa:	7e d9                	jle    4dd5 <padding+0x35e1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4dfc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4e03:	eb 21                	jmp    4e26 <padding+0x3632>
    4e05:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4e0c:	eb 0e                	jmp    4e1c <padding+0x3628>
    4e0e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4e11:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4e15:	01 45 f8             	add    %eax,-0x8(%rbp)
    4e18:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4e1c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4e20:	7e ec                	jle    4e0e <padding+0x361a>
    4e22:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4e26:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4e2a:	7e d9                	jle    4e05 <padding+0x3611>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4e2c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4e33:	eb 21                	jmp    4e56 <padding+0x3662>
    4e35:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4e3c:	eb 0e                	jmp    4e4c <padding+0x3658>
    4e3e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4e41:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4e45:	01 45 f8             	add    %eax,-0x8(%rbp)
    4e48:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4e4c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4e50:	7e ec                	jle    4e3e <padding+0x364a>
    4e52:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4e56:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4e5a:	7e d9                	jle    4e35 <padding+0x3641>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4e5c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4e63:	eb 21                	jmp    4e86 <padding+0x3692>
    4e65:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4e6c:	eb 0e                	jmp    4e7c <padding+0x3688>
    4e6e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4e71:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4e75:	01 45 f8             	add    %eax,-0x8(%rbp)
    4e78:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4e7c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4e80:	7e ec                	jle    4e6e <padding+0x367a>
    4e82:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4e86:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4e8a:	7e d9                	jle    4e65 <padding+0x3671>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4e8c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4e93:	eb 21                	jmp    4eb6 <padding+0x36c2>
    4e95:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4e9c:	eb 0e                	jmp    4eac <padding+0x36b8>
    4e9e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4ea1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4ea5:	01 45 f8             	add    %eax,-0x8(%rbp)
    4ea8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4eac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4eb0:	7e ec                	jle    4e9e <padding+0x36aa>
    4eb2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4eb6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4eba:	7e d9                	jle    4e95 <padding+0x36a1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4ebc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4ec3:	eb 21                	jmp    4ee6 <padding+0x36f2>
    4ec5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4ecc:	eb 0e                	jmp    4edc <padding+0x36e8>
    4ece:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4ed1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4ed5:	01 45 f8             	add    %eax,-0x8(%rbp)
    4ed8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4edc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4ee0:	7e ec                	jle    4ece <padding+0x36da>
    4ee2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4ee6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4eea:	7e d9                	jle    4ec5 <padding+0x36d1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4eec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4ef3:	eb 21                	jmp    4f16 <padding+0x3722>
    4ef5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4efc:	eb 0e                	jmp    4f0c <padding+0x3718>
    4efe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4f01:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4f05:	01 45 f8             	add    %eax,-0x8(%rbp)
    4f08:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4f0c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4f10:	7e ec                	jle    4efe <padding+0x370a>
    4f12:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4f16:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4f1a:	7e d9                	jle    4ef5 <padding+0x3701>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4f1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4f23:	eb 21                	jmp    4f46 <padding+0x3752>
    4f25:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4f2c:	eb 0e                	jmp    4f3c <padding+0x3748>
    4f2e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4f31:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4f35:	01 45 f8             	add    %eax,-0x8(%rbp)
    4f38:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4f3c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4f40:	7e ec                	jle    4f2e <padding+0x373a>
    4f42:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4f46:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4f4a:	7e d9                	jle    4f25 <padding+0x3731>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4f4c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4f53:	eb 21                	jmp    4f76 <padding+0x3782>
    4f55:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4f5c:	eb 0e                	jmp    4f6c <padding+0x3778>
    4f5e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4f61:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4f65:	01 45 f8             	add    %eax,-0x8(%rbp)
    4f68:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4f6c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4f70:	7e ec                	jle    4f5e <padding+0x376a>
    4f72:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4f76:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4f7a:	7e d9                	jle    4f55 <padding+0x3761>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4f7c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4f83:	eb 21                	jmp    4fa6 <padding+0x37b2>
    4f85:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4f8c:	eb 0e                	jmp    4f9c <padding+0x37a8>
    4f8e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4f91:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4f95:	01 45 f8             	add    %eax,-0x8(%rbp)
    4f98:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4f9c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4fa0:	7e ec                	jle    4f8e <padding+0x379a>
    4fa2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4fa6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4faa:	7e d9                	jle    4f85 <padding+0x3791>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4fac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4fb3:	eb 21                	jmp    4fd6 <padding+0x37e2>
    4fb5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4fbc:	eb 0e                	jmp    4fcc <padding+0x37d8>
    4fbe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4fc1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4fc5:	01 45 f8             	add    %eax,-0x8(%rbp)
    4fc8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4fcc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    4fd0:	7e ec                	jle    4fbe <padding+0x37ca>
    4fd2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4fd6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    4fda:	7e d9                	jle    4fb5 <padding+0x37c1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    4fdc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4fe3:	eb 21                	jmp    5006 <padding+0x3812>
    4fe5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4fec:	eb 0e                	jmp    4ffc <padding+0x3808>
    4fee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4ff1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    4ff5:	01 45 f8             	add    %eax,-0x8(%rbp)
    4ff8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4ffc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5000:	7e ec                	jle    4fee <padding+0x37fa>
    5002:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5006:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    500a:	7e d9                	jle    4fe5 <padding+0x37f1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    500c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5013:	eb 21                	jmp    5036 <padding+0x3842>
    5015:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    501c:	eb 0e                	jmp    502c <padding+0x3838>
    501e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5021:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5025:	01 45 f8             	add    %eax,-0x8(%rbp)
    5028:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    502c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5030:	7e ec                	jle    501e <padding+0x382a>
    5032:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5036:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    503a:	7e d9                	jle    5015 <padding+0x3821>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    503c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5043:	eb 21                	jmp    5066 <padding+0x3872>
    5045:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    504c:	eb 0e                	jmp    505c <padding+0x3868>
    504e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5051:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5055:	01 45 f8             	add    %eax,-0x8(%rbp)
    5058:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    505c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5060:	7e ec                	jle    504e <padding+0x385a>
    5062:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5066:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    506a:	7e d9                	jle    5045 <padding+0x3851>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    506c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5073:	eb 21                	jmp    5096 <padding+0x38a2>
    5075:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    507c:	eb 0e                	jmp    508c <padding+0x3898>
    507e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5081:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5085:	01 45 f8             	add    %eax,-0x8(%rbp)
    5088:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    508c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5090:	7e ec                	jle    507e <padding+0x388a>
    5092:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5096:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    509a:	7e d9                	jle    5075 <padding+0x3881>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    509c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    50a3:	eb 21                	jmp    50c6 <padding+0x38d2>
    50a5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    50ac:	eb 0e                	jmp    50bc <padding+0x38c8>
    50ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    50b1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    50b5:	01 45 f8             	add    %eax,-0x8(%rbp)
    50b8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    50bc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    50c0:	7e ec                	jle    50ae <padding+0x38ba>
    50c2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    50c6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    50ca:	7e d9                	jle    50a5 <padding+0x38b1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    50cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    50d3:	eb 21                	jmp    50f6 <padding+0x3902>
    50d5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    50dc:	eb 0e                	jmp    50ec <padding+0x38f8>
    50de:	8b 45 f4             	mov    -0xc(%rbp),%eax
    50e1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    50e5:	01 45 f8             	add    %eax,-0x8(%rbp)
    50e8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    50ec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    50f0:	7e ec                	jle    50de <padding+0x38ea>
    50f2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    50f6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    50fa:	7e d9                	jle    50d5 <padding+0x38e1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    50fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5103:	eb 21                	jmp    5126 <padding+0x3932>
    5105:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    510c:	eb 0e                	jmp    511c <padding+0x3928>
    510e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5111:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5115:	01 45 f8             	add    %eax,-0x8(%rbp)
    5118:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    511c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5120:	7e ec                	jle    510e <padding+0x391a>
    5122:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5126:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    512a:	7e d9                	jle    5105 <padding+0x3911>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    512c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5133:	eb 21                	jmp    5156 <padding+0x3962>
    5135:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    513c:	eb 0e                	jmp    514c <padding+0x3958>
    513e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5141:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5145:	01 45 f8             	add    %eax,-0x8(%rbp)
    5148:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    514c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5150:	7e ec                	jle    513e <padding+0x394a>
    5152:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5156:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    515a:	7e d9                	jle    5135 <padding+0x3941>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    515c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5163:	eb 21                	jmp    5186 <padding+0x3992>
    5165:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    516c:	eb 0e                	jmp    517c <padding+0x3988>
    516e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5171:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5175:	01 45 f8             	add    %eax,-0x8(%rbp)
    5178:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    517c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5180:	7e ec                	jle    516e <padding+0x397a>
    5182:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5186:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    518a:	7e d9                	jle    5165 <padding+0x3971>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    518c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5193:	eb 21                	jmp    51b6 <padding+0x39c2>
    5195:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    519c:	eb 0e                	jmp    51ac <padding+0x39b8>
    519e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    51a1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    51a5:	01 45 f8             	add    %eax,-0x8(%rbp)
    51a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    51ac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    51b0:	7e ec                	jle    519e <padding+0x39aa>
    51b2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    51b6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    51ba:	7e d9                	jle    5195 <padding+0x39a1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    51bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    51c3:	eb 21                	jmp    51e6 <padding+0x39f2>
    51c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    51cc:	eb 0e                	jmp    51dc <padding+0x39e8>
    51ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    51d1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    51d5:	01 45 f8             	add    %eax,-0x8(%rbp)
    51d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    51dc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    51e0:	7e ec                	jle    51ce <padding+0x39da>
    51e2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    51e6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    51ea:	7e d9                	jle    51c5 <padding+0x39d1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    51ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    51f3:	eb 21                	jmp    5216 <padding+0x3a22>
    51f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    51fc:	eb 0e                	jmp    520c <padding+0x3a18>
    51fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5201:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5205:	01 45 f8             	add    %eax,-0x8(%rbp)
    5208:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    520c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5210:	7e ec                	jle    51fe <padding+0x3a0a>
    5212:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5216:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    521a:	7e d9                	jle    51f5 <padding+0x3a01>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    521c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5223:	eb 21                	jmp    5246 <padding+0x3a52>
    5225:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    522c:	eb 0e                	jmp    523c <padding+0x3a48>
    522e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5231:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5235:	01 45 f8             	add    %eax,-0x8(%rbp)
    5238:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    523c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5240:	7e ec                	jle    522e <padding+0x3a3a>
    5242:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5246:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    524a:	7e d9                	jle    5225 <padding+0x3a31>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    524c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5253:	eb 21                	jmp    5276 <padding+0x3a82>
    5255:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    525c:	eb 0e                	jmp    526c <padding+0x3a78>
    525e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5261:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5265:	01 45 f8             	add    %eax,-0x8(%rbp)
    5268:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    526c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5270:	7e ec                	jle    525e <padding+0x3a6a>
    5272:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5276:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    527a:	7e d9                	jle    5255 <padding+0x3a61>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    527c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5283:	eb 21                	jmp    52a6 <padding+0x3ab2>
    5285:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    528c:	eb 0e                	jmp    529c <padding+0x3aa8>
    528e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5291:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5295:	01 45 f8             	add    %eax,-0x8(%rbp)
    5298:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    529c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    52a0:	7e ec                	jle    528e <padding+0x3a9a>
    52a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    52a6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    52aa:	7e d9                	jle    5285 <padding+0x3a91>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    52ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    52b3:	eb 21                	jmp    52d6 <padding+0x3ae2>
    52b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    52bc:	eb 0e                	jmp    52cc <padding+0x3ad8>
    52be:	8b 45 f4             	mov    -0xc(%rbp),%eax
    52c1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    52c5:	01 45 f8             	add    %eax,-0x8(%rbp)
    52c8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    52cc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    52d0:	7e ec                	jle    52be <padding+0x3aca>
    52d2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    52d6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    52da:	7e d9                	jle    52b5 <padding+0x3ac1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    52dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    52e3:	eb 21                	jmp    5306 <padding+0x3b12>
    52e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    52ec:	eb 0e                	jmp    52fc <padding+0x3b08>
    52ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    52f1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    52f5:	01 45 f8             	add    %eax,-0x8(%rbp)
    52f8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    52fc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5300:	7e ec                	jle    52ee <padding+0x3afa>
    5302:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5306:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    530a:	7e d9                	jle    52e5 <padding+0x3af1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    530c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5313:	eb 21                	jmp    5336 <padding+0x3b42>
    5315:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    531c:	eb 0e                	jmp    532c <padding+0x3b38>
    531e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5321:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5325:	01 45 f8             	add    %eax,-0x8(%rbp)
    5328:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    532c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5330:	7e ec                	jle    531e <padding+0x3b2a>
    5332:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5336:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    533a:	7e d9                	jle    5315 <padding+0x3b21>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    533c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5343:	eb 21                	jmp    5366 <padding+0x3b72>
    5345:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    534c:	eb 0e                	jmp    535c <padding+0x3b68>
    534e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5351:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5355:	01 45 f8             	add    %eax,-0x8(%rbp)
    5358:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    535c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5360:	7e ec                	jle    534e <padding+0x3b5a>
    5362:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5366:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    536a:	7e d9                	jle    5345 <padding+0x3b51>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    536c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5373:	eb 21                	jmp    5396 <padding+0x3ba2>
    5375:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    537c:	eb 0e                	jmp    538c <padding+0x3b98>
    537e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5381:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5385:	01 45 f8             	add    %eax,-0x8(%rbp)
    5388:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    538c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5390:	7e ec                	jle    537e <padding+0x3b8a>
    5392:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5396:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    539a:	7e d9                	jle    5375 <padding+0x3b81>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    539c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    53a3:	eb 21                	jmp    53c6 <padding+0x3bd2>
    53a5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    53ac:	eb 0e                	jmp    53bc <padding+0x3bc8>
    53ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    53b1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    53b5:	01 45 f8             	add    %eax,-0x8(%rbp)
    53b8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    53bc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    53c0:	7e ec                	jle    53ae <padding+0x3bba>
    53c2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    53c6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    53ca:	7e d9                	jle    53a5 <padding+0x3bb1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    53cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    53d3:	eb 21                	jmp    53f6 <padding+0x3c02>
    53d5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    53dc:	eb 0e                	jmp    53ec <padding+0x3bf8>
    53de:	8b 45 f4             	mov    -0xc(%rbp),%eax
    53e1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    53e5:	01 45 f8             	add    %eax,-0x8(%rbp)
    53e8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    53ec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    53f0:	7e ec                	jle    53de <padding+0x3bea>
    53f2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    53f6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    53fa:	7e d9                	jle    53d5 <padding+0x3be1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    53fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5403:	eb 21                	jmp    5426 <padding+0x3c32>
    5405:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    540c:	eb 0e                	jmp    541c <padding+0x3c28>
    540e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5411:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5415:	01 45 f8             	add    %eax,-0x8(%rbp)
    5418:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    541c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5420:	7e ec                	jle    540e <padding+0x3c1a>
    5422:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5426:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    542a:	7e d9                	jle    5405 <padding+0x3c11>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    542c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5433:	eb 21                	jmp    5456 <padding+0x3c62>
    5435:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    543c:	eb 0e                	jmp    544c <padding+0x3c58>
    543e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5441:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5445:	01 45 f8             	add    %eax,-0x8(%rbp)
    5448:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    544c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5450:	7e ec                	jle    543e <padding+0x3c4a>
    5452:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5456:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    545a:	7e d9                	jle    5435 <padding+0x3c41>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    545c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5463:	eb 21                	jmp    5486 <padding+0x3c92>
    5465:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    546c:	eb 0e                	jmp    547c <padding+0x3c88>
    546e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5471:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5475:	01 45 f8             	add    %eax,-0x8(%rbp)
    5478:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    547c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5480:	7e ec                	jle    546e <padding+0x3c7a>
    5482:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5486:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    548a:	7e d9                	jle    5465 <padding+0x3c71>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    548c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5493:	eb 21                	jmp    54b6 <padding+0x3cc2>
    5495:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    549c:	eb 0e                	jmp    54ac <padding+0x3cb8>
    549e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    54a1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    54a5:	01 45 f8             	add    %eax,-0x8(%rbp)
    54a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    54ac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    54b0:	7e ec                	jle    549e <padding+0x3caa>
    54b2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    54b6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    54ba:	7e d9                	jle    5495 <padding+0x3ca1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    54bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    54c3:	eb 21                	jmp    54e6 <padding+0x3cf2>
    54c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    54cc:	eb 0e                	jmp    54dc <padding+0x3ce8>
    54ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    54d1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    54d5:	01 45 f8             	add    %eax,-0x8(%rbp)
    54d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    54dc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    54e0:	7e ec                	jle    54ce <padding+0x3cda>
    54e2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    54e6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    54ea:	7e d9                	jle    54c5 <padding+0x3cd1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    54ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    54f3:	eb 21                	jmp    5516 <padding+0x3d22>
    54f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    54fc:	eb 0e                	jmp    550c <padding+0x3d18>
    54fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5501:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5505:	01 45 f8             	add    %eax,-0x8(%rbp)
    5508:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    550c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5510:	7e ec                	jle    54fe <padding+0x3d0a>
    5512:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5516:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    551a:	7e d9                	jle    54f5 <padding+0x3d01>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    551c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5523:	eb 21                	jmp    5546 <padding+0x3d52>
    5525:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    552c:	eb 0e                	jmp    553c <padding+0x3d48>
    552e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5531:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5535:	01 45 f8             	add    %eax,-0x8(%rbp)
    5538:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    553c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5540:	7e ec                	jle    552e <padding+0x3d3a>
    5542:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5546:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    554a:	7e d9                	jle    5525 <padding+0x3d31>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    554c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5553:	eb 21                	jmp    5576 <padding+0x3d82>
    5555:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    555c:	eb 0e                	jmp    556c <padding+0x3d78>
    555e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5561:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5565:	01 45 f8             	add    %eax,-0x8(%rbp)
    5568:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    556c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5570:	7e ec                	jle    555e <padding+0x3d6a>
    5572:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5576:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    557a:	7e d9                	jle    5555 <padding+0x3d61>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    557c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5583:	eb 21                	jmp    55a6 <padding+0x3db2>
    5585:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    558c:	eb 0e                	jmp    559c <padding+0x3da8>
    558e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5591:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5595:	01 45 f8             	add    %eax,-0x8(%rbp)
    5598:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    559c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    55a0:	7e ec                	jle    558e <padding+0x3d9a>
    55a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    55a6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    55aa:	7e d9                	jle    5585 <padding+0x3d91>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    55ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    55b3:	eb 21                	jmp    55d6 <padding+0x3de2>
    55b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    55bc:	eb 0e                	jmp    55cc <padding+0x3dd8>
    55be:	8b 45 f4             	mov    -0xc(%rbp),%eax
    55c1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    55c5:	01 45 f8             	add    %eax,-0x8(%rbp)
    55c8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    55cc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    55d0:	7e ec                	jle    55be <padding+0x3dca>
    55d2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    55d6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    55da:	7e d9                	jle    55b5 <padding+0x3dc1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    55dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    55e3:	eb 21                	jmp    5606 <padding+0x3e12>
    55e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    55ec:	eb 0e                	jmp    55fc <padding+0x3e08>
    55ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
    55f1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    55f5:	01 45 f8             	add    %eax,-0x8(%rbp)
    55f8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    55fc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5600:	7e ec                	jle    55ee <padding+0x3dfa>
    5602:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5606:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    560a:	7e d9                	jle    55e5 <padding+0x3df1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    560c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5613:	eb 21                	jmp    5636 <padding+0x3e42>
    5615:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    561c:	eb 0e                	jmp    562c <padding+0x3e38>
    561e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5621:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5625:	01 45 f8             	add    %eax,-0x8(%rbp)
    5628:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    562c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5630:	7e ec                	jle    561e <padding+0x3e2a>
    5632:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5636:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    563a:	7e d9                	jle    5615 <padding+0x3e21>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    563c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5643:	eb 21                	jmp    5666 <padding+0x3e72>
    5645:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    564c:	eb 0e                	jmp    565c <padding+0x3e68>
    564e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5651:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5655:	01 45 f8             	add    %eax,-0x8(%rbp)
    5658:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    565c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5660:	7e ec                	jle    564e <padding+0x3e5a>
    5662:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5666:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    566a:	7e d9                	jle    5645 <padding+0x3e51>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    566c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5673:	eb 21                	jmp    5696 <padding+0x3ea2>
    5675:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    567c:	eb 0e                	jmp    568c <padding+0x3e98>
    567e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5681:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5685:	01 45 f8             	add    %eax,-0x8(%rbp)
    5688:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    568c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5690:	7e ec                	jle    567e <padding+0x3e8a>
    5692:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5696:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    569a:	7e d9                	jle    5675 <padding+0x3e81>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    569c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    56a3:	eb 21                	jmp    56c6 <padding+0x3ed2>
    56a5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    56ac:	eb 0e                	jmp    56bc <padding+0x3ec8>
    56ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    56b1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    56b5:	01 45 f8             	add    %eax,-0x8(%rbp)
    56b8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    56bc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    56c0:	7e ec                	jle    56ae <padding+0x3eba>
    56c2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    56c6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    56ca:	7e d9                	jle    56a5 <padding+0x3eb1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    56cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    56d3:	eb 21                	jmp    56f6 <padding+0x3f02>
    56d5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    56dc:	eb 0e                	jmp    56ec <padding+0x3ef8>
    56de:	8b 45 f4             	mov    -0xc(%rbp),%eax
    56e1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    56e5:	01 45 f8             	add    %eax,-0x8(%rbp)
    56e8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    56ec:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    56f0:	7e ec                	jle    56de <padding+0x3eea>
    56f2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    56f6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    56fa:	7e d9                	jle    56d5 <padding+0x3ee1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    56fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5703:	eb 21                	jmp    5726 <padding+0x3f32>
    5705:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    570c:	eb 0e                	jmp    571c <padding+0x3f28>
    570e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5711:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5715:	01 45 f8             	add    %eax,-0x8(%rbp)
    5718:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    571c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5720:	7e ec                	jle    570e <padding+0x3f1a>
    5722:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5726:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    572a:	7e d9                	jle    5705 <padding+0x3f11>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    572c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5733:	eb 21                	jmp    5756 <padding+0x3f62>
    5735:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    573c:	eb 0e                	jmp    574c <padding+0x3f58>
    573e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5741:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5745:	01 45 f8             	add    %eax,-0x8(%rbp)
    5748:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    574c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5750:	7e ec                	jle    573e <padding+0x3f4a>
    5752:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5756:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    575a:	7e d9                	jle    5735 <padding+0x3f41>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    575c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5763:	eb 21                	jmp    5786 <padding+0x3f92>
    5765:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    576c:	eb 0e                	jmp    577c <padding+0x3f88>
    576e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5771:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5775:	01 45 f8             	add    %eax,-0x8(%rbp)
    5778:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    577c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5780:	7e ec                	jle    576e <padding+0x3f7a>
    5782:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5786:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    578a:	7e d9                	jle    5765 <padding+0x3f71>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    578c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5793:	eb 21                	jmp    57b6 <padding+0x3fc2>
    5795:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    579c:	eb 0e                	jmp    57ac <padding+0x3fb8>
    579e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    57a1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    57a5:	01 45 f8             	add    %eax,-0x8(%rbp)
    57a8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    57ac:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    57b0:	7e ec                	jle    579e <padding+0x3faa>
    57b2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    57b6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    57ba:	7e d9                	jle    5795 <padding+0x3fa1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    57bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    57c3:	eb 21                	jmp    57e6 <padding+0x3ff2>
    57c5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    57cc:	eb 0e                	jmp    57dc <padding+0x3fe8>
    57ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    57d1:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    57d5:	01 45 f8             	add    %eax,-0x8(%rbp)
    57d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    57dc:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    57e0:	7e ec                	jle    57ce <padding+0x3fda>
    57e2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    57e6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    57ea:	7e d9                	jle    57c5 <padding+0x3fd1>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    57ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    57f3:	eb 21                	jmp    5816 <padding+0x4022>
    57f5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    57fc:	eb 0e                	jmp    580c <padding+0x4018>
    57fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5801:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5805:	01 45 f8             	add    %eax,-0x8(%rbp)
    5808:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    580c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5810:	7e ec                	jle    57fe <padding+0x400a>
    5812:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5816:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    581a:	7e d9                	jle    57f5 <padding+0x4001>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    581c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5823:	eb 21                	jmp    5846 <padding+0x4052>
    5825:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    582c:	eb 0e                	jmp    583c <padding+0x4048>
    582e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5831:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5835:	01 45 f8             	add    %eax,-0x8(%rbp)
    5838:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    583c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5840:	7e ec                	jle    582e <padding+0x403a>
    5842:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5846:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    584a:	7e d9                	jle    5825 <padding+0x4031>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    584c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5853:	eb 21                	jmp    5876 <padding+0x4082>
    5855:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    585c:	eb 0e                	jmp    586c <padding+0x4078>
    585e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5861:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5865:	01 45 f8             	add    %eax,-0x8(%rbp)
    5868:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    586c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    5870:	7e ec                	jle    585e <padding+0x406a>
    5872:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    5876:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    587a:	7e d9                	jle    5855 <padding+0x4061>
for (i=0; i < 5; i++) { for (j=0; j < 5; j++) z += i*z; }
    587c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    5883:	eb 21                	jmp    58a6 <padding+0x40b2>
    5885:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    588c:	eb 0e                	jmp    589c <padding+0x40a8>
    588e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5891:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    5895:	01 45 f8             	add    %eax,-0x8(%rbp)
    5898:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    589c:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
    58a0:	7e ec                	jle    588e <padding+0x409a>
    58a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    58a6:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
    58aa:	7e d9                	jle    5885 <padding+0x4091>
int i, z;
#include "padding.h"
}
    58ac:	90                   	nop
    58ad:	90                   	nop
    58ae:	5d                   	pop    %rbp
    58af:	c3                   	retq   

00000000000058b0 <main_loop>:
#endif

long main_loop(unsigned seed) {
    58b0:	f3 0f 1e fa          	endbr64 
    58b4:	55                   	push   %rbp
    58b5:	48 89 e5             	mov    %rsp,%rbp
    58b8:	48 83 ec 50          	sub    $0x50,%rsp
    58bc:	89 7d bc             	mov    %edi,-0x44(%rbp)
    58bf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    58c6:	00 00 
    58c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    58cc:	31 c0                	xor    %eax,%eax
   long nread;
   char *user=NULL, *pass=NULL;
    58ce:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    58d5:	00 
    58d6:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    58dd:	00 
   unsigned ulen=0, plen=0; 
    58de:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    58e5:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   unsigned rdbufsz = LEN1 + (random() % LEN1);
    58ec:	e8 5f b9 ff ff       	callq  1250 <random@plt>
    58f1:	48 89 c1             	mov    %rax,%rcx
    58f4:	48 ba 5d d3 d8 e2 1f 	movabs $0xe939651fe2d8d35d,%rdx
    58fb:	65 39 e9 
    58fe:	48 89 c8             	mov    %rcx,%rax
    5901:	48 f7 ea             	imul   %rdx
    5904:	48 8d 04 0a          	lea    (%rdx,%rcx,1),%rax
    5908:	48 c1 f8 0a          	sar    $0xa,%rax
    590c:	48 89 c2             	mov    %rax,%rdx
    590f:	48 89 c8             	mov    %rcx,%rax
    5912:	48 c1 f8 3f          	sar    $0x3f,%rax
    5916:	48 29 c2             	sub    %rax,%rdx
    5919:	48 89 d0             	mov    %rdx,%rax
    591c:	48 69 c0 64 04 00 00 	imul   $0x464,%rax,%rax
    5923:	48 29 c1             	sub    %rax,%rcx
    5926:	48 89 c8             	mov    %rcx,%rax
    5929:	05 64 04 00 00       	add    $0x464,%eax
    592e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   char *rdbuf = (char*)alloca(rdbufsz);
    5931:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    5934:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5938:	b8 10 00 00 00       	mov    $0x10,%eax
    593d:	48 83 e8 01          	sub    $0x1,%rax
    5941:	48 01 d0             	add    %rdx,%rax
    5944:	be 10 00 00 00       	mov    $0x10,%esi
    5949:	ba 00 00 00 00       	mov    $0x0,%edx
    594e:	48 f7 f6             	div    %rsi
    5951:	48 6b c0 10          	imul   $0x10,%rax,%rax
    5955:	48 89 c2             	mov    %rax,%rdx
    5958:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    595f:	48 89 e6             	mov    %rsp,%rsi
    5962:	48 29 d6             	sub    %rdx,%rsi
    5965:	48 89 f2             	mov    %rsi,%rdx
    5968:	48 39 d4             	cmp    %rdx,%rsp
    596b:	74 12                	je     597f <main_loop+0xcf>
    596d:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    5974:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    597b:	00 00 
    597d:	eb e9                	jmp    5968 <main_loop+0xb8>
    597f:	48 89 c2             	mov    %rax,%rdx
    5982:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    5988:	48 29 d4             	sub    %rdx,%rsp
    598b:	48 89 c2             	mov    %rax,%rdx
    598e:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    5994:	48 85 d2             	test   %rdx,%rdx
    5997:	74 10                	je     59a9 <main_loop+0xf9>
    5999:	25 ff 0f 00 00       	and    $0xfff,%eax
    599e:	48 83 e8 08          	sub    $0x8,%rax
    59a2:	48 01 e0             	add    %rsp,%rax
    59a5:	48 83 08 00          	orq    $0x0,(%rax)
    59a9:	48 89 e0             	mov    %rsp,%rax
    59ac:	48 83 c0 0f          	add    $0xf,%rax
    59b0:	48 c1 e8 04          	shr    $0x4,%rax
    59b4:	48 c1 e0 04          	shl    $0x4,%rax
    59b8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   alloca(((unsigned)random()) % LEN1);
    59bc:	e8 8f b8 ff ff       	callq  1250 <random@plt>
    59c1:	89 c2                	mov    %eax,%edx
    59c3:	89 d0                	mov    %edx,%eax
    59c5:	48 69 c0 29 cb 49 07 	imul   $0x749cb29,%rax,%rax
    59cc:	48 c1 e8 20          	shr    $0x20,%rax
    59d0:	c1 e8 05             	shr    $0x5,%eax
    59d3:	69 c0 64 04 00 00    	imul   $0x464,%eax,%eax
    59d9:	29 c2                	sub    %eax,%edx
    59db:	89 d0                	mov    %edx,%eax
    59dd:	89 c0                	mov    %eax,%eax
    59df:	48 8d 50 08          	lea    0x8(%rax),%rdx
    59e3:	b8 10 00 00 00       	mov    $0x10,%eax
    59e8:	48 83 e8 01          	sub    $0x1,%rax
    59ec:	48 01 d0             	add    %rdx,%rax
    59ef:	b9 10 00 00 00       	mov    $0x10,%ecx
    59f4:	ba 00 00 00 00       	mov    $0x0,%edx
    59f9:	48 f7 f1             	div    %rcx
    59fc:	48 6b c0 10          	imul   $0x10,%rax,%rax
    5a00:	48 89 c2             	mov    %rax,%rdx
    5a03:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    5a0a:	48 89 e6             	mov    %rsp,%rsi
    5a0d:	48 29 d6             	sub    %rdx,%rsi
    5a10:	48 89 f2             	mov    %rsi,%rdx
    5a13:	48 39 d4             	cmp    %rdx,%rsp
    5a16:	74 12                	je     5a2a <main_loop+0x17a>
    5a18:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    5a1f:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    5a26:	00 00 
    5a28:	eb e9                	jmp    5a13 <main_loop+0x163>
    5a2a:	48 89 c2             	mov    %rax,%rdx
    5a2d:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    5a33:	48 29 d4             	sub    %rdx,%rsp
    5a36:	48 89 c2             	mov    %rax,%rdx
    5a39:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    5a3f:	48 85 d2             	test   %rdx,%rdx
    5a42:	74 10                	je     5a54 <main_loop+0x1a4>
    5a44:	25 ff 0f 00 00       	and    $0xfff,%eax
    5a49:	48 83 e8 08          	sub    $0x8,%rax
    5a4d:	48 01 e0             	add    %rsp,%rax
    5a50:	48 83 08 00          	orq    $0x0,(%rax)
   fprintf(stdout, "Welcome");
    5a54:	48 8b 05 05 36 00 00 	mov    0x3605(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5a5b:	48 89 c1             	mov    %rax,%rcx
    5a5e:	ba 07 00 00 00       	mov    $0x7,%edx
    5a63:	be 01 00 00 00       	mov    $0x1,%esi
    5a68:	48 8d 3d 8a 16 00 00 	lea    0x168a(%rip),%rdi        # 70f9 <_IO_stdin_used+0xf9>
    5a6f:	e8 3c b8 ff ff       	callq  12b0 <fwrite@plt>
   fflush(stdout);
    5a74:	48 8b 05 e5 35 00 00 	mov    0x35e5(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5a7b:	48 89 c7             	mov    %rax,%rdi
    5a7e:	e8 dd b7 ff ff       	callq  1260 <fflush@plt>
   do {
      err_abort((nread = read(0, rdbuf, rdbufsz-1)) >= 0);
    5a83:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    5a86:	83 e8 01             	sub    $0x1,%eax
    5a89:	89 c2                	mov    %eax,%edx
    5a8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5a8f:	48 89 c6             	mov    %rax,%rsi
    5a92:	bf 00 00 00 00       	mov    $0x0,%edi
    5a97:	e8 94 b7 ff ff       	callq  1230 <read@plt>
    5a9c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    5aa0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5aa5:	79 3d                	jns    5ae4 <main_loop+0x234>
    5aa7:	48 8b 05 d2 35 00 00 	mov    0x35d2(%rip),%rax        # 9080 <stderr@@GLIBC_2.2.5>
    5aae:	b9 70 00 00 00       	mov    $0x70,%ecx
    5ab3:	48 8d 15 18 16 00 00 	lea    0x1618(%rip),%rdx        # 70d2 <_IO_stdin_used+0xd2>
    5aba:	48 8d 35 18 16 00 00 	lea    0x1618(%rip),%rsi        # 70d9 <_IO_stdin_used+0xd9>
    5ac1:	48 89 c7             	mov    %rax,%rdi
    5ac4:	b8 00 00 00 00       	mov    $0x0,%eax
    5ac9:	e8 72 b7 ff ff       	callq  1240 <fprintf@plt>
    5ace:	48 8d 3d 19 16 00 00 	lea    0x1619(%rip),%rdi        # 70ee <_IO_stdin_used+0xee>
    5ad5:	e8 a6 b7 ff ff       	callq  1280 <perror@plt>
    5ada:	bf 01 00 00 00       	mov    $0x1,%edi
    5adf:	e8 bc b7 ff ff       	callq  12a0 <exit@plt>
      if (nread == 0) {
    5ae4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5ae9:	75 39                	jne    5b24 <main_loop+0x274>
         fprintf(stdout, "Unexpected read error: quitting");
    5aeb:	48 8b 05 6e 35 00 00 	mov    0x356e(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5af2:	48 89 c1             	mov    %rax,%rcx
    5af5:	ba 1f 00 00 00       	mov    $0x1f,%edx
    5afa:	be 01 00 00 00       	mov    $0x1,%esi
    5aff:	48 8d 3d 02 16 00 00 	lea    0x1602(%rip),%rdi        # 7108 <_IO_stdin_used+0x108>
    5b06:	e8 a5 b7 ff ff       	callq  12b0 <fwrite@plt>
         fflush(stdout);
    5b0b:	48 8b 05 4e 35 00 00 	mov    0x354e(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5b12:	48 89 c7             	mov    %rax,%rdi
    5b15:	e8 46 b7 ff ff       	callq  1260 <fflush@plt>
         return 0;
    5b1a:	b8 00 00 00 00       	mov    $0x0,%eax
    5b1f:	e9 d0 02 00 00       	jmpq   5df4 <main_loop+0x544>
      }
      rdbuf[nread] = '\0'; // null-terminate
    5b24:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5b28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b2c:	48 01 d0             	add    %rdx,%rax
    5b2f:	c6 00 00             	movb   $0x0,(%rax)
      switch (rdbuf[0]) {
    5b32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b36:	0f b6 00             	movzbl (%rax),%eax
    5b39:	0f be c0             	movsbl %al,%eax
    5b3c:	83 e8 65             	sub    $0x65,%eax
    5b3f:	83 f8 10             	cmp    $0x10,%eax
    5b42:	0f 87 d7 01 00 00    	ja     5d1f <main_loop+0x46f>
    5b48:	89 c0                	mov    %eax,%eax
    5b4a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5b51:	00 
    5b52:	48 8d 05 ef 16 00 00 	lea    0x16ef(%rip),%rax        # 7248 <_IO_stdin_used+0x248>
    5b59:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    5b5c:	48 98                	cltq   
    5b5e:	48 8d 15 e3 16 00 00 	lea    0x16e3(%rip),%rdx        # 7248 <_IO_stdin_used+0x248>
    5b65:	48 01 d0             	add    %rdx,%rax
    5b68:	3e ff e0             	notrack jmpq *%rax

      case 'e': // echo command: e <string_to_echo>
         printf(&rdbuf[2]);
    5b6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b6f:	48 83 c0 02          	add    $0x2,%rax
    5b73:	48 89 c7             	mov    %rax,%rdi
    5b76:	b8 00 00 00 00       	mov    $0x0,%eax
    5b7b:	e8 80 b6 ff ff       	callq  1200 <printf@plt>
         fflush(stdout);
    5b80:	48 8b 05 d9 34 00 00 	mov    0x34d9(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5b87:	48 89 c7             	mov    %rax,%rdi
    5b8a:	e8 d1 b6 ff ff       	callq  1260 <fflush@plt>
         break;
    5b8f:	e9 5b 02 00 00       	jmpq   5def <main_loop+0x53f>

      case 'u': // provide username
         fprintf(stdout, "User received");
    5b94:	48 8b 05 c5 34 00 00 	mov    0x34c5(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5b9b:	48 89 c1             	mov    %rax,%rcx
    5b9e:	ba 0d 00 00 00       	mov    $0xd,%edx
    5ba3:	be 01 00 00 00       	mov    $0x1,%esi
    5ba8:	48 8d 3d 79 15 00 00 	lea    0x1579(%rip),%rdi        # 7128 <_IO_stdin_used+0x128>
    5baf:	e8 fc b6 ff ff       	callq  12b0 <fwrite@plt>
         fflush(stdout);
    5bb4:	48 8b 05 a5 34 00 00 	mov    0x34a5(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5bbb:	48 89 c7             	mov    %rax,%rdi
    5bbe:	e8 9d b6 ff ff       	callq  1260 <fflush@plt>
         ulen = nread-3; // skips last char
    5bc3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5bc7:	83 e8 03             	sub    $0x3,%eax
    5bca:	89 45 cc             	mov    %eax,-0x34(%rbp)
         user = (char*)malloc(ulen);
    5bcd:	8b 45 cc             	mov    -0x34(%rbp),%eax
    5bd0:	48 89 c7             	mov    %rax,%rdi
    5bd3:	e8 08 05 00 00       	callq  60e0 <my_malloc>
    5bd8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
         bcopy(&rdbuf[2], user, ulen);
    5bdc:	8b 55 cc             	mov    -0x34(%rbp),%edx
    5bdf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5be3:	48 8d 48 02          	lea    0x2(%rax),%rcx
    5be7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5beb:	48 89 ce             	mov    %rcx,%rsi
    5bee:	48 89 c7             	mov    %rax,%rdi
    5bf1:	e8 7a b6 ff ff       	callq  1270 <memmove@plt>
         break;
    5bf6:	e9 f4 01 00 00       	jmpq   5def <main_loop+0x53f>

      case 'p': // provide password
         fprintf(stdout, "Password received");
    5bfb:	48 8b 05 5e 34 00 00 	mov    0x345e(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5c02:	48 89 c1             	mov    %rax,%rcx
    5c05:	ba 11 00 00 00       	mov    $0x11,%edx
    5c0a:	be 01 00 00 00       	mov    $0x1,%esi
    5c0f:	48 8d 3d 20 15 00 00 	lea    0x1520(%rip),%rdi        # 7136 <_IO_stdin_used+0x136>
    5c16:	e8 95 b6 ff ff       	callq  12b0 <fwrite@plt>
         fflush(stdout);
    5c1b:	48 8b 05 3e 34 00 00 	mov    0x343e(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5c22:	48 89 c7             	mov    %rax,%rdi
    5c25:	e8 36 b6 ff ff       	callq  1260 <fflush@plt>
         pass = (char*)malloc(plen);
    5c2a:	8b 45 d0             	mov    -0x30(%rbp),%eax
    5c2d:	48 89 c7             	mov    %rax,%rdi
    5c30:	e8 ab 04 00 00       	callq  60e0 <my_malloc>
    5c35:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
         plen = nread-3;
    5c39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5c3d:	83 e8 03             	sub    $0x3,%eax
    5c40:	89 45 d0             	mov    %eax,-0x30(%rbp)
         bcopy(&rdbuf[2], pass, plen);
    5c43:	8b 55 d0             	mov    -0x30(%rbp),%edx
    5c46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c4a:	48 8d 48 02          	lea    0x2(%rax),%rcx
    5c4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5c52:	48 89 ce             	mov    %rcx,%rsi
    5c55:	48 89 c7             	mov    %rax,%rdi
    5c58:	e8 13 b6 ff ff       	callq  1270 <memmove@plt>
         break;
    5c5d:	e9 8d 01 00 00       	jmpq   5def <main_loop+0x53f>

      case 'l': { // login using previously supplied username and password
         if (user != NULL && pass != NULL) {
    5c62:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    5c67:	74 58                	je     5cc1 <main_loop+0x411>
    5c69:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    5c6e:	74 51                	je     5cc1 <main_loop+0x411>
            g(user, ulen, pass, plen);
    5c70:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    5c73:	8b 75 cc             	mov    -0x34(%rbp),%esi
    5c76:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5c7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c7e:	48 89 c7             	mov    %rax,%rdi
    5c81:	e8 e3 b9 ff ff       	callq  1669 <g>
            free(pass);
    5c86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5c8a:	48 89 c7             	mov    %rax,%rdi
    5c8d:	e8 dd 04 00 00       	callq  616f <my_free>
            free(user);
    5c92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c96:	48 89 c7             	mov    %rax,%rdi
    5c99:	e8 d1 04 00 00       	callq  616f <my_free>
            user=pass=NULL;
    5c9e:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    5ca5:	00 
    5ca6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5caa:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
            ulen=0; plen=0;
    5cae:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    5cb5:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
         }
         else {
           fprintf(stdout, "vuln: Use u and p commands before logging in");
           fflush(stdout);
         }
         break;
    5cbc:	e9 2e 01 00 00       	jmpq   5def <main_loop+0x53f>
           fprintf(stdout, "vuln: Use u and p commands before logging in");
    5cc1:	48 8b 05 98 33 00 00 	mov    0x3398(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5cc8:	48 89 c1             	mov    %rax,%rcx
    5ccb:	ba 2c 00 00 00       	mov    $0x2c,%edx
    5cd0:	be 01 00 00 00       	mov    $0x1,%esi
    5cd5:	48 8d 3d 6c 14 00 00 	lea    0x146c(%rip),%rdi        # 7148 <_IO_stdin_used+0x148>
    5cdc:	e8 cf b5 ff ff       	callq  12b0 <fwrite@plt>
           fflush(stdout);
    5ce1:	48 8b 05 78 33 00 00 	mov    0x3378(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5ce8:	48 89 c7             	mov    %rax,%rdi
    5ceb:	e8 70 b5 ff ff       	callq  1260 <fflush@plt>
         break;
    5cf0:	e9 fa 00 00 00       	jmpq   5def <main_loop+0x53f>
      }

      case 'q':
         fprintf(stdout, "vuln: quitting\n");
    5cf5:	48 8b 05 64 33 00 00 	mov    0x3364(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5cfc:	48 89 c1             	mov    %rax,%rcx
    5cff:	ba 0f 00 00 00       	mov    $0xf,%edx
    5d04:	be 01 00 00 00       	mov    $0x1,%esi
    5d09:	48 8d 3d 65 14 00 00 	lea    0x1465(%rip),%rdi        # 7175 <_IO_stdin_used+0x175>
    5d10:	e8 9b b5 ff ff       	callq  12b0 <fwrite@plt>
         return 0;
    5d15:	b8 00 00 00 00       	mov    $0x0,%eax
    5d1a:	e9 d5 00 00 00       	jmpq   5df4 <main_loop+0x544>

      default:
         fprintf(stdout, "vuln: Invalid operation. Valid commands are:\n");
    5d1f:	48 8b 05 3a 33 00 00 	mov    0x333a(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5d26:	48 89 c1             	mov    %rax,%rcx
    5d29:	ba 2d 00 00 00       	mov    $0x2d,%edx
    5d2e:	be 01 00 00 00       	mov    $0x1,%esi
    5d33:	48 8d 3d 4e 14 00 00 	lea    0x144e(%rip),%rdi        # 7188 <_IO_stdin_used+0x188>
    5d3a:	e8 71 b5 ff ff       	callq  12b0 <fwrite@plt>
         fprintf(stdout, "\te <data>: echo <data>\n");
    5d3f:	48 8b 05 1a 33 00 00 	mov    0x331a(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5d46:	48 89 c1             	mov    %rax,%rcx
    5d49:	ba 17 00 00 00       	mov    $0x17,%edx
    5d4e:	be 01 00 00 00       	mov    $0x1,%esi
    5d53:	48 8d 3d 5c 14 00 00 	lea    0x145c(%rip),%rdi        # 71b6 <_IO_stdin_used+0x1b6>
    5d5a:	e8 51 b5 ff ff       	callq  12b0 <fwrite@plt>
         fprintf(stdout, "\tu <user>: enter username\n");
    5d5f:	48 8b 05 fa 32 00 00 	mov    0x32fa(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5d66:	48 89 c1             	mov    %rax,%rcx
    5d69:	ba 1a 00 00 00       	mov    $0x1a,%edx
    5d6e:	be 01 00 00 00       	mov    $0x1,%esi
    5d73:	48 8d 3d 54 14 00 00 	lea    0x1454(%rip),%rdi        # 71ce <_IO_stdin_used+0x1ce>
    5d7a:	e8 31 b5 ff ff       	callq  12b0 <fwrite@plt>
         fprintf(stdout, "\tp <pass>: enter password\n");
    5d7f:	48 8b 05 da 32 00 00 	mov    0x32da(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5d86:	48 89 c1             	mov    %rax,%rcx
    5d89:	ba 1a 00 00 00       	mov    $0x1a,%edx
    5d8e:	be 01 00 00 00       	mov    $0x1,%esi
    5d93:	48 8d 3d 4f 14 00 00 	lea    0x144f(%rip),%rdi        # 71e9 <_IO_stdin_used+0x1e9>
    5d9a:	e8 11 b5 ff ff       	callq  12b0 <fwrite@plt>
         fprintf(stdout, 
    5d9f:	48 8b 05 ba 32 00 00 	mov    0x32ba(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5da6:	48 89 c1             	mov    %rax,%rcx
    5da9:	ba 36 00 00 00       	mov    $0x36,%edx
    5dae:	be 01 00 00 00       	mov    $0x1,%esi
    5db3:	48 8d 3d 4e 14 00 00 	lea    0x144e(%rip),%rdi        # 7208 <_IO_stdin_used+0x208>
    5dba:	e8 f1 b4 ff ff       	callq  12b0 <fwrite@plt>
                 "\tl: login using previously provided username/password\n");
         fprintf(stdout, "\tq: quit");
    5dbf:	48 8b 05 9a 32 00 00 	mov    0x329a(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5dc6:	48 89 c1             	mov    %rax,%rcx
    5dc9:	ba 08 00 00 00       	mov    $0x8,%edx
    5dce:	be 01 00 00 00       	mov    $0x1,%esi
    5dd3:	48 8d 3d 65 14 00 00 	lea    0x1465(%rip),%rdi        # 723f <_IO_stdin_used+0x23f>
    5dda:	e8 d1 b4 ff ff       	callq  12b0 <fwrite@plt>
         fflush(stdout);
    5ddf:	48 8b 05 7a 32 00 00 	mov    0x327a(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5de6:	48 89 c7             	mov    %rax,%rdi
    5de9:	e8 72 b4 ff ff       	callq  1260 <fflush@plt>
         break;
    5dee:	90                   	nop
      err_abort((nread = read(0, rdbuf, rdbufsz-1)) >= 0);
    5def:	e9 8f fc ff ff       	jmpq   5a83 <main_loop+0x1d3>
      }
   } while (1);
}
    5df4:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    5df8:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    5dff:	00 00 
    5e01:	74 05                	je     5e08 <main_loop+0x558>
    5e03:	e8 d8 b3 ff ff       	callq  11e0 <__stack_chk_fail@plt>
    5e08:	c9                   	leaveq 
    5e09:	c3                   	retq   

0000000000005e0a <main>:

int main(int argc, char *argv[]) {
    5e0a:	f3 0f 1e fa          	endbr64 
    5e0e:	55                   	push   %rbp
    5e0f:	48 89 e5             	mov    %rsp,%rbp
    5e12:	48 83 ec 30          	sub    $0x30,%rsp
    5e16:	89 7d dc             	mov    %edi,-0x24(%rbp)
    5e19:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5e1d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5e24:	00 00 
    5e26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5e2a:	31 c0                	xor    %eax,%eax
   
   //unsigned minbufsz();
   //min_usize = minbufsz();

   if(argc < 2) {
    5e2c:	83 7d dc 01          	cmpl   $0x1,-0x24(%rbp)
    5e30:	7f 2a                	jg     5e5c <main+0x52>
      fprintf(stderr, "Not enough arguments\n");
    5e32:	48 8b 05 47 32 00 00 	mov    0x3247(%rip),%rax        # 9080 <stderr@@GLIBC_2.2.5>
    5e39:	48 89 c1             	mov    %rax,%rcx
    5e3c:	ba 15 00 00 00       	mov    $0x15,%edx
    5e41:	be 01 00 00 00       	mov    $0x1,%esi
    5e46:	48 8d 3d 3f 14 00 00 	lea    0x143f(%rip),%rdi        # 728c <_IO_stdin_used+0x28c>
    5e4d:	e8 5e b4 ff ff       	callq  12b0 <fwrite@plt>
      exit(0);
    5e52:	bf 00 00 00 00       	mov    $0x0,%edi
    5e57:	e8 44 b4 ff ff       	callq  12a0 <exit@plt>
   }
   unsigned seed = atoi(argv[1]);
    5e5c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5e60:	48 83 c0 08          	add    $0x8,%rax
    5e64:	48 8b 00             	mov    (%rax),%rax
    5e67:	48 89 c7             	mov    %rax,%rdi
    5e6a:	e8 21 b4 ff ff       	callq  1290 <atoi@plt>
    5e6f:	89 45 f0             	mov    %eax,-0x10(%rbp)
   srandom(seed-990); 
    5e72:	8b 45 f0             	mov    -0x10(%rbp),%eax
    5e75:	2d de 03 00 00       	sub    $0x3de,%eax
    5e7a:	89 c7                	mov    %eax,%edi
    5e7c:	e8 1f b3 ff ff       	callq  11a0 <srandom@plt>
   unsigned minbufsz();
   min_usize = minbufsz();
    5e81:	b8 00 00 00 00       	mov    $0x0,%eax
    5e86:	e8 4e 00 00 00       	callq  5ed9 <minbufsz>
    5e8b:	89 05 97 32 00 00    	mov    %eax,0x3297(%rip)        # 9128 <min_usize>

   do {
      int pid = fork();
    5e91:	e8 4a b4 ff ff       	callq  12e0 <fork@plt>
    5e96:	89 45 f4             	mov    %eax,-0xc(%rbp)
      if (pid == 0)
    5e99:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    5e9d:	75 0c                	jne    5eab <main+0xa1>
        return main_loop(seed);
    5e9f:	8b 45 f0             	mov    -0x10(%rbp),%eax
    5ea2:	89 c7                	mov    %eax,%edi
    5ea4:	e8 07 fa ff ff       	callq  58b0 <main_loop>
    5ea9:	eb 18                	jmp    5ec3 <main+0xb9>
      else {
        int status;
        wait(&status);
    5eab:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
    5eaf:	48 89 c7             	mov    %rax,%rdi
    5eb2:	e8 19 b4 ff ff       	callq  12d0 <wait@plt>
        if (status == 0)
    5eb7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    5eba:	85 c0                	test   %eax,%eax
    5ebc:	75 d3                	jne    5e91 <main+0x87>
          return 0;
    5ebe:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   } while(1);
};
    5ec3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5ec7:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    5ece:	00 00 
    5ed0:	74 05                	je     5ed7 <main+0xcd>
    5ed2:	e8 09 b3 ff ff       	callq  11e0 <__stack_chk_fail@plt>
    5ed7:	c9                   	leaveq 
    5ed8:	c3                   	retq   

0000000000005ed9 <minbufsz>:

unsigned minbufsz() {
    5ed9:	f3 0f 1e fa          	endbr64 
    5edd:	55                   	push   %rbp
    5ede:	48 89 e5             	mov    %rsp,%rbp
   return LEN2 + (random() % LEN2);
    5ee1:	e8 6a b3 ff ff       	callq  1250 <random@plt>
    5ee6:	48 99                	cqto   
    5ee8:	48 c1 ea 39          	shr    $0x39,%rdx
    5eec:	48 01 d0             	add    %rdx,%rax
    5eef:	83 e0 7f             	and    $0x7f,%eax
    5ef2:	48 29 d0             	sub    %rdx,%rax
    5ef5:	83 e8 80             	sub    $0xffffff80,%eax
};
    5ef8:	5d                   	pop    %rbp
    5ef9:	c3                   	retq   

0000000000005efa <chkPw>:

long chkPw(char *cred, char *db_entry) {
    5efa:	f3 0f 1e fa          	endbr64 
    5efe:	55                   	push   %rbp
    5eff:	48 89 e5             	mov    %rsp,%rbp
    5f02:	48 83 ec 10          	sub    $0x10,%rsp
    5f06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   return (strncmp(cred, db_entry, strlen(db_entry)) == 0);
    5f0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f12:	48 89 c7             	mov    %rax,%rdi
    5f15:	e8 b6 b2 ff ff       	callq  11d0 <strlen@plt>
    5f1a:	48 89 c2             	mov    %rax,%rdx
    5f1d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5f21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f25:	48 89 ce             	mov    %rcx,%rsi
    5f28:	48 89 c7             	mov    %rax,%rdi
    5f2b:	e8 80 b2 ff ff       	callq  11b0 <strncmp@plt>
    5f30:	85 c0                	test   %eax,%eax
    5f32:	0f 94 c0             	sete   %al
    5f35:	0f b6 c0             	movzbl %al,%eax
}
    5f38:	c9                   	leaveq 
    5f39:	c3                   	retq   

0000000000005f3a <private_helper>:

char d[128];
void private_helper(int a, long b, char* c) {
    5f3a:	f3 0f 1e fa          	endbr64 
    5f3e:	55                   	push   %rbp
    5f3f:	48 89 e5             	mov    %rsp,%rbp
    5f42:	48 83 ec 20          	sub    $0x20,%rsp
    5f46:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5f49:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f4d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   strcpy(d, c);
    5f51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f55:	48 89 c6             	mov    %rax,%rsi
    5f58:	48 8d 3d 41 31 00 00 	lea    0x3141(%rip),%rdi        # 90a0 <d>
    5f5f:	e8 5c b2 ff ff       	callq  11c0 <strcpy@plt>
   fprintf(stdout, "**** private_helper(0x%x, 0x%lx, %p \"%s\") called", 
    5f64:	48 8b 05 f5 30 00 00 	mov    0x30f5(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5f6b:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    5f6f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5f73:	8b 55 fc             	mov    -0x4(%rbp),%edx
    5f76:	4c 8d 0d 23 31 00 00 	lea    0x3123(%rip),%r9        # 90a0 <d>
    5f7d:	49 89 f0             	mov    %rsi,%r8
    5f80:	48 8d 35 21 13 00 00 	lea    0x1321(%rip),%rsi        # 72a8 <_IO_stdin_used+0x2a8>
    5f87:	48 89 c7             	mov    %rax,%rdi
    5f8a:	b8 00 00 00 00       	mov    $0x0,%eax
    5f8f:	e8 ac b2 ff ff       	callq  1240 <fprintf@plt>
           a, b, c, d);
   fflush(stdout);
    5f94:	48 8b 05 c5 30 00 00 	mov    0x30c5(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5f9b:	48 89 c7             	mov    %rax,%rdi
    5f9e:	e8 bd b2 ff ff       	callq  1260 <fflush@plt>
}
    5fa3:	90                   	nop
    5fa4:	c9                   	leaveq 
    5fa5:	c3                   	retq   

0000000000005fa6 <private_helper2>:

void private_helper2() {
    5fa6:	f3 0f 1e fa          	endbr64 
    5faa:	55                   	push   %rbp
    5fab:	48 89 e5             	mov    %rsp,%rbp
   fprintf(stdout, "*********** private_helper2 called!\n");
    5fae:	48 8b 05 ab 30 00 00 	mov    0x30ab(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5fb5:	48 89 c1             	mov    %rax,%rcx
    5fb8:	ba 24 00 00 00       	mov    $0x24,%edx
    5fbd:	be 01 00 00 00       	mov    $0x1,%esi
    5fc2:	48 8d 3d 17 13 00 00 	lea    0x1317(%rip),%rdi        # 72e0 <_IO_stdin_used+0x2e0>
    5fc9:	e8 e2 b2 ff ff       	callq  12b0 <fwrite@plt>
   fflush(stdout);
    5fce:	48 8b 05 8b 30 00 00 	mov    0x308b(%rip),%rax        # 9060 <stdout@@GLIBC_2.2.5>
    5fd5:	48 89 c7             	mov    %rax,%rdi
    5fd8:	e8 83 b2 ff ff       	callq  1260 <fflush@plt>
}
    5fdd:	90                   	nop
    5fde:	5d                   	pop    %rbp
    5fdf:	c3                   	retq   

0000000000005fe0 <heap_delete>:
heap_block* max_heap_addr;

const int free_hdr_size = sizeof(heap_block);
const int used_hdr_size = sizeof(heap_block) - 2*sizeof(void*);

void heap_delete(heap_block* current)  {
    5fe0:	f3 0f 1e fa          	endbr64 
    5fe4:	55                   	push   %rbp
    5fe5:	48 89 e5             	mov    %rsp,%rbp
    5fe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   if (current->next)
    5fec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ff0:	48 8b 40 18          	mov    0x18(%rax),%rax
    5ff4:	48 85 c0             	test   %rax,%rax
    5ff7:	74 14                	je     600d <heap_delete+0x2d>
      current->next->prev = current->prev;
    5ff9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ffd:	48 8b 40 18          	mov    0x18(%rax),%rax
    6001:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6005:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    6009:	48 89 50 10          	mov    %rdx,0x10(%rax)
   if (current->prev)
    600d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6011:	48 8b 40 10          	mov    0x10(%rax),%rax
    6015:	48 85 c0             	test   %rax,%rax
    6018:	74 14                	je     602e <heap_delete+0x4e>
      current->prev->next = current->next;
    601a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    601e:	48 8b 40 10          	mov    0x10(%rax),%rax
    6022:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6026:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    602a:	48 89 50 18          	mov    %rdx,0x18(%rax)
   if (head == current)
    602e:	48 8b 05 03 31 00 00 	mov    0x3103(%rip),%rax        # 9138 <head>
    6035:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    6039:	75 0f                	jne    604a <heap_delete+0x6a>
      head = current->next;
    603b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    603f:	48 8b 40 18          	mov    0x18(%rax),%rax
    6043:	48 89 05 ee 30 00 00 	mov    %rax,0x30ee(%rip)        # 9138 <head>
}
    604a:	90                   	nop
    604b:	5d                   	pop    %rbp
    604c:	c3                   	retq   

000000000000604d <heap_insert>:

void heap_insert(heap_block* newblock)  {
    604d:	f3 0f 1e fa          	endbr64 
    6051:	55                   	push   %rbp
    6052:	48 89 e5             	mov    %rsp,%rbp
    6055:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   newblock->in_use = 0;
    6059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    605d:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   newblock->prev = NULL;
    6063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6067:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    606e:	00 
   newblock->next = head;
    606f:	48 8b 15 c2 30 00 00 	mov    0x30c2(%rip),%rdx        # 9138 <head>
    6076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    607a:	48 89 50 18          	mov    %rdx,0x18(%rax)
   if (head != NULL)
    607e:	48 8b 05 b3 30 00 00 	mov    0x30b3(%rip),%rax        # 9138 <head>
    6085:	48 85 c0             	test   %rax,%rax
    6088:	74 0f                	je     6099 <heap_insert+0x4c>
      head->prev = newblock;
    608a:	48 8b 05 a7 30 00 00 	mov    0x30a7(%rip),%rax        # 9138 <head>
    6091:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6095:	48 89 50 10          	mov    %rdx,0x10(%rax)
   head = newblock;
    6099:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    609d:	48 89 05 94 30 00 00 	mov    %rax,0x3094(%rip)        # 9138 <head>
}
    60a4:	90                   	nop
    60a5:	5d                   	pop    %rbp
    60a6:	c3                   	retq   

00000000000060a7 <new_heap_block>:

void new_heap_block(heap_block* newblock, int size, int prev_size) {
    60a7:	f3 0f 1e fa          	endbr64 
    60ab:	55                   	push   %rbp
    60ac:	48 89 e5             	mov    %rsp,%rbp
    60af:	48 83 ec 10          	sub    $0x10,%rsp
    60b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60b7:	89 75 f4             	mov    %esi,-0xc(%rbp)
    60ba:	89 55 f0             	mov    %edx,-0x10(%rbp)
   //printf("size: %ld\n",size);
   newblock->size = size;
    60bd:	8b 55 f4             	mov    -0xc(%rbp),%edx
    60c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60c4:	89 50 04             	mov    %edx,0x4(%rax)
   newblock->prev_size = prev_size;
    60c7:	8b 55 f0             	mov    -0x10(%rbp),%edx
    60ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60ce:	89 50 08             	mov    %edx,0x8(%rax)
   heap_insert(newblock);
    60d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60d5:	48 89 c7             	mov    %rax,%rdi
    60d8:	e8 70 ff ff ff       	callq  604d <heap_insert>
}
    60dd:	90                   	nop
    60de:	c9                   	leaveq 
    60df:	c3                   	retq   

00000000000060e0 <my_malloc>:
// We use the first fit algorithm, but break up blocks that are too large.

#define roundup(size, mult)    (size) = ((size)+((mult)-1)) & (~((mult)-1) )
#define roundup_double(size)   roundup(size, 8)

void *my_malloc(size_t size) {
    60e0:	f3 0f 1e fa          	endbr64 
    60e4:	55                   	push   %rbp
    60e5:	48 89 e5             	mov    %rsp,%rbp
    60e8:	48 83 ec 20          	sub    $0x20,%rsp
    60ec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   heap_block* current = head;
    60f0:	48 8b 05 41 30 00 00 	mov    0x3041(%rip),%rax        # 9138 <head>
    60f7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

   // Find the first block 
   while (current != NULL && current->size < size)
    60fb:	eb 0c                	jmp    6109 <my_malloc+0x29>
      current = current->next;
    60fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6101:	48 8b 40 18          	mov    0x18(%rax),%rax
    6105:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   while (current != NULL && current->size < size)
    6109:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    610e:	74 0f                	je     611f <my_malloc+0x3f>
    6110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6114:	8b 40 04             	mov    0x4(%rax),%eax
    6117:	89 c0                	mov    %eax,%eax
    6119:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    611d:	77 de                	ja     60fd <my_malloc+0x1d>

   if (current == NULL) {
    611f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    6124:	75 29                	jne    614f <my_malloc+0x6f>
      // Cheat: use mmap directly if size requested is too large.
      return mmap(NULL, size, PROT_EXEC|PROT_READ|PROT_WRITE, 
    6126:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    612a:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    6130:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    6136:	b9 22 00 00 00       	mov    $0x22,%ecx
    613b:	ba 07 00 00 00       	mov    $0x7,%edx
    6140:	48 89 c6             	mov    %rax,%rsi
    6143:	bf 00 00 00 00       	mov    $0x0,%edi
    6148:	e8 a3 b0 ff ff       	callq  11f0 <mmap@plt>
    614d:	eb 1e                	jmp    616d <my_malloc+0x8d>
                         MAP_PRIVATE|MAP_ANONYMOUS, -1, 0);
      
   }

   heap_delete(current);
    614f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6153:	48 89 c7             	mov    %rax,%rdi
    6156:	e8 85 fe ff ff       	callq  5fe0 <heap_delete>
      new_heap_block(newblock, current->size - size_used, size);
      current->size = size;
   }
   */

   current->in_use = 1;
    615b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    615f:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   return (void *)(&current->prev);
    6165:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6169:	48 83 c0 10          	add    $0x10,%rax
}
    616d:	c9                   	leaveq 
    616e:	c3                   	retq   

000000000000616f <my_free>:

void my_free(void *p) {
    616f:	f3 0f 1e fa          	endbr64 
    6173:	55                   	push   %rbp
    6174:	48 89 e5             	mov    %rsp,%rbp
    6177:	48 83 ec 18          	sub    $0x18,%rsp
    617b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   heap_block* current = (heap_block*)(p-used_hdr_size);
    617f:	b8 10 00 00 00       	mov    $0x10,%eax
    6184:	48 98                	cltq   
    6186:	48 f7 d8             	neg    %rax
    6189:	48 89 c2             	mov    %rax,%rdx
    618c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6190:	48 01 d0             	add    %rdx,%rax
    6193:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   //assert(current->in_use);

   // support merging with the following block, but not with prev block
   heap_block* next = (heap_block*)(p+current->size);
    6197:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    619b:	8b 40 04             	mov    0x4(%rax),%eax
    619e:	89 c2                	mov    %eax,%edx
    61a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61a4:	48 01 d0             	add    %rdx,%rax
    61a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   if (next < max_heap_addr) {// otherwise, it is not a valid heap block
    61ab:	48 8b 05 7e 2f 00 00 	mov    0x2f7e(%rip),%rax        # 9130 <max_heap_addr>
    61b2:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    61b6:	73 34                	jae    61ec <my_free+0x7d>
      if (!next->in_use) { // it is free, let us merge
    61b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61bc:	8b 00                	mov    (%rax),%eax
    61be:	85 c0                	test   %eax,%eax
    61c0:	75 2a                	jne    61ec <my_free+0x7d>
         current->size += next->size+free_hdr_size;
    61c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    61c6:	8b 50 04             	mov    0x4(%rax),%edx
    61c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61cd:	8b 40 04             	mov    0x4(%rax),%eax
    61d0:	b9 20 00 00 00       	mov    $0x20,%ecx
    61d5:	01 c8                	add    %ecx,%eax
    61d7:	01 c2                	add    %eax,%edx
    61d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    61dd:	89 50 04             	mov    %edx,0x4(%rax)
         heap_delete(next);
    61e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61e4:	48 89 c7             	mov    %rax,%rdi
    61e7:	e8 f4 fd ff ff       	callq  5fe0 <heap_delete>
      }
   }

   heap_insert(current);
    61ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    61f0:	48 89 c7             	mov    %rax,%rdi
    61f3:	e8 55 fe ff ff       	callq  604d <heap_insert>
}
    61f8:	90                   	nop
    61f9:	c9                   	leaveq 
    61fa:	c3                   	retq   

00000000000061fb <init_heap>:

void init_heap(int default_size, int nblocks) {
    61fb:	f3 0f 1e fa          	endbr64 
    61ff:	55                   	push   %rbp
    6200:	48 89 e5             	mov    %rsp,%rbp
    6203:	48 83 ec 30          	sub    $0x30,%rsp
    6207:	89 7d dc             	mov    %edi,-0x24(%rbp)
    620a:	89 75 d8             	mov    %esi,-0x28(%rbp)
   if (default_size < 8+free_hdr_size)
    620d:	b8 20 00 00 00       	mov    $0x20,%eax
    6212:	83 c0 07             	add    $0x7,%eax
    6215:	39 45 dc             	cmp    %eax,-0x24(%rbp)
    6218:	7f 0b                	jg     6225 <init_heap+0x2a>
      default_size = 8+free_hdr_size;
    621a:	b8 20 00 00 00       	mov    $0x20,%eax
    621f:	83 c0 08             	add    $0x8,%eax
    6222:	89 45 dc             	mov    %eax,-0x24(%rbp)
   roundup_double(default_size);
    6225:	8b 45 dc             	mov    -0x24(%rbp),%eax
    6228:	83 c0 07             	add    $0x7,%eax
    622b:	83 e0 f8             	and    $0xfffffff8,%eax
    622e:	89 45 dc             	mov    %eax,-0x24(%rbp)

   size_t s = default_size*nblocks;
    6231:	8b 45 dc             	mov    -0x24(%rbp),%eax
    6234:	0f af 45 d8          	imul   -0x28(%rbp),%eax
    6238:	48 98                	cltq   
    623a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   roundup(s, 4096);
    623e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6242:	48 05 ff 0f 00 00    	add    $0xfff,%rax
    6248:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    624e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)

   heap_block* hh = mmap(NULL, s, PROT_EXEC|PROT_READ|PROT_WRITE, 
    6252:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6256:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    625c:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    6262:	b9 22 00 00 00       	mov    $0x22,%ecx
    6267:	ba 07 00 00 00       	mov    $0x7,%edx
    626c:	48 89 c6             	mov    %rax,%rsi
    626f:	bf 00 00 00 00       	mov    $0x0,%edi
    6274:	e8 77 af ff ff       	callq  11f0 <mmap@plt>
    6279:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
                         MAP_PRIVATE|MAP_ANONYMOUS, -1, 0);
   assert(hh != NULL);
    627d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    6282:	75 1f                	jne    62a3 <init_heap+0xa8>
    6284:	48 8d 0d 9d 10 00 00 	lea    0x109d(%rip),%rcx        # 7328 <__PRETTY_FUNCTION__.2598>
    628b:	ba 62 00 00 00       	mov    $0x62,%edx
    6290:	48 8d 35 79 10 00 00 	lea    0x1079(%rip),%rsi        # 7310 <used_hdr_size+0x4>
    6297:	48 8d 3d 7e 10 00 00 	lea    0x107e(%rip),%rdi        # 731c <used_hdr_size+0x10>
    629e:	e8 6d af ff ff       	callq  1210 <__assert_fail@plt>
   max_heap_addr = (heap_block*)(((void*)hh)+s);
    62a3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    62a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    62ab:	48 01 d0             	add    %rdx,%rax
    62ae:	48 89 05 7b 2e 00 00 	mov    %rax,0x2e7b(%rip)        # 9130 <max_heap_addr>

   size_t blksize = s/nblocks;
    62b5:	8b 45 d8             	mov    -0x28(%rbp),%eax
    62b8:	48 63 f0             	movslq %eax,%rsi
    62bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    62bf:	ba 00 00 00 00       	mov    $0x0,%edx
    62c4:	48 f7 f6             	div    %rsi
    62c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   //fprintf(stderr,"Heap block size: %d\n",sizeof(heap_block));
   //fprintf(stderr,"Blk size: %ld used hdr size: %d\n",blksize,used_hdr_size);
   for (int i=0; i < nblocks; i++) {
    62cb:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    62d2:	eb 3c                	jmp    6310 <init_heap+0x115>
      new_heap_block(hh, blksize-used_hdr_size, blksize-used_hdr_size);
    62d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62d8:	89 c2                	mov    %eax,%edx
    62da:	b8 10 00 00 00       	mov    $0x10,%eax
    62df:	29 c2                	sub    %eax,%edx
    62e1:	89 d0                	mov    %edx,%eax
    62e3:	89 c2                	mov    %eax,%edx
    62e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62e9:	89 c1                	mov    %eax,%ecx
    62eb:	b8 10 00 00 00       	mov    $0x10,%eax
    62f0:	29 c1                	sub    %eax,%ecx
    62f2:	89 c8                	mov    %ecx,%eax
    62f4:	89 c1                	mov    %eax,%ecx
    62f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62fa:	89 ce                	mov    %ecx,%esi
    62fc:	48 89 c7             	mov    %rax,%rdi
    62ff:	e8 a3 fd ff ff       	callq  60a7 <new_heap_block>
      hh = ((void*)hh) + blksize;
    6304:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6308:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   for (int i=0; i < nblocks; i++) {
    630c:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    6310:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    6313:	3b 45 d8             	cmp    -0x28(%rbp),%eax
    6316:	7c bc                	jl     62d4 <init_heap+0xd9>
   }
}
    6318:	90                   	nop
    6319:	90                   	nop
    631a:	c9                   	leaveq 
    631b:	c3                   	retq   

000000000000631c <initheap>:

__attribute__((constructor))
static void initheap() {
    631c:	f3 0f 1e fa          	endbr64 
    6320:	55                   	push   %rbp
    6321:	48 89 e5             	mov    %rsp,%rbp
   init_heap(LEN3, 512);
    6324:	be 00 02 00 00       	mov    $0x200,%esi
    6329:	bf 00 02 00 00       	mov    $0x200,%edi
    632e:	e8 c8 fe ff ff       	callq  61fb <init_heap>
}
    6333:	90                   	nop
    6334:	5d                   	pop    %rbp
    6335:	c3                   	retq   
    6336:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    633d:	00 00 00 

0000000000006340 <__libc_csu_init>:
    6340:	f3 0f 1e fa          	endbr64 
    6344:	41 57                	push   %r15
    6346:	4c 8d 3d bb 29 00 00 	lea    0x29bb(%rip),%r15        # 8d08 <__frame_dummy_init_array_entry>
    634d:	41 56                	push   %r14
    634f:	49 89 d6             	mov    %rdx,%r14
    6352:	41 55                	push   %r13
    6354:	49 89 f5             	mov    %rsi,%r13
    6357:	41 54                	push   %r12
    6359:	41 89 fc             	mov    %edi,%r12d
    635c:	55                   	push   %rbp
    635d:	48 8d 2d b4 29 00 00 	lea    0x29b4(%rip),%rbp        # 8d18 <__do_global_dtors_aux_fini_array_entry>
    6364:	53                   	push   %rbx
    6365:	4c 29 fd             	sub    %r15,%rbp
    6368:	48 83 ec 08          	sub    $0x8,%rsp
    636c:	e8 8f ac ff ff       	callq  1000 <_init>
    6371:	48 c1 fd 03          	sar    $0x3,%rbp
    6375:	74 1f                	je     6396 <__libc_csu_init+0x56>
    6377:	31 db                	xor    %ebx,%ebx
    6379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6380:	4c 89 f2             	mov    %r14,%rdx
    6383:	4c 89 ee             	mov    %r13,%rsi
    6386:	44 89 e7             	mov    %r12d,%edi
    6389:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    638d:	48 83 c3 01          	add    $0x1,%rbx
    6391:	48 39 dd             	cmp    %rbx,%rbp
    6394:	75 ea                	jne    6380 <__libc_csu_init+0x40>
    6396:	48 83 c4 08          	add    $0x8,%rsp
    639a:	5b                   	pop    %rbx
    639b:	5d                   	pop    %rbp
    639c:	41 5c                	pop    %r12
    639e:	41 5d                	pop    %r13
    63a0:	41 5e                	pop    %r14
    63a2:	41 5f                	pop    %r15
    63a4:	c3                   	retq   
    63a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    63ac:	00 00 00 00 

00000000000063b0 <__libc_csu_fini>:
    63b0:	f3 0f 1e fa          	endbr64 
    63b4:	c3                   	retq   

Disassembly of section .fini:

00000000000063b8 <_fini>:
    63b8:	f3 0f 1e fa          	endbr64 
    63bc:	48 83 ec 08          	sub    $0x8,%rsp
    63c0:	48 83 c4 08          	add    $0x8,%rsp
    63c4:	c3                   	retq   
